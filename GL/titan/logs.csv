fileName,RevisionId,Date,Author,Comment
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndexTest.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneExample.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneExample.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneExample.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneExample.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneBerkeleyDBTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneBerkeleyDBTest.java","65361de5ecc2f63e0a69dbcd1370847c800b5cc7","Tue, 30 Apr 2013 21:12:49 -0700","Matthias Broecheler","Automatic lower-casing of queries. Fixes #228. Fixed Lucene dependency problem."
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneBerkeleyDBTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-lucene/src/test/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneBerkeleyDBTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","d53d3f6c94b91f777fdc3dcbb4f8fa3a559ca1ac","Thu, 8 Aug 2013 16:07:59 -0700","Matthias Broecheler","Encoded edge id as delta (similar to how the other vertex id is encoded)"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","65361de5ecc2f63e0a69dbcd1370847c800b5cc7","Tue, 30 Apr 2013 21:12:49 -0700","Matthias Broecheler","Automatic lower-casing of queries. Fixes #228. Fixed Lucene dependency problem."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","ea0027bd43653789c51d148c036993a63291a44a","Sun, 3 Mar 2013 19:03:26 -0800","Matthias Broecheler","Converted exception thrown when max result size is exceeded to warning and returning top results."
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-lucene/src/main/java/com/thinkaurelius/titan/diskstorage/lucene/LuceneIndex.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","7b6b347347224bb73fe51dec4f2ab4d23d81ae45","Wed, 19 Jun 2013 02:35:34 -0400","Dan LaRocque","Minor style changes"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedLockKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","7b6b347347224bb73fe51dec4f2ab4d23d81ae45","Wed, 19 Jun 2013 02:35:34 -0400","Dan LaRocque","Minor style changes"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedMultiWriteKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","22500d4f32d6f1fe9f1fb056d55248ef7d35ec9e","Wed, 21 Aug 2013 16:56:19 -0400","Dan LaRocque","Merge branch 'performance-test'"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","a1dfd56e8e8821462ff2ea4a5ca449bc6fe940e6","Fri, 2 Aug 2013 14:51:12 -0700","Pavel Yaskevich","merge with master"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","04b50b0bdbf78e88f17eca6ba381fc7f64f323f6","Thu, 21 Mar 2013 14:36:34 -0700","Matthias Broecheler","Enabled local partitioning in embeded cassandra and improved log output in VertexIDAssigner"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","5fafe91a1a9c268cffd3a71455236a161f314e54","Sat, 16 Feb 2013 15:19:06 -0800","Matthias Broecheler","added simple performance test for key column value store"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","d42031da90b41e95302295127c52cd7cd5747018","Wed, 9 Jan 2013 21:30:34 -0800","Pavel Yaskevich","run internal tests isolated and resurect testConfiguration for ICEKCVTest"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/InternalCassandraEmbeddedIDAllocationTest.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","38b85bc2f9bcfd24947c80fb51c229c3de12facb","Fri, 4 Apr 2014 14:35:20 -0700","Pavel Yaskevich","use all of the listed hosts for Thrift connection pool"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","8698501d8b73cffee185288b812a76f1f878d6f4","Fri, 15 Nov 2013 11:45:33 -0500","Dan LaRocque","Update external cassandra process starter config"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","36b73e233f6a3a5f0070d1bd1fc75208f8c4dfc6","Mon, 29 Jul 2013 15:46:12 -0400","Dan LaRocque","Cassandra test class simplification"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraProcessStarter.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraLockKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraThriftMultiWriteKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/InternalCassandraIDAllocationTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxIDAllocationTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxLockKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","893c4e53f8b8e00732ac9a6ca95ab4301000bb33","Mon, 29 Jul 2013 16:13:10 -0400","Dan LaRocque","InternalAstyanaxKCVTest import cleanup"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/InternalAstyanaxMultiWriteKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraKeyColumnValueStoreTest.java","b1bae1eb9ce70bd13087481479c895dcf7216ddb","Thu, 3 Oct 2013 11:26:18 -0400","Dan LaRocque","Commit cleanup in AbstractCassandraKCVSTest"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraKeyColumnValueStoreTest.java","16212efb6c2a213b0c13104864ffc830c41db7c9","Thu, 3 Oct 2013 11:21:58 -0400","Dan LaRocque","Rewrite getKeys methods in CassandraThrift"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraKeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraKeyColumnValueStoreTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraKeyColumnValueStoreTest.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/UUIDTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/diskstorage/cassandra/UUIDTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/InternalCassandraBlueprintsTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/blueprints/EmbeddedCassandraBlueprintsTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphMemoryPerformanceTest.java","2708127645fe12f758f7e84edc0538c1bf769675","Tue, 8 Oct 2013 22:21:53 -0400","Dan LaRocque","Rename Cassandra memory stress test"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","66a3912a272ec158e4a9a084173cb7ec65d11394","Mon, 12 Aug 2013 23:45:23 -0400","Dan LaRocque","Reenabling performance and concurrent JUB tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","3f689bb9ba379270b8f08776d63eda636ae0ea4b","Mon, 12 Aug 2013 16:50:36 -0400","Dan LaRocque","Temporary performance testing changes"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphConcurrentTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","e871add0cbdfdc52cf5475b2f62019fb3a35016a","Thu, 2 May 2013 13:28:24 -0700","Matthias Broecheler","Added test case for #213. Made Cassandra key iteration configuration adjust to the Partitioner"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedGraphTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/embedded/InternalCassandraEmbeddedEventualGraphTest.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphPerformanceMemoryTest.java","d4974bc23c081fb39f02c614d367dfbeddb74b9f","Fri, 15 Nov 2013 22:55:19 -0500","Dan LaRocque","Adding two new Cassandra memory test subclasses"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","66a3912a272ec158e4a9a084173cb7ec65d11394","Mon, 12 Aug 2013 23:45:23 -0400","Dan LaRocque","Reenabling performance and concurrent JUB tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","3f689bb9ba379270b8f08776d63eda636ae0ea4b","Mon, 12 Aug 2013 16:50:36 -0400","Dan LaRocque","Temporary performance testing changes"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphConcurrentTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphSerialSpeedTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphSerialSpeedTest.java","b16a34e91b8a2a6e6e0724df8a25eb8f3906ac5e","Mon, 30 Sep 2013 01:07:04 -0400","Dan LaRocque","Renaming Groovy-based performance test"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphMetricsTest.java","8acf32098721d8b72223b48a6458a4661a458f8d","Mon, 23 Dec 2013 16:21:06 -0500","Dan LaRocque","Test import cleanup"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphMetricsTest.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraGraphCacheTest.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraEventualGraphTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/thrift/InternalCassandraEventualGraphTest.java","b7c3aa150bd268d5cb2c5cc50bb0a273eb16ff4e","Wed, 25 Sep 2013 19:04:35 -0700","Matthias Broecheler","Added test case for #329."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","66a3912a272ec158e4a9a084173cb7ec65d11394","Mon, 12 Aug 2013 23:45:23 -0400","Dan LaRocque","Reenabling performance and concurrent JUB tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","3f689bb9ba379270b8f08776d63eda636ae0ea4b","Mon, 12 Aug 2013 16:50:36 -0400","Dan LaRocque","Temporary performance testing changes"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphConcurrentTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphPerformanceMemoryTest.java","d4974bc23c081fb39f02c614d367dfbeddb74b9f","Fri, 15 Nov 2013 22:55:19 -0500","Dan LaRocque","Adding two new Cassandra memory test subclasses"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/graphdb/astyanax/InternalAstyanaxGraphTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","12e1a1e6fbe007ebe39da7eabcaeda993c51e56c","Thu, 5 Dec 2013 00:27:52 -0500","Dan LaRocque","Increase HBase and Cassandra timeouts in testing"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","36b73e233f6a3a5f0070d1bd1fc75208f8c4dfc6","Mon, 29 Jul 2013 15:46:12 -0400","Dan LaRocque","Cassandra test class simplification"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","a46e0ee8b2eba419167f4ae5a0d131c5f862ea57","Tue, 4 Jun 2013 14:09:36 -0400","Dan LaRocque","Disable Metrics console dump in default test cfg"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","cf981127bcf88a6f6b6c160104ce6e97c2c37554","Thu, 2 May 2013 14:38:46 -0700","Matthias Broecheler","Added in-transaction index for newly added vertex properties. Fixes #215"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","e871add0cbdfdc52cf5475b2f62019fb3a35016a","Thu, 2 May 2013 13:28:24 -0700","Matthias Broecheler","Added test case for #213. Made Cassandra key iteration configuration adjust to the Partitioner"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","667972923564fadffd2328708a6c38b67d7cdf47","Fri, 4 Jan 2013 15:30:15 -0800","Matthias Broecheler","Needed to change yaml path. This finalizes the pom refactoring. Tests are passing again. Fixes #120."
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/CassandraStorageSetup.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/test/java/com/thinkaurelius/titan/testcategory/StandaloneTests.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","d56267d3f843d3d8794ddf9ab69f8d6d501efe81","Mon, 11 Nov 2013 12:58:25 -0800","Matthias Broecheler","Pulled authentication to DistributedStoreManager."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","cedae2b44399215fe746aeb04d6fd2df1573ae09","Tue, 29 Oct 2013 17:49:54 -0700","Matthias Broecheler","Fixed StoreFeatures for Cassandra."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","322d066512ce2dcadca839028e8c804b7028dd76","Thu, 3 Oct 2013 06:43:25 -0400","Dan LaRocque","Add Cass storemgr method to get IPartitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","2444332ba9f69f2f19d5c547af829cab50b33eda","Tue, 1 Oct 2013 00:49:11 -0400","Dan LaRocque","Renaming Cassandra compression config keys"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","3739a338be79232d38a79a2fb2c7d0f0e7924dcb","Tue, 1 Oct 2013 00:13:49 -0400","Dan LaRocque","Refactor Cassandra's sstable_compression config"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","c67b4947277ce3421c06e3b6d3bddf1f00b1ebc3","Mon, 30 Sep 2013 23:58:27 -0400","Dan LaRocque","Merge branch 'master' of https://github.com/mamccr/titan into mamccr-master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","8b66404375d10dfab2469019b9f1cc9f3708c72e","Mon, 30 Sep 2013 23:43:02 -0400","Dan LaRocque","Merge branch 'issue_379'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","b765bb432f89031dbcc257752923634e4874d0c9","Mon, 30 Sep 2013 16:17:48 -0400","Mark McCraw","Making Cassandra compression algorithm configurable via two new configuration properties (storage.sstable-compressor and storage.compression-chunk-length)"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","93b011f84508af4f0ddb997cf4bfb6ded46a554d","Sun, 29 Sep 2013 22:29:29 -0700","Pavel Yaskevich","add configuration options to control Cassandra compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","111b7ee163ab1e5a98a2648578bc23855471d733","Sun, 8 Sep 2013 16:20:18 -0700","Pavel Yaskevich","fix cassandra.thrift.frame_size_mb option to accept numberic values from configuration"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","71044644dbf0f3279a5dfc7e31bb64e01adf4838","Mon, 27 May 2013 20:12:30 -0400","Dan LaRocque","Thrift import, compiler warning, and timer cleanup"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","ad8460d438d3a4166d4d0e55d45ce0308ce44ed9","Sun, 5 May 2013 15:16:45 -0700","Matthias Broecheler","Enabled proper vertex iteration for BoP Cassandra backend. Fixes #258"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","e871add0cbdfdc52cf5475b2f62019fb3a35016a","Thu, 2 May 2013 13:28:24 -0700","Matthias Broecheler","Added test case for #213. Made Cassandra key iteration configuration adjust to the Partitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","533c43fd66a9e1fe9a0f9c1604d875f9802ca568","Fri, 22 Feb 2013 17:06:53 -0800","Pavel Yaskevich","change get/set properties to use dedicated C* CF"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/AbstractCassandraStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","ff03b4ff7e8a7c151e4973b0ab4f91a90755bfa2","Sat, 26 Oct 2013 23:24:49 -0700","Matthias Broecheler","Fixes #417."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","8b1963b0e7b7ddbb262f03cbcddf205b6823662a","Mon, 30 Sep 2013 14:47:23 -0400","Dan LaRocque","Removing old method from embedded store"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","d1f7600ac12d91e03ae8f271acb88106124de8b5","Mon, 5 Aug 2013 16:57:22 -0700","Pavel Yaskevich","fix infinite loop in embedded cassandra row iterator"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","3ed3d1ca287fa21ed52e4e1f2053f4dccc8da83a","Thu, 20 Jun 2013 23:22:24 -0700","Pavel Yaskevich","add getKeys(SliceQuery) test for all of the backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","09986e9e77a04c51db4cccb94ecc501d2bbe6b44","Mon, 10 Jun 2013 16:33:44 -0700","Pavel Yaskevich","HBase getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations + small changes in Cassandra ones"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","13882f9092c2dadfbcbd0e1bc70694ef7f462136","Tue, 4 Jun 2013 21:37:18 -0700","Pavel Yaskevich","Embedded Cassandra getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","ad8460d438d3a4166d4d0e55d45ce0308ce44ed9","Sun, 5 May 2013 15:16:45 -0700","Matthias Broecheler","Enabled proper vertex iteration for BoP Cassandra backend. Fixes #258"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","d8a6b692b92926cb434e790b926eeaf268167838","Thu, 11 Apr 2013 19:34:13 -0700","Pavel Yaskevich","fix embedded C* range slice tombstone identification"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","e871add0cbdfdc52cf5475b2f62019fb3a35016a","Thu, 2 May 2013 13:28:24 -0700","Matthias Broecheler","Added test case for #213. Made Cassandra key iteration configuration adjust to the Partitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","f2d66f6586d909b032c92ea404da5efd6d34b64a","Mon, 25 Feb 2013 12:52:45 -0800","Matthias Broecheler","Refactoring of storage backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","533c43fd66a9e1fe9a0f9c1604d875f9802ca568","Fri, 22 Feb 2013 17:06:53 -0800","Pavel Yaskevich","change get/set properties to use dedicated C* CF"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","483887dd28c0bebc246e6c50ef850a68f9c8a52e","Mon, 11 Nov 2013 16:53:30 -0500","Dan LaRocque","Merge branch 'master' into infinispan"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","a3a3aca7421dffa8de5d0ed747ec45ca238d183a","Sat, 9 Nov 2013 17:09:26 -0800","Matthias Broecheler","Removed erroneous warning message for thrift frame size."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","896fc61259515284638f0e425699e699c7498db0","Fri, 8 Nov 2013 16:12:26 -0500","Dan LaRocque","Refcount-based embedded Cassandra shutdown logic"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","3facde8f263dc7261b26c197252d79df6b34fc07","Thu, 3 Oct 2013 11:26:44 -0400","Dan LaRocque","Import, warning, and loglevel cleanups"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","322d066512ce2dcadca839028e8c804b7028dd76","Thu, 3 Oct 2013 06:43:25 -0400","Dan LaRocque","Add Cass storemgr method to get IPartitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","1e68ff2dedd18ddbda18870715d631efbb3bec5a","Tue, 1 Oct 2013 00:38:26 -0400","Dan LaRocque","Refactoring CF compression in embedded Cassandra"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","3739a338be79232d38a79a2fb2c7d0f0e7924dcb","Tue, 1 Oct 2013 00:13:49 -0400","Dan LaRocque","Refactor Cassandra's sstable_compression config"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","c67b4947277ce3421c06e3b6d3bddf1f00b1ebc3","Mon, 30 Sep 2013 23:58:27 -0400","Dan LaRocque","Merge branch 'master' of https://github.com/mamccr/titan into mamccr-master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","b765bb432f89031dbcc257752923634e4874d0c9","Mon, 30 Sep 2013 16:17:48 -0400","Mark McCraw","Making Cassandra compression algorithm configurable via two new configuration properties (storage.sstable-compressor and storage.compression-chunk-length)"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","508da4289e64723f33e5cf7457fecd516d4673ca","Mon, 30 Sep 2013 12:18:49 -0700","Matthias Broecheler","Merged embedded cassandra in."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","17cae092da8903211e4a657c1d02c615c7b008d3","Sun, 29 Sep 2013 23:07:35 -0400","Dan LaRocque","Restoring embedded Cassandra adapter"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","a607f92091a7e79a80a5085aa56f3e0a290f2545","Mon, 29 Jul 2013 15:02:32 -0400","Dan LaRocque","Log statement change"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","26d0e857cfecf514465794f0493919a811ae029a","Sun, 5 May 2013 23:20:54 -0700","Matthias Broecheler","Added option to have Embedded store manager sleep for a configured number of ms to give the cluster a chance to settle in before attempting any operation against it. Fixes #236."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","b31a02e46b3d9d4f92ad9a5bb5e5fe5ed74ab062","Fri, 19 Apr 2013 16:14:43 -0700","Matthias Broecheler","removed duplicate duplicate() and unnecessary synchronized block"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","04b50b0bdbf78e88f17eca6ba381fc7f64f323f6","Thu, 21 Mar 2013 14:36:34 -0700","Matthias Broecheler","Enabled local partitioning in embeded cassandra and improved log output in VertexIDAssigner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","0847d8fb23805512fba068238c72bbed33870e1a","Thu, 21 Mar 2013 02:31:46 -0400","Dan LaRocque","thrift and embedded cassandra: enable compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","533c43fd66a9e1fe9a0f9c1604d875f9802ca568","Fri, 22 Feb 2013 17:06:53 -0800","Pavel Yaskevich","change get/set properties to use dedicated C* CF"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","180d1c30c354595999807935cd7e5b8110063310","Mon, 4 Feb 2013 12:28:58 -0800","Pavel Yaskevich","add default cassandra.yaml"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/embedded/CassandraEmbeddedStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/CassandraTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnection.java","38b85bc2f9bcfd24947c80fb51c229c3de12facb","Fri, 4 Apr 2014 14:35:20 -0700","Pavel Yaskevich","use all of the listed hosts for Thrift connection pool"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnection.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnection.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnection.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnection.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionPool.java","38b85bc2f9bcfd24947c80fb51c229c3de12facb","Fri, 4 Apr 2014 14:35:20 -0700","Pavel Yaskevich","use all of the listed hosts for Thrift connection pool"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionPool.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionPool.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionPool.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionPool.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","38b85bc2f9bcfd24947c80fb51c229c3de12facb","Fri, 4 Apr 2014 14:35:20 -0700","Pavel Yaskevich","use all of the listed hosts for Thrift connection pool"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/thriftpool/CTConnectionFactory.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","54c758f2b8ffa6ed66d48aa08c321676cc5df41f","Wed, 4 Dec 2013 13:41:59 -0800","Pavel Yaskevich","don't hold on to the borrowed connections in Cassandra Thrift iterators"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","cbd83c0c567a0916cd370cd1ea79f4e3ffc9deaa","Fri, 4 Oct 2013 18:03:45 -0400","Dan LaRocque","Deleting commented code"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","953dcebd348698c5e9a3bbb260614dc0313ce6e3","Thu, 3 Oct 2013 11:27:27 -0400","Dan LaRocque","Obsolete commented code deletion"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","3facde8f263dc7261b26c197252d79df6b34fc07","Thu, 3 Oct 2013 11:26:44 -0400","Dan LaRocque","Import, warning, and loglevel cleanups"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","16212efb6c2a213b0c13104864ffc830c41db7c9","Thu, 3 Oct 2013 11:21:58 -0400","Dan LaRocque","Rewrite getKeys methods in CassandraThrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","cebf5fdfd96ab8db36207fe2f52cb64b6e31fe89","Wed, 2 Oct 2013 22:02:03 -0400","Dan LaRocque","Make BytesToken format hack safe on other tokens"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","8774c847c7b50c8338cc0bfe946f40681a8884d3","Wed, 25 Sep 2013 04:42:21 -0400","Dan LaRocque","Trying five BB.duplicate() removals w/ Cassandra"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","5a386c01c8740cf3e7bf6638a02f97868d2d972c","Mon, 9 Sep 2013 07:27:36 -0400","Dan LaRocque","Removing vestigial metrics use in CassandraThrift*"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","ca14a85e01e88b3d170ee369b2b1bbeac598c5cf","Fri, 6 Sep 2013 21:03:32 -0700","Pavel Yaskevich","fix ordering of the results in multiget_slice query for astyanax/thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","3ed3d1ca287fa21ed52e4e1f2053f4dccc8da83a","Thu, 20 Jun 2013 23:22:24 -0700","Pavel Yaskevich","add getKeys(SliceQuery) test for all of the backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","804ee750fc6ccbac6737b1117b1429b6047c301e","Thu, 20 Jun 2013 16:56:14 -0700","Pavel Yaskevich","fix Astyanax getKeys(...) dispatch when SliceQuery is null"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","93a5dc4bf0b12e72c34bb2849d2eac9b823af5ee","Wed, 19 Jun 2013 15:24:19 -0700","Pavel Yaskevich","merge with master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","09986e9e77a04c51db4cccb94ecc501d2bbe6b44","Mon, 10 Jun 2013 16:33:44 -0700","Pavel Yaskevich","HBase getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations + small changes in Cassandra ones"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","b86cd6a380553cee02935198d6dd46baee685ed3","Sun, 2 Jun 2013 17:45:21 -0700","Pavel Yaskevich","Cassandra Thrift getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","71044644dbf0f3279a5dfc7e31bb64e01adf4838","Mon, 27 May 2013 20:12:30 -0400","Dan LaRocque","Thrift import, compiler warning, and timer cleanup"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","54b2b1bae566832433c6c20393956a1d6849508c","Thu, 23 May 2013 21:09:40 -0400","Dan LaRocque","Testing Metrics on Thrift Cassandra backend"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","1a0990e97d57d7c3cdd0cee210d4f7992593862b","Fri, 10 May 2013 00:40:44 -0400","Dan LaRocque","Fix Cassandra Thrift end boundary handling"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","233f9ca46860990035483f1784c67cee1ff758cc","Thu, 7 Mar 2013 19:41:56 -0800","Matthias Broecheler","organized imports"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","f2d66f6586d909b032c92ea404da5efd6d34b64a","Mon, 25 Feb 2013 12:52:45 -0800","Matthias Broecheler","Refactoring of storage backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","38b85bc2f9bcfd24947c80fb51c229c3de12facb","Fri, 4 Apr 2014 14:35:20 -0700","Pavel Yaskevich","use all of the listed hosts for Thrift connection pool"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","492648a8cf1809e3509e569d7886121238958c10","Sat, 5 Oct 2013 07:39:41 -0400","Dan LaRocque","Logging tweaks in Cassandra's clearStorage()"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","c4d2781bdff38dd890826fe10edd3ddd6cd95842","Thu, 3 Oct 2013 11:35:37 -0400","Dan LaRocque","Import and warning cleanup in CassandraThriftStore"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","322d066512ce2dcadca839028e8c804b7028dd76","Thu, 3 Oct 2013 06:43:25 -0400","Dan LaRocque","Add Cass storemgr method to get IPartitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","3739a338be79232d38a79a2fb2c7d0f0e7924dcb","Tue, 1 Oct 2013 00:13:49 -0400","Dan LaRocque","Refactor Cassandra's sstable_compression config"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","c67b4947277ce3421c06e3b6d3bddf1f00b1ebc3","Mon, 30 Sep 2013 23:58:27 -0400","Dan LaRocque","Merge branch 'master' of https://github.com/mamccr/titan into mamccr-master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","8b66404375d10dfab2469019b9f1cc9f3708c72e","Mon, 30 Sep 2013 23:43:02 -0400","Dan LaRocque","Merge branch 'issue_379'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","b765bb432f89031dbcc257752923634e4874d0c9","Mon, 30 Sep 2013 16:17:48 -0400","Mark McCraw","Making Cassandra compression algorithm configurable via two new configuration properties (storage.sstable-compressor and storage.compression-chunk-length)"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","93b011f84508af4f0ddb997cf4bfb6ded46a554d","Sun, 29 Sep 2013 22:29:29 -0700","Pavel Yaskevich","add configuration options to control Cassandra compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","5a386c01c8740cf3e7bf6638a02f97868d2d972c","Mon, 9 Sep 2013 07:27:36 -0400","Dan LaRocque","Removing vestigial metrics use in CassandraThrift*"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","a1b3e7b4ad208bdabd2867fb4e026501c2e52e8b","Tue, 27 Aug 2013 03:55:58 -0400","Dan LaRocque","Stop swallowing InvalidRequestException"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","5ffe09c75f3bfcf330cf2aedb0f9b6f3fe87d1b4","Sat, 15 Jun 2013 18:22:10 -0400","Dan LaRocque","Partially parallelize Cassandra tests"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","6db0ed9e967005926fd44ef471a0c0c504d957bb","Wed, 29 May 2013 19:48:43 -0400","Dan LaRocque","Cassandra-Thrift refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","71044644dbf0f3279a5dfc7e31bb64e01adf4838","Mon, 27 May 2013 20:12:30 -0400","Dan LaRocque","Thrift import, compiler warning, and timer cleanup"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","54b2b1bae566832433c6c20393956a1d6849508c","Thu, 23 May 2013 21:09:40 -0400","Dan LaRocque","Testing Metrics on Thrift Cassandra backend"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","31d64e3a6109420587d0dd051ee15e6ac41d1ed0","Fri, 10 May 2013 02:32:59 -0400","Dan LaRocque","Fixing broken Map calls in Thrift mutateMany()"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","0847d8fb23805512fba068238c72bbed33870e1a","Thu, 21 Mar 2013 02:31:46 -0400","Dan LaRocque","thrift and embedded cassandra: enable compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","8a8b0921d1b7aa791666a7807a219310435eb41f","Sat, 2 Mar 2013 22:25:38 -0800","Matthias Broecheler","allowed elastic search transport client, changed config option parsing"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","533c43fd66a9e1fe9a0f9c1604d875f9802ca568","Fri, 22 Feb 2013 17:06:53 -0800","Pavel Yaskevich","change get/set properties to use dedicated C* CF"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/thrift/CassandraThriftStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxRecipeLocker.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxRecipeLocker.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxRecipeLocker.java","a5ee2121451ea269f70a6e38e31688fe8675fb90","Thu, 11 Jul 2013 19:07:16 -0400","Dan LaRocque","Locking refactoring and javadoc cleanup"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxRecipeLocker.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxRecipeLocker.java","a242da6bd95a472692e4aecbc8fe69d297e0146a","Wed, 10 Jul 2013 00:55:03 -0700","Dan LaRocque","Hacked an Astyanax-Recipes-based lock impl"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/locking/AstyanaxLockStatus.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","aa2850089e0eb23393f5bf8072903e52827c55ee","Fri, 28 Feb 2014 15:41:13 -0800","Pavel Yaskevich","allow passing int arguments to the long constructor arguments for astyanax reflection"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","570a5a07de29649faf7325249ca679eea54d5c51","Fri, 4 Apr 2014 17:12:50 -0700","Pavel Yaskevich","add pluggable host supplier to Astyanax configuration"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","5f8dbdb71898c63217ced1bcfe1c86b330ccbd18","Wed, 18 Dec 2013 22:27:01 -0500","Dan LaRocque","Avoid unnecessary serialVersionUID warning"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","5005da5a3b85280f95f175aa04f7015c94decaf1","Wed, 18 Dec 2013 22:25:07 -0500","Dan LaRocque","Add Astyanax RetryBackoffStrategy configuration"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","d56267d3f843d3d8794ddf9ab69f8d6d501efe81","Mon, 11 Nov 2013 12:58:25 -0800","Matthias Broecheler","Pulled authentication to DistributedStoreManager."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","a3a3aca7421dffa8de5d0ed747ec45ca238d183a","Sat, 9 Nov 2013 17:09:26 -0800","Matthias Broecheler","Removed erroneous warning message for thrift frame size."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","322d066512ce2dcadca839028e8c804b7028dd76","Thu, 3 Oct 2013 06:43:25 -0400","Dan LaRocque","Add Cass storemgr method to get IPartitioner"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","3739a338be79232d38a79a2fb2c7d0f0e7924dcb","Tue, 1 Oct 2013 00:13:49 -0400","Dan LaRocque","Refactor Cassandra's sstable_compression config"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","c67b4947277ce3421c06e3b6d3bddf1f00b1ebc3","Mon, 30 Sep 2013 23:58:27 -0400","Dan LaRocque","Merge branch 'master' of https://github.com/mamccr/titan into mamccr-master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","8b66404375d10dfab2469019b9f1cc9f3708c72e","Mon, 30 Sep 2013 23:43:02 -0400","Dan LaRocque","Merge branch 'issue_379'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","b765bb432f89031dbcc257752923634e4874d0c9","Mon, 30 Sep 2013 16:17:48 -0400","Mark McCraw","Making Cassandra compression algorithm configurable via two new configuration properties (storage.sstable-compressor and storage.compression-chunk-length)"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","93b011f84508af4f0ddb997cf4bfb6ded46a554d","Sun, 29 Sep 2013 22:29:29 -0700","Pavel Yaskevich","add configuration options to control Cassandra compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","6ba4a9dca7b1bf4718a1d7fd69dbadf606adc8ce","Mon, 15 Jul 2013 20:39:03 -0400","Dan LaRocque","Fix Astyanax config regression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","a242da6bd95a472692e4aecbc8fe69d297e0146a","Wed, 10 Jul 2013 00:55:03 -0700","Dan LaRocque","Hacked an Astyanax-Recipes-based lock impl"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","08940fcd4b7fc638522d902e6b615b2fb776448b","Mon, 20 May 2013 17:26:27 -0400","Dan LaRocque","Reapply bugfix/optimization changes"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","ed05d3c48eaba903a8cce77b827f87f01be983af","Tue, 11 Jun 2013 08:55:56 -0400","Dan LaRocque","Revert tree state to 2285a80bbce1e919ac6398d7"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","9257e39edf4132626b474629c6e3280e316dbeda","Fri, 24 May 2013 17:16:48 -0400","Dan LaRocque","Change default Astyanax backoff configuration"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","ab505b835cc5d17a1b53ae10677b879cfe71bcc3","Mon, 13 May 2013 17:52:23 -0400","Dan LaRocque","Cleanup and test Cassandra compression options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","c209160ecacc5498475d98b717c29f1ba7ac1439","Sat, 13 Apr 2013 14:44:31 -0700","Pavel Yaskevich","bump Astyanax to 1.56.37"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","8010403058031d0412d83354ba3aeded20366aff","Thu, 28 Mar 2013 21:04:43 -0700","Pavel Yaskevich","remove max message size setting from TBinaryProtocol"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","ddbb7f05d19ac33dbcf5cd12844af33529b931af","Wed, 27 Mar 2013 06:44:28 -0400","Dan LaRocque","Add two Astyanax config options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","585bc4daa251aafc89fee48484ace70f09ebfb3f","Thu, 21 Mar 2013 02:31:46 -0400","Dan LaRocque","thrift and embedded cassandra: enable compression"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","85ebaf80b1220737c886a7f0aeb04546c5c66b11","Tue, 5 Mar 2013 01:26:18 -0800","Pavel Yaskevich","add storage.cassandra.thrift.{frame_size_mb, max_message_size_mb} options"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","8a8b0921d1b7aa791666a7807a219310435eb41f","Sat, 2 Mar 2013 22:25:38 -0800","Matthias Broecheler","allowed elastic search transport client, changed config option parsing"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","533c43fd66a9e1fe9a0f9c1604d875f9802ca568","Fri, 22 Feb 2013 17:06:53 -0800","Pavel Yaskevich","change get/set properties to use dedicated C* CF"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","0389faf4835bc05fac69aaf6d647de22df2509ba","Sat, 16 Feb 2013 15:25:12 -0800","Matthias Broecheler","Merge branch 'master' into indexing"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","e80032368df982ec3204b5770b588207447df98c","Sat, 16 Feb 2013 15:14:06 -0800","Pavel Yaskevich","use different names for Astyanax contexts"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","14e382dff8ff875c787486c2752c1b5d3f14605b","Sat, 5 Jan 2013 00:40:25 -0800","Pavel Yaskevich","merge from master"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","8774c847c7b50c8338cc0bfe946f40681a8884d3","Wed, 25 Sep 2013 04:42:21 -0400","Dan LaRocque","Trying five BB.duplicate() removals w/ Cassandra"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","ca14a85e01e88b3d170ee369b2b1bbeac598c5cf","Fri, 6 Sep 2013 21:03:32 -0700","Pavel Yaskevich","fix ordering of the results in multiget_slice query for astyanax/thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","3ed3d1ca287fa21ed52e4e1f2053f4dccc8da83a","Thu, 20 Jun 2013 23:22:24 -0700","Pavel Yaskevich","add getKeys(SliceQuery) test for all of the backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","804ee750fc6ccbac6737b1117b1429b6047c301e","Thu, 20 Jun 2013 16:56:14 -0700","Pavel Yaskevich","fix Astyanax getKeys(...) dispatch when SliceQuery is null"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","09986e9e77a04c51db4cccb94ecc501d2bbe6b44","Mon, 10 Jun 2013 16:33:44 -0700","Pavel Yaskevich","HBase getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations + small changes in Cassandra ones"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","b86cd6a380553cee02935198d6dd46baee685ed3","Sun, 2 Jun 2013 17:45:21 -0700","Pavel Yaskevich","Cassandra Thrift getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","29b72d09c90bfcac9c9bf02546b6994cd2305d08","Sat, 1 Jun 2013 23:14:44 -0700","Pavel Yaskevich","Astyanax getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","3a915c85c67fb22b4d4cde7475ed6a3e2ee8eb92","Fri, 10 May 2013 00:36:13 -0400","Dan LaRocque","Fix Astyanax slice end boundary handling"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","01a974bbb4e95980fd90efa24990731d5d4b5cec","Thu, 9 May 2013 21:54:18 -0400","Dan LaRocque","Comment cleanup"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","542f572e3b8da8089533b1c8b4c3727a0edecd78","Thu, 9 May 2013 21:48:45 -0400","Dan LaRocque","Type fix in Astyanax getSlice()"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","96b4d8e94da1b91b98ed01741f452adaa801a20a","Thu, 9 May 2013 15:23:25 -0400","Dan LaRocque","Untested Cassandra StaticBuffer refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","92caacd32f2a34652a7b83f860035fe8c44ba511","Tue, 30 Apr 2013 19:54:12 -0700","Pavel Yaskevich","Merge pull request #238 from thinkaurelius/issue_227"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","c209160ecacc5498475d98b717c29f1ba7ac1439","Sat, 13 Apr 2013 14:44:31 -0700","Pavel Yaskevich","bump Astyanax to 1.56.37"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","10f2e4044c60257240dc69ab2236ceadc2d511aa","Thu, 25 Apr 2013 11:39:17 -0700","Pavel Yaskevich","report an error when ordered partitioner is used for g.{V, E} with Astyanax"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","f2d66f6586d909b032c92ea404da5efd6d34b64a","Mon, 25 Feb 2013 12:52:45 -0800","Matthias Broecheler","Refactoring of storage backends"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/astyanax/AstyanaxOrderedKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/utils/CassandraHelper.java","ca14a85e01e88b3d170ee369b2b1bbeac598c5cf","Fri, 6 Sep 2013 21:03:32 -0700","Pavel Yaskevich","fix ordering of the results in multiget_slice query for astyanax/thrift"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/utils/CassandraDaemonWrapper.java","896fc61259515284638f0e425699e699c7498db0","Fri, 8 Nov 2013 16:12:26 -0500","Dan LaRocque","Refcount-based embedded Cassandra shutdown logic"
"./titan-cassandra/src/main/java/com/thinkaurelius/titan/diskstorage/cassandra/utils/CassandraDaemonWrapper.java","f0c9468dd3e16779098faebc28f21c3fce834d4c","Fri, 20 Sep 2013 11:49:54 -0400","Dan LaRocque","Deleting embedded cassandra adapter"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","12e1a1e6fbe007ebe39da7eabcaeda993c51e56c","Thu, 5 Dec 2013 00:27:52 -0500","Dan LaRocque","Increase HBase and Cassandra timeouts in testing"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","1abf2ed152027590b2a261c6ce09a29bc1d8aa05","Sat, 23 Nov 2013 06:09:00 -0500","Dan LaRocque","Removing uses of Java 7's ProcessBuilder.Redirect"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","96913c00a0f7382312fc0739dc0764c31cd66aa8","Sat, 16 Nov 2013 01:10:52 -0500","Dan LaRocque","Make HBase shutdown more carefully in tests"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","d681036c891705fe11462f2dcd8225e96c79ceb8","Wed, 23 Oct 2013 21:50:16 -0400","Dan LaRocque","Replace System.out/.err printlns with Slf4j"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","d566694e673f7b2ade4a6f129a799743f574abe0","Wed, 23 Oct 2013 21:28:44 -0400","Dan LaRocque","Rewrite HBase test harness"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","04f70ca5d185e62147e6c8a910db594ffc925e2c","Wed, 27 Mar 2013 17:35:48 -0700","Pavel Yaskevich","delete old HBase test directories"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/HBaseStorageSetup.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseIDAllocationTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseLockKeyColumnValueStoreTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseLockKeyColumnValueStoreTest.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseLockKeyColumnValueStoreTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseLockKeyColumnValueStoreTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueUTF8Test.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueUTF8Test.java","6c0018887ed4531f04232c622308f8b6351cd17b","Sun, 13 Apr 2014 12:24:37 -0700","janar","add test cases for utf8"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseMultiWriteKeyColumnValueStoreTest.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseMultiWriteKeyColumnValueStoreTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseMultiWriteKeyColumnValueStoreTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/blueprints/HBaseBlueprintsTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/blueprints/HBaseBlueprintsTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/blueprints/HBaseBlueprintsTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphMetricsTest.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphPerformanceMemoryTest.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphConcurrentTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/test/java/com/thinkaurelius/titan/graphdb/hbase/HBaseGraphConcurrentTest.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","c26cd982b1dc5ba792ee7a63af59887bd8b08223","Wed, 9 Apr 2014 19:18:20 -0400","Dan LaRocque","Rename option HBase "skip-table-creation""
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","0dc170010cc96100645d95f200eb268ded37b5bc","Tue, 1 Apr 2014 23:48:41 -0700","janar","remove redundant comment"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","95cee18297e3772fb5a9ea49ddb63d31e6713a12","Tue, 1 Apr 2014 23:33:47 -0700","janar","Preclude ensure table exist check which needs create access. fix #619"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","afee26ff1f8b69622e709ec8a4cf01d1d304d84b","Wed, 19 Feb 2014 19:27:47 -0500","Dan LaRocque","Add system_properties to HBase CF shorthand map"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","8fa4cddf997ac900d3ae99181a451f9895543d26","Thu, 24 Oct 2013 02:56:14 -0400","Dan LaRocque","Fix two HBase store name shortening bugs"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","f1cfecbbf0b37638b72f1283c0ee32c18dbf6b26","Tue, 22 Oct 2013 22:59:58 -0400","Dan LaRocque","Convert HBase short CF name map to bimap"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","b47b63d6c7a6fbc0bddd2baa83eb67263d71edef","Tue, 22 Oct 2013 22:44:58 -0400","Dan LaRocque","Statically check HBase short CF name integrity"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","8b2e402feeebeeaf0c7e261578138a479e3c8588","Tue, 22 Oct 2013 22:42:23 -0400","Dan LaRocque","Include lock stores in HBase short CF names map"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","8a865880c1b7e310fd02d593a45407b8a17843b4","Tue, 22 Oct 2013 11:31:21 -0400","Dan LaRocque","Added option to shorten HBase CF names"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","5ed0e6931da4d8a86c78d1e245e00bc41842fdb2","Thu, 9 May 2013 12:00:21 -0700","Matthias Broecheler","Refactored BerkeleyJe and HBase to use new Buffers"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","7bd0482c801680bfd01ee0c3294d811e207a0fb8","Mon, 25 Mar 2013 15:38:53 -0700","Pavel Yaskevich","fix nit in HBase compression check"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","cd988a337f929b7296e3557e037ac7372038eeab","Mon, 25 Mar 2013 13:52:25 -0700","Pavel Yaskevich","enable GZIP compression on HBase CFs"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","791f3f755ac05f5e2e06c56a5d7e1b84632ce9cc","Tue, 19 Mar 2013 21:03:22 -0700","Pavel Yaskevich","resurect mutateMany wait"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","cd996b3e6e1d1101bfc91a3e19a153c03622023f","Mon, 18 Mar 2013 00:20:28 -0700","Pavel Yaskevich","refactor and optimize HBase implementation"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","a86177e552333fe5903c5ee8f317d8a8d1b3fdcc","Thu, 21 Mar 2013 22:46:56 -0700","Pavel Yaskevich","automatic testing for HBase"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","0112b89bd0da38aa7ed36647999c139944b0f5b6","Thu, 7 Mar 2013 17:08:48 -0800","Pavel Yaskevich","add HBase support for global vertex/edge operations"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","44e117dacf6f8922df8e593fafbd87437ebd99aa","Mon, 20 Jan 2014 19:17:27 -0500","Dan LaRocque","Fixed bug in short-cf-names"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","8fa4cddf997ac900d3ae99181a451f9895543d26","Thu, 24 Oct 2013 02:56:14 -0400","Dan LaRocque","Fix two HBase store name shortening bugs"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","2cfd434658967e8f1cacb599f994218e06f747bf","Tue, 15 Oct 2013 12:12:55 -0700","Matthias Broecheler","Removed "experimental" comment for HBase"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","09986e9e77a04c51db4cccb94ecc501d2bbe6b44","Mon, 10 Jun 2013 16:33:44 -0700","Pavel Yaskevich","HBase getKeys(SliceQuery)/getKeys(KeyRangeQuery) implementations + small changes in Cassandra ones"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","11d1d0229b6d852b0f78827a40b9076f07ef217b","Sat, 25 May 2013 18:46:31 -0700","Pavel Yaskevich","add HBase implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","5ed0e6931da4d8a86c78d1e245e00bc41842fdb2","Thu, 9 May 2013 12:00:21 -0700","Matthias Broecheler","Refactored BerkeleyJe and HBase to use new Buffers"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","84b2f053d09141354cf2f84811a66ba8e18b0d89","Fri, 19 Apr 2013 16:05:04 -0700","Matthias Broecheler","Refactored HBase KCVS for future use in Faunus"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","cd996b3e6e1d1101bfc91a3e19a153c03622023f","Mon, 18 Mar 2013 00:20:28 -0700","Pavel Yaskevich","refactor and optimize HBase implementation"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","0112b89bd0da38aa7ed36647999c139944b0f5b6","Thu, 7 Mar 2013 17:08:48 -0800","Pavel Yaskevich","add HBase support for global vertex/edge operations"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","f2d66f6586d909b032c92ea404da5efd6d34b64a","Mon, 25 Feb 2013 12:52:45 -0800","Matthias Broecheler","Refactoring of storage backends"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseTransaction.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-hbase/src/main/java/com/thinkaurelius/titan/diskstorage/hbase/HBaseTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/BerkeleyJeStorageSetup.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/BerkeleyJeStorageSetup.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/BerkeleyJeStorageSetup.java","522c1d367938b7e00f82f12afab66da67b2e48a6","Thu, 28 Feb 2013 21:51:25 -0800","Matthias Broecheler","Disabled id>0 checks for temporary ids"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/BerkeleyJeStorageSetup.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","d2673ffd402c6bbe1cd8c454c0cb980838bb8c51","Tue, 17 Sep 2013 22:05:02 -0700","Pavel Yaskevich","add KeyColumnValueTest for HazelcastKeyColumnValueStore (+ performance improvements)"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","0abbf350c742477ae713b10b8f0d08b01678cc3a","Thu, 3 Oct 2013 11:43:41 -0400","Dan LaRocque","Testing, import, and unused variable cleanups"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJeHashKeyColumnValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueVariableTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueVariableTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueVariableTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyDBjeKeyColumnValueVariableTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/blueprints/BerkeleyJEBlueprintsTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/blueprints/BerkeleyJEBlueprintsTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/blueprints/BerkeleyJEBlueprintsTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJESpeedComparisonPerformanceTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJESpeedComparisonPerformanceTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphPerformanceMemoryTest.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/ElasticSearchBerkeleyDBTest.java","06ae09c2a7d033ee391e5a1410d8d310bdff849a","Fri, 8 Nov 2013 23:12:39 -0800","Matthias Broecheler","Fixed test case and " parsing in raw query."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/ElasticSearchBerkeleyDBTest.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/ElasticSearchBerkeleyDBTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/ElasticSearchBerkeleyDBTest.java","478ec77ee78c40eece1f13182ac56a92ce35e6ff","Fri, 29 Mar 2013 00:55:41 -0700","Matthias Broecheler","Updated pom's to include elastic search, updated configuration files"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphConcurrentTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphConcurrentTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphTest.java","ad8efa0d85e71b86dabfb7c37614001d3d435255","Mon, 25 Mar 2013 18:42:17 -0700","Matthias Broecheler","fixing serialization test"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/test/java/com/thinkaurelius/titan/graphdb/berkeleyje/BerkeleyJEGraphTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","5716e2bc9f3bdc50ab31f1341dd58fac69c7fb08","Fri, 3 May 2013 16:00:42 -0700","Matthias Broecheler","Wait just a little bit before closing the BDB environment so that thread independent transactions can close"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","ad06aa3c92dc62cecdadc1c9e3bc59a712c0c2b2","Mon, 25 Mar 2013 16:35:24 -0700","Matthias Broecheler","refactored and updated BerkeleyJE"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","7708dcd06417fc35c9ce4643f8d0fef3b9920bd7","Mon, 18 Mar 2013 15:19:11 -0700","Pavel Yaskevich","BerkleyJE create data directory if it doesn't exist"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","46f69611942874f3fc083ef7a99a420dc01b0bd5","Thu, 7 Mar 2013 01:16:04 -0800","Matthias Broecheler","Updated transaction handling in BerkeleyJe"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJETx.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","5ed0e6931da4d8a86c78d1e245e00bc41842fdb2","Thu, 9 May 2013 12:00:21 -0700","Matthias Broecheler","Refactored BerkeleyJe and HBase to use new Buffers"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","46f69611942874f3fc083ef7a99a420dc01b0bd5","Thu, 7 Mar 2013 01:16:04 -0800","Matthias Broecheler","Updated transaction handling in BerkeleyJe"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","f2d66f6586d909b032c92ea404da5efd6d34b64a","Mon, 25 Feb 2013 12:52:45 -0800","Matthias Broecheler","Refactoring of storage backends"
"./titan-berkeleyje/src/main/java/com/thinkaurelius/titan/diskstorage/berkeleyje/BerkeleyJEKeyValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","dcd82492cda4cbe13b0e664cfe5b6d08d00f3a2f","Fri, 4 Oct 2013 17:35:04 -0700","Matthias Broecheler","Make mappings explicit in ElasticSearch Adapter. Closes #359."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-es/src/test/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndexTest.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchConstants.java","7b5d8f656283f67653d502017f6781d565b3af03","Fri, 27 Sep 2013 22:09:45 -0400","Dan LaRocque","Add client-side ES version check (fixes #338)"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","622cd6dbb60b8b4651b6978bb5120996bf9f46ae","Wed, 9 Oct 2013 16:19:45 -0700","Matthias Broecheler","Fixes #388 and undoes previous commit where the wrong option was configured."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","9785baf5d9e5871101c8c48b48e43c6c211aff28","Wed, 9 Oct 2013 14:11:31 -0700","Matthias Broecheler","Making sniffing configurable in ES. Fixes #388."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","324bf475cd27b0d3dd0a27f54063e1b97f4e58d3","Fri, 4 Oct 2013 17:41:42 -0700","Matthias Broecheler","Merge branch 'master' of https://github.com/akeffalas/titan into indexing4PR"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","dcd82492cda4cbe13b0e664cfe5b6d08d00f3a2f","Fri, 4 Oct 2013 17:35:04 -0700","Matthias Broecheler","Make mappings explicit in ElasticSearch Adapter. Closes #359."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","d7d4bf68f98a8d67135fee9e52ceebe3cef1cdbd","Fri, 4 Oct 2013 05:35:38 -0700","Matthias Broecheler","Added test cases for ordering on both the diskstorage and TitanGraph level. Made sort ignore unmapped fields in ElasticSearch."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","482fadcecbe31fcb5a9815ecdf978991bb27a368","Tue, 1 Oct 2013 11:32:50 -0400","Andy Keffalas","Added configuration option to define the max number of results that can be returned by an ElasticSearch query"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","7b5d8f656283f67653d502017f6781d565b3af03","Fri, 27 Sep 2013 22:09:45 -0400","Dan LaRocque","Add client-side ES version check (fixes #338)"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","82ee52069ab84c0359018a4d13090f29b90d17fc","Fri, 27 Sep 2013 20:35:39 -0400","Dan LaRocque","Update Lucene to 4.4.0 and ES to 0.90.5"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","d53d3f6c94b91f777fdc3dcbb4f8fa3a559ca1ac","Thu, 8 Aug 2013 16:07:59 -0700","Matthias Broecheler","Encoded edge id as delta (similar to how the other vertex id is encoded)"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","00aa8b9b5ef06997c0f455d7028235f520100fa9","Tue, 30 Apr 2013 21:31:53 -0700","Matthias Broecheler","Fixes #229"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","af0cb5e914ec2a77b4dcceae3eea5ebfef3a52ad","Tue, 30 Apr 2013 21:21:35 -0700","Matthias Broecheler","Updated to Elasticsearch 0.90.0"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","65361de5ecc2f63e0a69dbcd1370847c800b5cc7","Tue, 30 Apr 2013 21:12:49 -0700","Matthias Broecheler","Automatic lower-casing of queries. Fixes #228. Fixed Lucene dependency problem."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","478ec77ee78c40eece1f13182ac56a92ce35e6ff","Fri, 29 Mar 2013 00:55:41 -0700","Matthias Broecheler","Updated pom's to include elastic search, updated configuration files"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","ea0027bd43653789c51d148c036993a63291a44a","Sun, 3 Mar 2013 19:03:26 -0800","Matthias Broecheler","Converted exception thrown when max result size is exceeded to warning and returning top results."
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","8a8b0921d1b7aa791666a7807a219310435eb41f","Sat, 2 Mar 2013 22:25:38 -0800","Matthias Broecheler","allowed elastic search transport client, changed config option parsing"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-es/src/main/java/com/thinkaurelius/titan/diskstorage/es/ElasticSearchIndex.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/util/datastructures/RelationCacheTest.java","9ed39663f5419c8eb66dafcbbd2a0ae3b7cf2886","Tue, 29 Oct 2013 01:47:32 -0700","Matthias Broecheler","Rewriting of RelationCache to store properties of the relation directly (not in the map) and corresponding rewrite of EdgeSerializer where PropertiesHeader became redundant."
"./titan-test/src/test/java/com/thinkaurelius/titan/util/datastructures/RelationCacheTest.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-test/src/test/java/com/thinkaurelius/titan/util/datastructures/RandomRemovalListTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/util/datastructures/BitMapTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/util/interval/IntervalTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/util/interval/IntervalTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/util/LongEncodingTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/util/LongEncodingTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/util/LongEncodingTest.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/StorageFeaturesTest.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/StorageFeaturesTest.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/StorageFeaturesTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/StorageFeaturesTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtilTest.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtilTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtilTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtilTest.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtilTest.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorTest.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorTest.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorTest.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorTest.java","e1ebf1275a27dbec79f44960b4786c7696ebb8d3","Thu, 9 May 2013 16:40:59 -0400","Dan LaRocque","Untested refactoring of LocalLockMediatorTest"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","1bf08131ea0e07c2103a0a17e9c40ac4e4e838da","Mon, 23 Dec 2013 12:18:42 -0500","Dan LaRocque","Update ConsistentKeyLockerTest for Metrics changes"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","5d743bf042390ddb19d5537343e9b7ff86167d89","Thu, 14 Nov 2013 22:57:53 -0500","Dan LaRocque","Fixing timestamp handling bug in CK locker"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","a459e4a5853567cb7551a61f2a44a5f1862ff05f","Fri, 13 Sep 2013 14:08:14 -0400","Dan LaRocque","Changed local lock contention to permanent failure"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","de2bd3ff0fd62eda28d8441caa4b9771d4cc0071","Thu, 1 Aug 2013 07:04:25 -0400","Dan LaRocque","Tweaks for timeout-sensitive failure on Travis"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","25e5c517a2bd70d1b56003696391e63699b3fdd3","Thu, 1 Aug 2013 01:42:52 -0400","Dan LaRocque","Locking backend configuration changes"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/locking/ConsistentKeyLockerTest.java","7bc1927272e241cbfb0589251ca4b3a76f70e16f","Wed, 10 Jul 2013 01:53:40 -0700","Dan LaRocque","Fix ConsistentKeyLocker & Test"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryKeyColumnValueStoreTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryKeyColumnValueStoreTest.java","9f0612fcb42347b6e6cf5f100007a252437b7bde","Thu, 28 Mar 2013 13:35:51 -0700","Matthias Broecheler","hide Geoshape Point constructor to avoid confusion"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryKeyColumnValueStoreUTF8Test.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryKeyColumnValueStoreUTF8Test.java","6c0018887ed4531f04232c622308f8b6351cd17b","Sun, 13 Apr 2014 12:24:37 -0700","janar","add test cases for utf8"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryKCVSP.java","a49e69eb853bf80c0e4e640b33d121253af0ac30","Thu, 27 Jun 2013 23:14:04 -0700","Matthias Broecheler","Simple performance benchmark implementation"
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryIDAllocationTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-test/src/test/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryLockKeyColumnValueStoreTest.java","69fc1de5e38c54493e558c8312a1e2caab920370","Thu, 7 Nov 2013 19:11:25 -0800","Matthias Broecheler","File rename"
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/TitanBenchmarkSuite.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/TitanBenchmarkSuite.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","4a940ce0f024923cdb8d133b461288dc3b4085ed","Fri, 4 Jan 2013 11:36:07 -0700","okram","test scope for titan-test in main projects. Added a new TODO in titan-test."
"./titan-test/src/test/java/com/thinkaurelius/titan/blueprints/InMemoryBlueprintsTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","fd860c1567104262ede573f4fd2de28196281f40","Sun, 13 Apr 2014 00:23:58 -0700","janar","Fix kryo serialization test cases"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","fc2167333a252c29a6929dc33366ccd01ed34a32","Mon, 19 Aug 2013 12:30:18 -0700","Matthias Broecheler","Refactored and extedned IDManagementTest. Bugfix in IDHandler. Cleaned up IDManager"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","c4c79494dc2beb8a6e9bfe2d6219b51c04757591","Thu, 9 May 2013 12:25:51 -0700","Matthias Broecheler","Initial refactoring of titan-test to use new Buffers"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManagementTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","f1082e7f681e5f67d22e09827581693c430cc6c5","Thu, 14 Nov 2013 18:44:29 -0500","Dan LaRocque","Rollback and shutdown VertexIDAssignerTest graphs"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VertexIDAssignerTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","196f5f704ef5dd74b89b4203fcfdc858fbfb7efb","Mon, 19 Aug 2013 12:14:39 -0700","Matthias Broecheler","Refactored VariableLong test case, increased coverage to full coverage, added comments"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","063f0a17dcd39baa588e2f98222c005cee5a7274","Tue, 6 Aug 2013 17:58:45 -0700","Matthias Broecheler","Changed the storage format to: 1) Make it faster to read relation information without having to read properties of the relation (i.e. header only) by writing the relation and vertexDiffId backward 2) Moving the value for properties into the value part of the entry to allow longer properties than 2^15 byte."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","b72b6c155f97e642f39677104d85b16f98b20777","Sun, 4 Aug 2013 16:35:14 -0700","Matthias Broecheler","Refactored VariableLong adding support for better prefix writing and backward writing of variable long."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","8f72c44264af1938d210672ef4c5f6e6c8f61f36","Thu, 9 May 2013 16:42:21 -0400","Dan LaRocque","Untested refacoring of idmanagement tests"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/VariableLongTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","6961aa8c13bba370070d7a6e14a6c1691ca9bb9c","Fri, 13 Sep 2013 16:41:24 -0400","Dan LaRocque","Removing IDAuthority's peekNextID method"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","8f72c44264af1938d210672ef4c5f6e6c8f61f36","Thu, 9 May 2013 16:42:21 -0400","Dan LaRocque","Untested refacoring of idmanagement tests"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","f67e8c38725a609aac1ae9cb2d9943c887be4846","Sun, 5 May 2013 20:10:55 -0700","Matthias Broecheler","Made StandardIDPool more robust and configurable. Added additional test cases to verify and extend coverage. Fixes #242"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/MockIDAuthority.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","c795e50184e56fbcf38de93f28028bc6264eace5","Fri, 8 Nov 2013 09:59:59 -0500","Dan LaRocque","Rewriting Rid/ID allocation test"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","b7d6ba90728d9da170b6293ec58982f182d3631e","Wed, 23 Oct 2013 23:59:03 -0700","janar","reproduce the bug with ConsistentKeyIDManager"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","63e0a0a5030831bde3c6327b50a7f7d365cedd76","Sun, 5 May 2013 20:25:15 -0700","Matthias Broecheler","Added additional test case to StandardIDPool to check for correct failure"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","f67e8c38725a609aac1ae9cb2d9943c887be4846","Sun, 5 May 2013 20:10:55 -0700","Matthias Broecheler","Made StandardIDPool more robust and configurable. Added additional test cases to verify and extend coverage. Fixes #242"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/idmanagement/IDPoolTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/TextTest.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/TextTest.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/TextTest.java","b61995d5d8b78a0fe0e43fbf83f58d31d1f430e8","Mon, 30 Sep 2013 19:44:15 -0700","Matthias Broecheler","Made Text.CONTAINS term based and hence semantically (almost) equivalent to how it is used in Lucene/ElasticSearch. Difference can still exists based on how strings are tokenized and which list of stop words is used. Fixes #373. Fixes 296. Fixes #277."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/GeoshapeTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/GeoshapeTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/GeoshapeTest.java","68a42196ecd300d66352fab629b3584abd4b252d","Sun, 3 Mar 2013 17:07:57 -0800","Matthias Broecheler","added toString and test cases for Geoshape"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/attribute/GeoshapeTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/inmemory/InMemoryGraphTest.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/inmemory/InMemoryGraphTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/inmemory/InMemoryGraphTest.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/inmemory/InMemoryGraphTest.java","9f0612fcb42347b6e6cf5f100007a252437b7bde","Thu, 28 Mar 2013 13:35:51 -0700","Matthias Broecheler","hide Geoshape Point constructor to avoid confusion"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/TestEnum.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/ByteBufferTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerUTF8Test.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerUTF8Test.java","6c0018887ed4531f04232c622308f8b6351cd17b","Sun, 13 Apr 2014 12:24:37 -0700","janar","add test cases for utf8"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/KryoTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/KryoTest.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/KryoTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/EdgeSerializerTest.java","a46ce945b0fd191e59bd264b33a753ad63136d67","Fri, 20 Dec 2013 00:49:26 -0800","Matthias Broecheler","Fixes #500. Fixes #535."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","fd860c1567104262ede573f4fd2de28196281f40","Sun, 13 Apr 2014 00:23:58 -0700","janar","Fix kryo serialization test cases"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","902237a70341bbf77feaddb3ce0dac4269b8cc7f","Wed, 15 Jan 2014 21:33:35 -0800","Matthias Broecheler","Fixes #547 and adds test coverage around decimal truncation."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","9c4c96c9f7a426da769ff578dee5e15fe4cff4e5","Sat, 7 Sep 2013 14:41:27 -0700","Matthias Broecheler","Respected byte order in string serialization. Fixes #306"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","1fb917c6718e1794aba78fe06b65620eb1b5afa0","Thu, 9 May 2013 16:59:10 -0400","Dan LaRocque","Untested refactoring of SerializerTest"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","c7ac478437665f6989f9925b4198f0effcba94a3","Tue, 30 Apr 2013 19:41:21 -0700","Matthias Broecheler","Added parallel serializer test and refactored EdgeSerializer"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","ad8efa0d85e71b86dabfb7c37614001d3d435255","Mon, 25 Mar 2013 18:42:17 -0700","Matthias Broecheler","fixing serialization test"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","918650c8a4757c58c0697a98501b11edb1e08504","Mon, 25 Mar 2013 17:59:09 -0700","Matthias Broecheler","added verification checks prior to serialization to see if objects can be successfully deserialized."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/SerializerTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/TestTransientClass.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/TestTransientClass.java","ad8efa0d85e71b86dabfb7c37614001d3d435255","Mon, 25 Mar 2013 18:42:17 -0700","Matthias Broecheler","fixing serialization test"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/NoDefaultConstructor.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/NoDefaultConstructor.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-test/src/test/java/com/thinkaurelius/titan/graphdb/serializer/TestClass.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/test/java/com/thinkaurelius/titan/testutil/ObjectSizer.java","674dd4cbecdbfd164308d73430f045723fffc9ca","Tue, 19 Nov 2013 01:35:15 -0800","Matthias Broecheler","computed size of guava entry with soft values"
"./titan-test/src/test/java/com/thinkaurelius/titan/testutil/ObjectSizer.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-test/src/test/java/com/thinkaurelius/titan/testutil/ObjectSizer.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-test/src/test/java/com/thinkaurelius/titan/testutil/ObjectSizer.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/test/java/com/thinkaurelius/titan/testutil/ObjectSizer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/SizableIterable.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/AbstractGenerator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/Distribution.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/PowerLawDistribution.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/EdgeAnnotator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/NormalDistribution.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/VertexAnnotator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/DistributionGenerator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/CommunityGenerator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/tinkerpop/furnace/alpha/generators/CopyDistribution.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","be7edbb86af7936caffc1e672270aa63c69cbc46","Mon, 23 Sep 2013 18:32:18 -0400","Dan LaRocque","Change /tmp/titan-test scratchdir to target/db"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-test/src/main/java/com/thinkaurelius/titan/StorageSetup.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/TestByteBuffer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestByteBuffer.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestByteBuffer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/util/TestLockerManager.java","8dc47a327a10f167a618d11b74823d1b0b07e7a5","Mon, 11 Nov 2013 15:28:39 -0800","Matthias Broecheler","Added test that batch loading does not acquire any locks."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/util/TestTimeUtility.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/util/TestTimeUtility.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStorePerformance.java","f4b9d190aea39932f8982ce5990b4c0ee6d185f8","Mon, 30 Sep 2013 10:51:27 -0700","Matthias Broecheler","Merge branch 'master' of github.com:thinkaurelius/titan"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStorePerformance.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStorePerformance.java","1073c3a162e80e63636038c7f0eb1be521c5215b","Sun, 29 Sep 2013 04:26:03 -0400","Dan LaRocque","Add perf test @Category to several superclasses"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStorePerformance.java","a49e69eb853bf80c0e4e640b33d121253af0ac30","Thu, 27 Jun 2013 23:14:04 -0700","Matthias Broecheler","Simple performance benchmark implementation"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","d891da072c3a2f5f67d1748038fd3a550d2dabab","Sat, 18 May 2013 22:37:58 -0700","Blake Eggleston","Merge branch 'persistit' into titan03"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","f0c28be96a4365569426af0f25b1a74ba657a251","Thu, 9 May 2013 15:43:10 -0400","Dan LaRocque","Added @SuppressWarnings("unused") to scanTest()"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","8ea030bcc901fedf1c4bdb4d7171da948ee6950f","Thu, 9 May 2013 15:37:59 -0400","Dan LaRocque","Untested refactoring of titan-test KeyValueStore*"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","6e1c97a540bb60437151cae34245440931ba3572","Sun, 5 May 2013 17:59:30 -0700","Blake Eggleston","moving transaction start to after test kv store was created in kv store tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/CacheStoreTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/CacheStoreTest.java","18717d3f5e275a23717e286feee817e677faba41","Thu, 26 Sep 2013 16:11:37 -0700","Pavel Yaskevich","add general CacheStoreTest to be used to test all CacheStore implementations"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","d891da072c3a2f5f67d1748038fd3a550d2dabab","Sat, 18 May 2013 22:37:58 -0700","Blake Eggleston","Merge branch 'persistit' into titan03"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","6e1c97a540bb60437151cae34245440931ba3572","Sun, 5 May 2013 17:59:30 -0700","Blake Eggleston","moving transaction start to after test kv store was created in kv store tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/HashKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","d7d4bf68f98a8d67135fee9e52ceebe3cef1cdbd","Fri, 4 Oct 2013 05:35:38 -0700","Matthias Broecheler","Added test cases for ordering on both the diskstorage and TitanGraph level. Made sort ignore unmapped fields in ElasticSearch."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","b61995d5d8b78a0fe0e43fbf83f58d31d1f430e8","Mon, 30 Sep 2013 19:44:15 -0700","Matthias Broecheler","Made Text.CONTAINS term based and hence semantically (almost) equivalent to how it is used in Lucene/ElasticSearch. Difference can still exists based on how strings are tokenized and which list of stop words is used. Fixes #373. Fixes 296. Fixes #277."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","65361de5ecc2f63e0a69dbcd1370847c800b5cc7","Tue, 30 Apr 2013 21:12:49 -0700","Matthias Broecheler","Automatic lower-casing of queries. Fixes #228. Fixed Lucene dependency problem."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProviderTest.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","6c0018887ed4531f04232c622308f8b6351cd17b","Sun, 13 Apr 2014 12:24:37 -0700","janar","add test cases for utf8"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","fd860c1567104262ede573f4fd2de28196281f40","Sun, 13 Apr 2014 00:23:58 -0700","janar","Fix kryo serialization test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","8ea030bcc901fedf1c4bdb4d7171da948ee6950f","Thu, 9 May 2013 15:37:59 -0400","Dan LaRocque","Untested refactoring of titan-test KeyValueStore*"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyValueStoreUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumn.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/IDAllocationTest.java","5c972cf72071d367c6510355ded0ce17b8702893","Wed, 26 Feb 2014 11:34:03 -0500","Dan LaRocque","Increase IDAllocationTest timeout"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/IDAllocationTest.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/IDAllocationTest.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","6aa352dc29c3fb0fe0ca3c80be328de32f74b42f","Fri, 10 May 2013 02:21:02 -0400","Dan LaRocque","Add test to catch new type of mutateMany() error"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","958707cbf25607aff887f3c72ecabc71891c580d","Thu, 9 May 2013 16:35:06 -0400","Dan LaRocque","Untested refactoring of Lock and MultiWrite tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","1621199028afbd27c03d9916adfa73905118811d","Tue, 30 Apr 2013 14:48:26 -0700","Matthias Broecheler","Updated mutation checking for emptiness. Updating missed test case"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/MultiWriteKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","a1dfd56e8e8821462ff2ea4a5ca449bc6fe940e6","Fri, 2 Aug 2013 14:51:12 -0700","Pavel Yaskevich","merge with master"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","c4c79494dc2beb8a6e9bfe2d6219b51c04757591","Thu, 9 May 2013 12:25:51 -0700","Matthias Broecheler","Initial refactoring of titan-test to use new Buffers"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/inmemory/InMemoryStorageAdapter.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","2c41834eda2165883a3b457f42d75ed2feb08c88","Sat, 5 Oct 2013 19:00:27 -0400","Dan LaRocque","Rename KCVUtil to KCVSUtil"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","c62db8545ae2fd4c4b0144501de50b926b949773","Thu, 9 May 2013 16:03:51 -0400","Dan LaRocque","Untested refactoring of titan-test KCVStore*"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","c4c79494dc2beb8a6e9bfe2d6219b51c04757591","Thu, 9 May 2013 12:25:51 -0700","Matthias Broecheler","Initial refactoring of titan-test to use new Buffers"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","0878f4e562469829fb7ae3de0af4e22c1c775a91","Sat, 23 Nov 2013 23:48:43 -0500","Dan LaRocque","Reduced loglevel of needlessly severe test log msg"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","f669fc4e4201c0729a9276f1ab0da2f48643d7c4","Wed, 30 Oct 2013 16:33:48 -0700","Matthias Broecheler","Accidentally committed debugging changes to KeyColumnValueStoreTest. Reverting."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","325c5c15cfe6b8cf34f71277329504938e73f847","Wed, 30 Oct 2013 16:16:31 -0700","Matthias Broecheler","1) Fixed static StaticArrayBuffer.compare method 2) Use StaticBuffer in Hazelcast as value and register explicit serialization 3) Fixed CacheStoreAdapter when compression is used."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","7f02cf7c7fd5d8bfb7121605bb0d923e7eafc5d7","Tue, 29 Oct 2013 17:23:37 -0700","Matthias Broecheler","Added check in testGetSlices() for whether the store supports multiQuery"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","2c41834eda2165883a3b457f42d75ed2feb08c88","Sat, 5 Oct 2013 19:00:27 -0400","Dan LaRocque","Rename KCVUtil to KCVSUtil"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","92731d0bd0e108362641045b0349d3baf3f2c3c8","Sat, 5 Oct 2013 09:39:24 -0400","Dan LaRocque","Modify new getKeys test for BDB compatibility"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","d554c6d80b32c7c9579f1cd93bb3ba4aed12a877","Sat, 5 Oct 2013 09:05:13 -0400","Dan LaRocque","Added new getKeys test method to KCVSTest"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","16212efb6c2a213b0c13104864ffc830c41db7c9","Thu, 3 Oct 2013 11:21:58 -0400","Dan LaRocque","Rewrite getKeys methods in CassandraThrift"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","d2673ffd402c6bbe1cd8c454c0cb980838bb8c51","Tue, 17 Sep 2013 22:05:02 -0700","Pavel Yaskevich","add KeyColumnValueTest for HazelcastKeyColumnValueStore (+ performance improvements)"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","39ec82ada33d4b97670d8a6a39cc698964d731ec","Tue, 25 Jun 2013 11:31:39 -0700","Pavel Yaskevich","Merge remote-tracking branch 'origin/master' into kcvsiter"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","3ed3d1ca287fa21ed52e4e1f2053f4dccc8da83a","Thu, 20 Jun 2013 23:22:24 -0700","Pavel Yaskevich","add getKeys(SliceQuery) test for all of the backends"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","55b5a596d895edbfb073f19e6e825c39650cf381","Wed, 19 Jun 2013 16:26:10 -0700","Pavel Yaskevich","refactor MetricInstrumented{Store, Iterator} and add missing getKeys(...) methods"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","93a5dc4bf0b12e72c34bb2849d2eac9b823af5ee","Wed, 19 Jun 2013 15:24:19 -0700","Pavel Yaskevich","merge with master"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","5308f068c7521d5d82ab44524d1578939adb3324","Tue, 18 Jun 2013 13:07:12 -0400","Dan LaRocque","Untested merge of Persistit to master"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","54b2b1bae566832433c6c20393956a1d6849508c","Thu, 23 May 2013 21:09:40 -0400","Dan LaRocque","Testing Metrics on Thrift Cassandra backend"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","d891da072c3a2f5f67d1748038fd3a550d2dabab","Sat, 18 May 2013 22:37:58 -0700","Blake Eggleston","Merge branch 'persistit' into titan03"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","c62db8545ae2fd4c4b0144501de50b926b949773","Thu, 9 May 2013 16:03:51 -0400","Dan LaRocque","Untested refactoring of titan-test KCVStore*"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","3f4a9ba669c165dbc21319854a13916f25644147","Thu, 9 May 2013 15:37:05 -0400","Dan LaRocque","Fix KeyColumnValueStoreTest logger name"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","6e1c97a540bb60437151cae34245440931ba3572","Sun, 5 May 2013 17:59:30 -0700","Blake Eggleston","moving transaction start to after test kv store was created in kv store tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","5742e2bd9bbfc171d305faad6257fa4b82fd3c47","Sat, 30 Mar 2013 14:19:50 -0700","Blake Eggleston","adding the other graphdb tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","9f0612fcb42347b6e6cf5f100007a252437b7bde","Thu, 28 Mar 2013 13:35:51 -0700","Matthias Broecheler","hide Geoshape Point constructor to avoid confusion"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","be97ef90993b973f0748fa29c339415cdc37706f","Thu, 7 Mar 2013 18:05:18 -0800","Pavel Yaskevich","resurect part of the scanTest"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","eb7dd1ceaa113ef3e60650a033c05c4692f16936","Thu, 7 Mar 2013 18:05:18 -0800","Pavel Yaskevich","resurect part of the scanTest"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","20b89ba0683837d0322f550ca8304324c886b1cd","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","5fafe91a1a9c268cffd3a71455236a161f314e54","Sat, 16 Feb 2013 15:19:06 -0800","Matthias Broecheler","added simple performance test for key column value store"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/KeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","6961aa8c13bba370070d7a6e14a6c1691ca9bb9c","Fri, 13 Sep 2013 16:41:24 -0400","Dan LaRocque","Removing IDAuthority's peekNextID method"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","de2bd3ff0fd62eda28d8441caa4b9771d4cc0071","Thu, 1 Aug 2013 07:04:25 -0400","Dan LaRocque","Tweaks for timeout-sensitive failure on Travis"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","a3b5fb1897956c3b83d4e14c1f997d8dd0138c7a","Wed, 31 Jul 2013 00:14:37 -0400","Dan LaRocque","Merge branch 'cassandra-test-refactoring'"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","a5ee2121451ea269f70a6e38e31688fe8675fb90","Thu, 11 Jul 2013 19:07:16 -0400","Dan LaRocque","Locking refactoring and javadoc cleanup"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","f5809dd85c4258403960fab53c77ad5cabfa35f9","Tue, 9 Jul 2013 03:00:03 -0700","Dan LaRocque","Hooked up new locking code to legacy interface"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","449ff32b50cb995c63646c8ad5984f6f0cb3ceeb","Fri, 21 Jun 2013 20:11:12 -0400","Dan LaRocque","Track thread exceptions in testMultiIDAcquisition"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","d3eaafad49284b1d5cb1d9150654cfeddf5447c2","Fri, 21 Jun 2013 18:42:33 -0400","Dan LaRocque","Allow timeouts when stress-testing ID authorities"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","8de1aaed9480d1f593155168aa3eeee84fe6c54b","Wed, 19 Jun 2013 02:47:28 -0400","Dan LaRocque","Hacking thread safety onto LockKCVStoreTest"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","958707cbf25607aff887f3c72ecabc71891c580d","Thu, 9 May 2013 16:35:06 -0400","Dan LaRocque","Untested refactoring of Lock and MultiWrite tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","1084f9c55cb7c703cce2fa440b0b41fa671242e9","Wed, 8 May 2013 23:07:28 -0400","Dan LaRocque","Added small parallel stress test for locking"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","f1d91eef7ab870b1ba7750094717c2bf7c04eae5","Wed, 8 May 2013 04:44:53 -0400","Dan LaRocque","Made ByteBufferUtil#compare() thread-safe"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","74166f9174459bcbd8b7b8d7812d6b14c90faba5","Tue, 7 May 2013 20:07:37 -0400","Dan LaRocque","Locking logging tweaks and renewal fix"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","4ca4dc0452a4fce614ece988424a80856c16723d","Mon, 6 May 2013 18:05:35 -0700","Matthias Broecheler","Increased test coverage in LockKeyColumnValueStore - currently does not pass for thrift!"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","30204ffb6fce372698537fc515b073cc6ef7d07a","Sun, 5 May 2013 23:19:43 -0700","Matthias Broecheler","Increased concurrency level of LockKCVSTest"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","9f0612fcb42347b6e6cf5f100007a252437b7bde","Thu, 28 Mar 2013 13:35:51 -0700","Matthias Broecheler","hide Geoshape Point constructor to avoid confusion"
"./titan-test/src/main/java/com/thinkaurelius/titan/diskstorage/LockKeyColumnValueStoreTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","a89e91bfa2ada2f261bca852e7c4cb714546caa3","Thu, 28 Mar 2013 20:00:18 -0700","Matthias Broecheler","updated to new Blueprints interface"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TransactionalTitanGraphTestSuite.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanGraphQueryTestSuite.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanGraphQueryTestSuite.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanGraphQueryTestSuite.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanGraphQueryTestSuite.java","027caeb75002179fc0ab448d5c342f828eeb88ec","Fri, 14 Jun 2013 15:03:38 -0400","Dan LaRocque","Reverting to Blueprints 2.3.0"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanGraphQueryTestSuite.java","f0966eb430f3dec10fc0534c24ec8677d82b53b7","Thu, 23 May 2013 18:16:04 -0400","Dan LaRocque","Added unimplemented Blueprints method stubs"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanSpecificBlueprintsTestSuite.java","97f3c69b06ed6cf67dab963c4157eb9a0a77d50c","Tue, 21 May 2013 15:25:34 -0400","Dan LaRocque","Upgrade to latest tinkerpop 2.4.0-SNAPSHOT stack"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanSpecificBlueprintsTestSuite.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanSpecificBlueprintsTestSuite.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanSpecificBlueprintsTestSuite.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanSpecificBlueprintsTestSuite.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","027caeb75002179fc0ab448d5c342f828eeb88ec","Fri, 14 Jun 2013 15:03:38 -0400","Dan LaRocque","Reverting to Blueprints 2.3.0"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","f0966eb430f3dec10fc0534c24ec8677d82b53b7","Thu, 23 May 2013 18:16:04 -0400","Dan LaRocque","Added unimplemented Blueprints method stubs"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","49203981ee544f1443c40991cc2adcf319345562","Mon, 25 Mar 2013 19:04:42 -0700","Matthias Broecheler","needed to disable testDataTypeValidationOnProperties because MockSerializable has no equals implementation and hence Titan cannot verify de/serialization. Revert when https://github.com/tinkerpop/blueprints/issues/374 is fixed."
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","309ec86b86c9d8bdcd61b715964dd073b4082ab7","Sat, 9 Mar 2013 14:33:29 -0800","Matthias Broecheler","fixed test cases for GraphQuery"
"./titan-test/src/main/java/com/thinkaurelius/titan/blueprints/TitanBlueprintsTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","0bcede878009ca52e622d8206644075e4a391499","Mon, 18 Nov 2013 23:10:51 -0800","Matthias Broecheler","updated changelog, simplifed parameter passing."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","06ae09c2a7d033ee391e5a1410d8d310bdff849a","Fri, 8 Nov 2013 23:12:39 -0800","Matthias Broecheler","Fixed test case and " parsing in raw query."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","8ced35bf3661850424adbb5595fea69a42771889","Thu, 7 Nov 2013 19:09:42 -0800","Matthias Broecheler","Refactored test cases."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","6a63bd5b144acfbb475141ae921e0b610b2ab7da","Thu, 7 Nov 2013 18:35:33 -0800","Matthias Broecheler","Fixes #457."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","dcd82492cda4cbe13b0e664cfe5b6d08d00f3a2f","Fri, 4 Oct 2013 17:35:04 -0700","Matthias Broecheler","Make mappings explicit in ElasticSearch Adapter. Closes #359."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","d7d4bf68f98a8d67135fee9e52ceebe3cef1cdbd","Fri, 4 Oct 2013 05:35:38 -0700","Matthias Broecheler","Added test cases for ordering on both the diskstorage and TitanGraph level. Made sort ignore unmapped fields in ElasticSearch."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","21cddb5c4f64ccc54278787ab3307ada5678ad3f","Mon, 30 Sep 2013 19:16:18 -0700","Matthias Broecheler","Added test in an attempt to reproduce #294."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","00aa8b9b5ef06997c0f455d7028235f520100fa9","Tue, 30 Apr 2013 21:31:53 -0700","Matthias Broecheler","Fixes #229"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanIndexTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","1073c3a162e80e63636038c7f0eb1be521c5215b","Sun, 29 Sep 2013 04:26:03 -0400","Dan LaRocque","Add perf test @Category to several superclasses"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/SpeedComparisonPerformanceTest.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","eef1dd20d02070e1992c7bfb63798bca794e8afd","Fri, 20 Sep 2013 09:12:26 -0400","Dan LaRocque","Merge branch 'master' into performance-test-rewrite"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","7e0d39612d57f420ac14e64d46db9a5aa2985aee","Sat, 7 Sep 2013 17:39:22 -0700","Matthias Broecheler","improved documentation, fixed a test case"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","5bc3cf628f32de2c5d07e7ab7f41bfe79c1fb4c1","Wed, 4 Sep 2013 13:07:41 -0400","Dan LaRocque","Initial rewrite of singlethreaded performance tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","429abde0619a4fe2b01c0c9b08a40f6656bd375c","Tue, 18 Jun 2013 22:29:12 -0400","Dan LaRocque","Adding unit test for #305"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","48c680b16582318630c56716b0ffc629177841db","Fri, 24 May 2013 16:27:50 -0400","Dan LaRocque","Let AbstractVertex remove multivalued properties"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","04b50b0bdbf78e88f17eca6ba381fc7f64f323f6","Thu, 21 Mar 2013 14:36:34 -0700","Matthias Broecheler","Enabled local partitioning in embeded cassandra and improved log output in VertexIDAssigner"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","a6ee34572267d1aeb7ba2fe8c23b6815bf22d474","Fri, 1 Mar 2013 13:38:02 -0800","Matthias Broecheler","Playing with performance test"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTestCommon.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanNonTransactionalGraphMetricsTest.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","b4940b39ae274633ee133fd2f7ea4175628eeaff","Wed, 20 Nov 2013 19:36:36 -0800","Matthias Broecheler","fixed eventual graph test to reflect recent updates"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","10a0e030fd2498210b81222917c86bff1e76d594","Mon, 18 Nov 2013 20:18:54 -0800","Matthias Broecheler","Added a concurrent update test for db level cache."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","1887ef9281ab0b8545dba45214b1a365b0dd79bc","Mon, 18 Nov 2013 17:00:40 -0800","Matthias Broecheler","Improved database cache test coverage"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","5d743bf042390ddb19d5537343e9b7ff86167d89","Thu, 14 Nov 2013 22:57:53 -0500","Dan LaRocque","Fixing timestamp handling bug in CK locker"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","e9f4a13df4d81074664035f31b58262605af2b4a","Thu, 14 Nov 2013 16:34:21 -0800","Matthias Broecheler","relaxed performance test case requirement to not fail on outliers."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","74c1b2f7c546fcff613870e67cd14288ac6f04e8","Thu, 14 Nov 2013 15:13:44 -0800","Matthias Broecheler","Ignore test since it cannot be run concurrently with others until #485 is fixed."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","3ee76763baa179dbe77d6f4855aae266ba557b3b","Tue, 12 Nov 2013 18:59:20 -0800","Matthias Broecheler","Reinstantiated ignored test."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","41c3050ee9f5755e4026e411c284cf28e5a921b0","Tue, 12 Nov 2013 11:16:38 -0800","Matthias Broecheler","Minor modification to test"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","8dc47a327a10f167a618d11b74823d1b0b07e7a5","Mon, 11 Nov 2013 15:28:39 -0800","Matthias Broecheler","Added test that batch loading does not acquire any locks."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanEventualGraphTest.java","b7c3aa150bd268d5cb2c5cc50bb0a273eb16ff4e","Wed, 25 Sep 2013 19:04:35 -0700","Matthias Broecheler","Added test case for #329."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/RidGenerationTest.java","c795e50184e56fbcf38de93f28028bc6264eace5","Fri, 8 Nov 2013 09:59:59 -0500","Dan LaRocque","Rewriting Rid/ID allocation test"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","a146d980a7d5f61b55acd5bbdd4fc2cf733e3c61","Sat, 16 Nov 2013 04:29:50 -0500","Dan LaRocque","Further reduced testTransactionalMemory iterations"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","d5e9a62f8ddd959ec555af0423045b4ed2423ddd","Sat, 16 Nov 2013 03:53:25 -0500","Dan LaRocque","Reducing iteration count in testTranactionalMemory"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","b6c4402e4d51e67cbf2a878d3df6bd910e546645","Tue, 8 Oct 2013 16:38:39 -0700","Matthias Broecheler","Extended performance test coverage for benchmarking read heavy transactions (i.e. traversals only)."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","748a36744ab615d7154a9b40668b9ac1ddbf1b77","Sun, 29 Sep 2013 07:06:14 -0400","Dan LaRocque","Adding MemoryTests @Category annotation"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","1073c3a162e80e63636038c7f0eb1be521c5215b","Sun, 29 Sep 2013 04:26:03 -0400","Dan LaRocque","Add perf test @Category to several superclasses"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphPerformanceMemoryTest.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/FakeVertex.java","1d4cc4cf17bdca4fadc67afc82807d7e12af85f3","Mon, 16 Sep 2013 09:00:19 -0400","Dan LaRocque","Turned TitanGraphSerialTest into a Groovy class"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","79d74e43aeb8837f5b795647b62fed4431f74ffc","Fri, 15 Nov 2013 11:46:39 -0500","Dan LaRocque","Increase a test executor shutdown grace pd to 30s"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","66b2a697a3b9552a8e8c3540693df09c81d7eedf","Mon, 30 Sep 2013 01:11:20 -0400","Dan LaRocque","Fix broken TitanGraphConcurrentTest method"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","1073c3a162e80e63636038c7f0eb1be521c5215b","Sun, 29 Sep 2013 04:26:03 -0400","Dan LaRocque","Add perf test @Category to several superclasses"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","eef1dd20d02070e1992c7bfb63798bca794e8afd","Fri, 20 Sep 2013 09:12:26 -0400","Dan LaRocque","Merge branch 'master' into performance-test-rewrite"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","5bc3cf628f32de2c5d07e7ab7f41bfe79c1fb4c1","Wed, 4 Sep 2013 13:07:41 -0400","Dan LaRocque","Initial rewrite of singlethreaded performance tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","66a3912a272ec158e4a9a084173cb7ec65d11394","Mon, 12 Aug 2013 23:45:23 -0400","Dan LaRocque","Reenabling performance and concurrent JUB tests"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","3f689bb9ba379270b8f08776d63eda636ae0ea4b","Mon, 12 Aug 2013 16:50:36 -0400","Dan LaRocque","Temporary performance testing changes"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","1a0f2ea5ce844676fb4b6181e7e79a00cfdf0a6b","Sat, 4 May 2013 18:52:01 -0700","Matthias Broecheler","Added concurrent read test to make sure that the Buffer underflow issue is solved."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","6d7787fcd5f2d737db1e99cf9069e9253688de3e","Fri, 29 Mar 2013 00:26:17 -0700","Matthias Broecheler","Fixed thread race condition during bytebuffer comparison"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphConcurrentTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","5752140a81bbfe1871db2eba96f7cb8497963c50","Fri, 20 Dec 2013 01:51:25 -0800","Matthias Broecheler","Fixing test case: Oversaw reference to tx when refactoring to use graph throughout."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","a46ce945b0fd191e59bd264b33a753ad63136d67","Fri, 20 Dec 2013 00:49:26 -0800","Matthias Broecheler","Fixes #500. Fixes #535."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","507a3fb43ec8f39bd473571bbf8b4212211fb6e8","Thu, 19 Dec 2013 23:26:45 -0800","Matthias Broecheler","Removed wrong test case."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","99d550c559bde1fc67db64babd25ff35522710c4","Thu, 19 Dec 2013 23:25:04 -0800","Matthias Broecheler","Fixes #505. Fixes #498"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b9cf88e6b1317cc429c76461b9f2ea7e59212607","Thu, 19 Dec 2013 19:38:19 -0800","Matthias Broecheler","Fixes #499."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","a1584af975de2b75cfbd94b2e88f2a04d7a16ca8","Wed, 18 Dec 2013 17:58:06 -0800","Matthias Broecheler","toString on types returns the type's name instead of the vertex identifier. Fixes #525."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","f2713c5f3cb4ec7c885ab9cc80c032d124499bed","Wed, 18 Dec 2013 16:35:49 -0800","Matthias Broecheler","Reordered name property creation to be first when creating types so that we don't have a lingering type vertex in case the ensuing exception is thrown and the transaction still committed."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","6c2171a9773a7a5ec80ba7d507465453ddca939a","Wed, 11 Dec 2013 20:36:41 -0800","MrKeyholder","Test case for #508 Resource leak when using 0.4.1 + cassandrathrift and iterating over all vertices"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b428f3b0b34bc81d67ec83b7203320ba2578bf89","Thu, 7 Nov 2013 19:20:24 -0800","Matthias Broecheler","Fixes #426."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","8ced35bf3661850424adbb5595fea69a42771889","Thu, 7 Nov 2013 19:09:42 -0800","Matthias Broecheler","Refactored test cases."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b5398c88f2f86484f79632bf26ad2d9cbb4b9e64","Thu, 24 Oct 2013 21:51:14 -0700","Matthias Broecheler","Reworked exception messages for better clarity around setting vertex ids."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","fc2bc838a04c7a07de7a8a9b43fc41d08baf9611","Thu, 24 Oct 2013 16:46:45 -0700","Matthias Broecheler","Allows to pass in a user provided vertex id when creating a vertex. Must be enabled through "set-vertex-id". Closes #382."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b00635a757a2ca0516ca21fa75941b43cbb72e07","Wed, 23 Oct 2013 21:51:39 -0700","Matthias Broecheler","Fixes #438"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","6d3cfd22aa976594ca3abceb1d66309b96b48d90","Wed, 23 Oct 2013 00:20:00 -0700","Matthias Broecheler","Fixes #439 multiquery issue."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","2422c2dd3e9ec19dbf6bcc8096763523a6ced56b","Tue, 15 Oct 2013 13:15:40 -0700","Matthias Broecheler","Fixes #429. Added large index test to verify limit updates."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","a2d56339b344df35918e9280aeb36ca87b9edcf6","Wed, 9 Oct 2013 07:04:08 -0700","Matthias Broecheler","Accidentally committed rubbish."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","3a69850217596b507c7b33c96d74609b3ab9d454","Mon, 30 Sep 2013 20:48:17 -0700","Matthias Broecheler","Fixes #403"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","484980482f7fa52a02f4f6fb1b0601e0e77f8d64","Sat, 28 Sep 2013 13:14:00 -0700","Matthias Broecheler","Fixes #260"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","3fedaf2cdff20618a3b06951f72e0da59204c6de","Fri, 27 Sep 2013 21:10:30 -0700","Matthias Broecheler","Fixes #393. Fixes another issue where loop edges get deleted twice."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","f77a4f7d95c07a0f54fc714dc97ddbb6a19ab431","Fri, 27 Sep 2013 18:05:37 -0700","Matthias Broecheler","Fixes #297"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","05dd3ea9ef139bc499901fe5a46df22f58e87b4f","Fri, 27 Sep 2013 14:05:50 -0700","Matthias Broecheler","Fixes #314. Reordering persistence: first writing edges to edge store and then doing index updates. Also, now making sure that each relation is only once passed to an index update."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","d39591ed87e4e2f0c854e1e9942af37cd070e2e5","Fri, 27 Sep 2013 13:07:09 -0700","Matthias Broecheler","Fixes #358"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b7c3aa150bd268d5cb2c5cc50bb0a273eb16ff4e","Wed, 25 Sep 2013 19:04:35 -0700","Matthias Broecheler","Added test case for #329."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","28650a32ec86c8fdccc8518318116ed408f1346b","Wed, 25 Sep 2013 17:11:49 -0700","Matthias Broecheler","Fixes #287"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","4d42c23102584b7721a234107a20464671796d4a","Fri, 13 Sep 2013 14:11:13 -0400","Dan LaRocque","Added a short graphdb test method"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","7e0d39612d57f420ac14e64d46db9a5aa2985aee","Sat, 7 Sep 2013 17:39:22 -0700","Matthias Broecheler","improved documentation, fixed a test case"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","5e66929bfb03de67710298c994316c820050127b","Sat, 7 Sep 2013 17:23:18 -0700","Matthias Broecheler","updated test cases according to change in TypeMaker"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","8c075d95ed44e3ec55c2492056391f75b7048dbe","Sat, 7 Sep 2013 15:28:57 -0700","Matthias Broecheler","Merge branch 'multiquery'"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","ca14a85e01e88b3d170ee369b2b1bbeac598c5cf","Fri, 6 Sep 2013 21:03:32 -0700","Pavel Yaskevich","fix ordering of the results in multiget_slice query for astyanax/thrift"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","429abde0619a4fe2b01c0c9b08a40f6656bd375c","Tue, 18 Jun 2013 22:29:12 -0400","Dan LaRocque","Adding unit test for #305"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","e840704ae8e726f825a0aea09208d6ed7a3270fa","Tue, 4 Jun 2013 13:36:26 -0400","Dan LaRocque","Fix getID() abuse"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","48c680b16582318630c56716b0ffc629177841db","Fri, 24 May 2013 16:27:50 -0400","Dan LaRocque","Let AbstractVertex remove multivalued properties"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","4c51273cbfc71b178ee3b7d809bf895ef227280c","Fri, 3 May 2013 14:22:40 -0700","Matthias Broecheler","Fixes #255"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","6eec0ad79102e9d0d93c7753410965aec85c296a","Thu, 2 May 2013 16:02:09 -0700","Matthias Broecheler","Fixes #225"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","e871add0cbdfdc52cf5475b2f62019fb3a35016a","Thu, 2 May 2013 13:28:24 -0700","Matthias Broecheler","Added test case for #213. Made Cassandra key iteration configuration adjust to the Partitioner"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","8844fb05759ae0d64a9afd5c53dee9dee3650d00","Thu, 2 May 2013 12:53:24 -0700","Matthias Broecheler","Added test case and fix #205. Closes #205"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","27639d4fc85bf97bfbd4db1c8227026f4ad3043e","Thu, 2 May 2013 12:52:33 -0700","Matthias Broecheler","Added test case and fix #205. Closes #205"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","c083ed375c16493b7259361db76824688f678be7","Sat, 20 Apr 2013 18:24:42 -0700","Matthias Broecheler","More extensive datatype class checks: DataTypes cannot be abstract classes or interfaces"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","b55f4f332ee7c5c47295db46ffac2d2355968f79","Tue, 12 Feb 2013 18:37:05 -0800","Matthias Broecheler","Fixes #129. Added additional tests to verify other cases that are similar."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","ac746d5753151c1904efda645429fca6a9086231","Tue, 12 Feb 2013 17:41:59 -0800","Matthias Broecheler","Fixes #127."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","43619ac420e8393b939f823bd63b99020c75e1f4","Tue, 12 Feb 2013 16:15:33 -0800","Matthias Broecheler","Fixes #144."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/TitanGraphTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialIntSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialIntSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialIntSerializer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialIntSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialIntSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialInt.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-test/src/main/java/com/thinkaurelius/titan/graphdb/serializer/SpecialInt.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/PerformanceTests.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/PerformanceTests.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/UnorderedKeyStoreTests.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/MemoryTests.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/MemoryTests.java","748a36744ab615d7154a9b40668b9ac1ddbf1b77","Sun, 29 Sep 2013 07:06:14 -0400","Dan LaRocque","Adding MemoryTests @Category annotation"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/SerialTests.java","5d743bf042390ddb19d5537343e9b7ff86167d89","Thu, 14 Nov 2013 22:57:53 -0500","Dan LaRocque","Fixing timestamp handling bug in CK locker"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/KeyOrderAgnosticTests.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/testcategory/OrderedKeyStoreTests.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","6576a7ae2dd5228ccd764c87fa73401f533dbd2d","Wed, 20 Nov 2013 18:11:45 -0800","Matthias Broecheler","Set cache concurrency to available processors"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","674dd4cbecdbfd164308d73430f045723fffc9ca","Tue, 19 Nov 2013 01:35:15 -0800","Matthias Broecheler","computed size of guava entry with soft values"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","9c4c96c9f7a426da769ff578dee5e15fe4cff4e5","Sat, 7 Sep 2013 14:41:27 -0700","Matthias Broecheler","Respected byte order in string serialization. Fixes #306"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-test/src/main/java/com/thinkaurelius/titan/TestBed.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/TestUtil.java","8ced35bf3661850424adbb5595fea69a42771889","Thu, 7 Nov 2013 19:09:42 -0800","Matthias Broecheler","Refactored test cases."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/PerformanceTest.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","7bb3f9ddd6d2eb04b56b07c4125f47dfabdf61ca","Tue, 3 Dec 2013 18:36:33 -0500","Dan LaRocque","Allow env var override of perf test target time"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","372e1906aec037f2d0fc786bd024ed8007cf62cf","Fri, 15 Nov 2013 22:52:39 -0500","Dan LaRocque","Adding JUnitBenchmark env var config options"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","c754f919e649d9be3d8ea5e8bfb3097521960002","Wed, 25 Sep 2013 04:41:16 -0400","Dan LaRocque","Comment changes, cleanup in JUnitBenchmarkProvider"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","e73afaeb3f2fec8550f6bd075e934be0074060f7","Wed, 25 Sep 2013 01:48:28 -0400","Dan LaRocque","Moved performance test tuning into JUBProvider"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","188c5dfced906a456766d8ec2a3bf02c58d433d4","Thu, 19 Sep 2013 04:57:04 -0400","Dan LaRocque","Added JUnitBenchmarks method runtime normalization"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/JUnitBenchmarkProvider.java","f9e58326cfdf6dd8cd20dfce3ec58b88d1f29bec","Mon, 5 Aug 2013 17:46:15 -0400","Dan LaRocque","Preparing pom.xml and tests for JunitBenchmarks"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/MemoryAssess.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/MemoryAssess.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/RandomGenerator.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/RandomGenerator.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/GraphGenerator.java","7088f8cc1d8ef879d08767bbe2f0635fd4966da6","Wed, 16 Oct 2013 11:35:45 -0400","Dan LaRocque","Copy prerelease Furnace generators into titan-test"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/GraphGenerator.java","237965bcd8b8341616cdb2d519f46673a5226495","Mon, 14 Oct 2013 13:54:58 -0700","Matthias Broecheler","Made some java-doc changes"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/GraphGenerator.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/GraphGenerator.java","eef1dd20d02070e1992c7bfb63798bca794e8afd","Fri, 20 Sep 2013 09:12:26 -0400","Dan LaRocque","Merge branch 'master' into performance-test-rewrite"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/GraphGenerator.java","eee28cbafacc2dcfcd71a00b529c19c507e2877c","Wed, 18 Sep 2013 06:48:08 -0400","Dan LaRocque","Read/write Groovy test graph from a file"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/Schema.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/Schema.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/Schema.java","eef1dd20d02070e1992c7bfb63798bca794e8afd","Fri, 20 Sep 2013 09:12:26 -0400","Dan LaRocque","Merge branch 'master' into performance-test-rewrite"
"./titan-test/src/main/java/com/thinkaurelius/titan/testutil/gen/Schema.java","eee28cbafacc2dcfcd71a00b529c19c507e2877c","Wed, 18 Sep 2013 06:48:08 -0400","Dan LaRocque","Read/write Groovy test graph from a file"
"./titan-rexster/src/main/java/com/thinkaurelius/titan/tinkerpop/rexster/TitanGraphConfiguration.java","d01dd628c52af6458a0a0bebc4bb00969cd3b909","Thu, 10 Oct 2013 09:10:52 -0400","Dan LaRocque","Restore TitanGraphConfiguration in new module"
"./titan-dist/titan-dist-berkeleyje/src/test/java/com/thinkaurelius/titan/pkgtest/BerkeleyAssemblyIT.java","4299c586a97ea8306aea0311ab672be6e0bd3952","Tue, 15 Oct 2013 10:52:34 -0400","Dan LaRocque","Adding Expect-script testing to distro assemblies"
"./titan-dist/src/test/java/com/thinkaurelius/titan/pkgtest/AssemblyITSupport.java","1abf2ed152027590b2a261c6ce09a29bc1d8aa05","Sat, 23 Nov 2013 06:09:00 -0500","Dan LaRocque","Removing uses of Java 7's ProcessBuilder.Redirect"
"./titan-dist/src/test/java/com/thinkaurelius/titan/pkgtest/AssemblyITSupport.java","4299c586a97ea8306aea0311ab672be6e0bd3952","Tue, 15 Oct 2013 10:52:34 -0400","Dan LaRocque","Adding Expect-script testing to distro assemblies"
"./titan-dist/titan-dist-persistit/src/test/java/com/thinkaurelius/titan/pkgtest/PersistitAssemblyIT.java","4299c586a97ea8306aea0311ab672be6e0bd3952","Tue, 15 Oct 2013 10:52:34 -0400","Dan LaRocque","Adding Expect-script testing to distro assemblies"
"./titan-dist/titan-dist-cassandra/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraThriftAssemblyIT.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-dist/titan-dist-cassandra/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraThriftAssemblyIT.java","4299c586a97ea8306aea0311ab672be6e0bd3952","Tue, 15 Oct 2013 10:52:34 -0400","Dan LaRocque","Adding Expect-script testing to distro assemblies"
"./titan-dist/titan-dist-cassandra/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraEmbeddedAssemblyIT.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-dist/titan-dist-cassandra/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraEmbeddedAssemblyIT.java","4299c586a97ea8306aea0311ab672be6e0bd3952","Tue, 15 Oct 2013 10:52:34 -0400","Dan LaRocque","Adding Expect-script testing to distro assemblies"
"./titan-dist/titan-dist-all/src/test/java/com/thinkaurelius/titan/pkgtest/BerkeleyESAssemblyIT.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-dist/titan-dist-all/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraThriftESAssemblyIT.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-dist/titan-dist-all/src/test/java/com/thinkaurelius/titan/pkgtest/CassandraEmbeddedESAssemblyIT.java","218a912f9d8b5a6fb103ab5f1d1559ae47c040d3","Sat, 23 Nov 2013 23:48:01 -0500","Dan LaRocque","Removed ES from titan-dist-cassandra"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/PersistitStorageSetup.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueTest.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueTest.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueTest.java","82a28607789db083e5d7990ea635085a40f6891a","Fri, 22 Mar 2013 17:51:00 -0700","Blake Eggleston","adding key column value test"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueTest.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueTest.java","0d0aede04fe04ba8bd08b88fd429bb6164bf50ea","Mon, 15 Apr 2013 20:31:38 -0700","Blake Eggleston","cleaning up some of the persistit performance notes"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueTest.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueTest.java","f6fd0abe801fe52755cf0bc2353e1db780effe81","Fri, 22 Mar 2013 09:36:07 -0700","Blake Eggleston","adding key value store test with some related debugging"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueVariableTest.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueVariableTest.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyColumnValueVariableTest.java","997f422bddeaf7b94337a2e7c133e841d227fb46","Sun, 24 Mar 2013 19:23:09 -0700","Blake Eggleston","adding hash key column value test and related debugging"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","0abbf350c742477ae713b10b8f0d08b01678cc3a","Thu, 3 Oct 2013 11:43:41 -0400","Dan LaRocque","Testing, import, and unused variable cleanups"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","997f422bddeaf7b94337a2e7c133e841d227fb46","Sun, 24 Mar 2013 19:23:09 -0700","Blake Eggleston","adding hash key column value test and related debugging"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitHashKeyColumnValueTest.java","6a81a77aba9a178830829eabdaf8fc86672bfa04","Sun, 24 Mar 2013 10:07:18 -0700","Blake Eggleston","adding hash key column value test"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/blueprints/persistit/PersistitBlueprintsTest.java","62cadd3d192fa9f262c789e155f196f04ffe6323","Sat, 18 May 2013 18:45:06 -0700","Blake Eggleston","removing some vestigial tests"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/blueprints/persistit/PersistitBlueprintsTest.java","c0ba710e17eb71e85845b3d25a3d4412384c0e0d","Thu, 25 Apr 2013 19:46:10 -0700","Blake Eggleston","adding blueprints tests"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/blueprints/persistit/PersistitBlueprintsTest.java","d8c57570a1fdf50061db11d04567db3ba8b5f6b0","Sat, 30 Mar 2013 14:58:36 -0700","Blake Eggleston","moving tests into persistit package"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitSpeedComparisonPerformanceTest.java","5742e2bd9bbfc171d305faad6257fa4b82fd3c47","Sat, 30 Mar 2013 14:19:50 -0700","Blake Eggleston","adding the other graphdb tests"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphTest.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphPerformanceMemoryTest.java","0abbf350c742477ae713b10b8f0d08b01678cc3a","Thu, 3 Oct 2013 11:43:41 -0400","Dan LaRocque","Testing, import, and unused variable cleanups"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphPerformanceMemoryTest.java","008830dc26dfb392f3f13b929569c2a6f533372c","Sun, 29 Sep 2013 14:04:29 -0400","Dan LaRocque","Trying memory-reducing tunings for Persistit"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphPerformanceMemoryTest.java","493e45ce8b5dfe05731fcd7d055c008652c87637","Sun, 29 Sep 2013 10:08:23 -0400","Dan LaRocque","Tune MemoryTests footprint"
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphPerformanceMemoryTest.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-persistit/src/test/java/com/thinkaurelius/titan/graphdb/persistit/PersistitGraphConcurrentTest.java","5742e2bd9bbfc171d305faad6257fa4b82fd3c47","Sat, 30 Mar 2013 14:19:50 -0700","Blake Eggleston","adding the other graphdb tests"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","0abbf350c742477ae713b10b8f0d08b01678cc3a","Thu, 3 Oct 2013 11:43:41 -0400","Dan LaRocque","Testing, import, and unused variable cleanups"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","e243a727411fd194ac7464a6d63b9fb74db5c7ad","Wed, 8 May 2013 09:49:09 -0700","Blake Eggleston","synchronizing getExchange and getKeys"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","1fe2fbc00b42af6f5669586e6ed85de9505690c5","Sun, 5 May 2013 19:27:11 -0700","Blake Eggleston","un-hacking SessionId creation"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","7abcd11cccc79e9472459b29225216950e6c5914","Thu, 25 Apr 2013 19:46:55 -0700","Blake Eggleston","synchronizing transaction methods"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","3c6de92e129532ec816b33acf4ab5262e8caf532","Sat, 20 Apr 2013 09:24:13 -0700","Blake Eggleston","adding check for null transaction object"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","5a7866eac4d2b976c4fdf16d3c6356191d4e5a04","Fri, 19 Apr 2013 09:46:22 -0700","Blake Eggleston","adding session id pooling"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","838fc7d97aa1e6985ee87251bd8dc8655a719268","Mon, 15 Apr 2013 20:33:37 -0700","Blake Eggleston","disabling the exchange cache, it was causing the concurrent tests to fail"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","35420a435f54e160bf3e930bc1818f4d2582866f","Mon, 8 Apr 2013 17:34:03 -0400","Peter Beaman","Improve performance of Persistit adapter for Titan"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","2013cf5844c32fc60ba6288ee2a72be67d591f54","Sat, 30 Mar 2013 14:13:54 -0700","Blake Eggleston","fixing io array handling"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","2bd19149b46827f63240700912e29b14fa06ffb6","Sat, 30 Mar 2013 10:39:24 -0700","Blake Eggleston","factoring out the PersistitJob class"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","1936d7bda04df09f486caefb5018d0736d67741c","Sat, 30 Mar 2013 09:44:46 -0700","Blake Eggleston","changing value serialization from byte arrays to strings"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","37887cc2467ea60934adc9bf7c598020496c055f","Fri, 29 Mar 2013 23:01:43 -0700","Blake Eggleston","refactoring key/val io into static methods"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","2f9172f9906d65b50a759519d3c447ecbb46251b","Fri, 29 Mar 2013 10:16:29 -0700","Blake Eggleston","refactoring transaction to work with session ids and manage exchange instances"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","f6fd0abe801fe52755cf0bc2353e1db780effe81","Fri, 22 Mar 2013 09:36:07 -0700","Blake Eggleston","adding key value store test with some related debugging"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","384a524e8c0bdb4818b5376d9cebb49d9c5e57ad","Wed, 20 Mar 2013 15:24:25 -0700","Blake Eggleston","continuing work implementing the persistit kv store"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitTransaction.java","37c93f1ca8e19ace0c6a87be21904d2eb20430f3","Sun, 17 Mar 2013 16:46:40 -0700","Blake Eggleston","implementing some of the store manager"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","0abbf350c742477ae713b10b8f0d08b01678cc3a","Thu, 3 Oct 2013 11:43:41 -0400","Dan LaRocque","Testing, import, and unused variable cleanups"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","f4b9d190aea39932f8982ce5990b4c0ee6d185f8","Mon, 30 Sep 2013 10:51:27 -0700","Matthias Broecheler","Merge branch 'master' of github.com:thinkaurelius/titan"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","dba49e7d08e6d764c269c8acbe3159b12c48c65e","Mon, 30 Sep 2013 03:46:05 -0400","Dan LaRocque","Improve exception handling in Persistit"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","500d10dda45e7e3f2c90760143d7183e234e3d15","Tue, 18 Jun 2013 13:08:59 -0400","Dan LaRocque","Refactor PersistitStoreManager towards BDB manager"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","19ce81ba46f1a546fde1e716e0bd5780d1992aa1","Sat, 18 May 2013 18:11:09 -0700","Blake Eggleston","Making buffer count configurable "
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","a80f9d4243669ffecacf8e187c6096869877422a","Sun, 5 May 2013 17:58:11 -0700","Blake Eggleston","putting transaction around tree creation"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","4eaee3f49d4ca21f3fed9456bfb0c1c7f42d535e","Sat, 20 Apr 2013 09:23:40 -0700","Blake Eggleston","making the persistit instance non static, and removing the storage directory on clear storage"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","0d0aede04fe04ba8bd08b88fd429bb6164bf50ea","Mon, 15 Apr 2013 20:31:38 -0700","Blake Eggleston","cleaning up some of the persistit performance notes"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","35420a435f54e160bf3e930bc1818f4d2582866f","Mon, 8 Apr 2013 17:34:03 -0400","Peter Beaman","Improve performance of Persistit adapter for Titan"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","2f9172f9906d65b50a759519d3c447ecbb46251b","Fri, 29 Mar 2013 10:16:29 -0700","Blake Eggleston","refactoring transaction to work with session ids and manage exchange instances"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","997f422bddeaf7b94337a2e7c133e841d227fb46","Sun, 24 Mar 2013 19:23:09 -0700","Blake Eggleston","adding hash key column value test and related debugging"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","d3c5ae17a520c104b3d6fe6754dbca25fb272a96","Sat, 23 Mar 2013 21:42:57 -0700","Blake Eggleston","tweaking behavior and order of operations for kv store"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","f6fd0abe801fe52755cf0bc2353e1db780effe81","Fri, 22 Mar 2013 09:36:07 -0700","Blake Eggleston","adding key value store test with some related debugging"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","384a524e8c0bdb4818b5376d9cebb49d9c5e57ad","Wed, 20 Mar 2013 15:24:25 -0700","Blake Eggleston","continuing work implementing the persistit kv store"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitStoreManager.java","37c93f1ca8e19ace0c6a87be21904d2eb20430f3","Sun, 17 Mar 2013 16:46:40 -0700","Blake Eggleston","implementing some of the store manager"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","dba49e7d08e6d764c269c8acbe3159b12c48c65e","Mon, 30 Sep 2013 03:46:05 -0400","Dan LaRocque","Improve exception handling in Persistit"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","123611fc7df7e35712a0be959a846978d4fb4f29","Sat, 18 May 2013 23:39:51 -0700","Blake Eggleston","porting titan-persistit to 0.3.x"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","e243a727411fd194ac7464a6d63b9fb74db5c7ad","Wed, 8 May 2013 09:49:09 -0700","Blake Eggleston","synchronizing getExchange and getKeys"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","a80f9d4243669ffecacf8e187c6096869877422a","Sun, 5 May 2013 17:58:11 -0700","Blake Eggleston","putting transaction around tree creation"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","e46c3ca06c43117a968dfd0751a1f004f58237de","Sat, 4 May 2013 16:48:04 -0700","Blake Eggleston","creating tree on kv store instantiation instead of on first use. This was causing problems because a tree would be instantiated within one tx, then another tx would try to access it before the other tx was committed."
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","3412e3f272514038f2e9bede9a6f39d4506cb8e4","Fri, 3 May 2013 16:22:26 -0700","Blake Eggleston","synchronizing transaction r/w per http://akiban.github.io/persistit/javadoc/com/persistit/Transaction.html#_threadManagement"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","0d0aede04fe04ba8bd08b88fd429bb6164bf50ea","Mon, 15 Apr 2013 20:31:38 -0700","Blake Eggleston","cleaning up some of the persistit performance notes"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","35420a435f54e160bf3e930bc1818f4d2582866f","Mon, 8 Apr 2013 17:34:03 -0400","Peter Beaman","Improve performance of Persistit adapter for Titan"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","2013cf5844c32fc60ba6288ee2a72be67d591f54","Sat, 30 Mar 2013 14:13:54 -0700","Blake Eggleston","fixing io array handling"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","2bd19149b46827f63240700912e29b14fa06ffb6","Sat, 30 Mar 2013 10:39:24 -0700","Blake Eggleston","factoring out the PersistitJob class"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","1936d7bda04df09f486caefb5018d0736d67741c","Sat, 30 Mar 2013 09:44:46 -0700","Blake Eggleston","changing value serialization from byte arrays to strings"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","37887cc2467ea60934adc9bf7c598020496c055f","Fri, 29 Mar 2013 23:01:43 -0700","Blake Eggleston","refactoring key/val io into static methods"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","2f9172f9906d65b50a759519d3c447ecbb46251b","Fri, 29 Mar 2013 10:16:29 -0700","Blake Eggleston","refactoring transaction to work with session ids and manage exchange instances"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","98780eabec1fa5c39d2aa7bc36d91b46577c38e4","Mon, 25 Mar 2013 18:30:23 -0700","Blake Eggleston","restricting exchange instances to the thread the were instantiated on"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","997f422bddeaf7b94337a2e7c133e841d227fb46","Sun, 24 Mar 2013 19:23:09 -0700","Blake Eggleston","adding hash key column value test and related debugging"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","5dddb5cbbb01c59cad286774c31c209c172dedfe","Sun, 24 Mar 2013 10:06:48 -0700","Blake Eggleston","adding thread safe pooling class for persistit exchange instances"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","d3c5ae17a520c104b3d6fe6754dbca25fb272a96","Sat, 23 Mar 2013 21:42:57 -0700","Blake Eggleston","tweaking behavior and order of operations for kv store"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","a8df50a328f01b4d74e287695422ffe19536a131","Fri, 22 Mar 2013 16:44:16 -0700","Blake Eggleston","debugging key value store implementation"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","f6fd0abe801fe52755cf0bc2353e1db780effe81","Fri, 22 Mar 2013 09:36:07 -0700","Blake Eggleston","adding key value store test with some related debugging"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","a196420e22f98e153d198bd89d0b950f94b2a788","Thu, 21 Mar 2013 12:33:40 -0700","Blake Eggleston","adding the rest of the KeyValueStore method implementations"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","384a524e8c0bdb4818b5376d9cebb49d9c5e57ad","Wed, 20 Mar 2013 15:24:25 -0700","Blake Eggleston","continuing work implementing the persistit kv store"
"./titan-persistit/src/main/java/com/thinkaurelius/titan/diskstorage/persistit/PersistitKeyValueStore.java","37c93f1ca8e19ace0c6a87be21904d2eb20430f3","Sun, 17 Mar 2013 16:46:40 -0700","Blake Eggleston","implementing some of the store manager"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ExceptionUtil.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ExceptionUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ProperInterval.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ProperInterval.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/AbstractLongListUtil.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/AbstractLongListUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/RandomRemovalList.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/RandomRemovalList.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/RandomRemovalList.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IntHashSet.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IntHashSet.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Maps.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Maps.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/PointInterval.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ByteSize.java","674dd4cbecdbfd164308d73430f045723fffc9ca","Tue, 19 Nov 2013 01:35:15 -0800","Matthias Broecheler","computed size of guava entry with soft values"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ByteSize.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ByteSize.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IterablesUtil.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IterablesUtil.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IterablesUtil.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IterablesUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Removable.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Removable.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Removable.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/CompactMap.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/CompactMap.java","b7cc56103f1cc124d6d582c920c314e5c38037fd","Wed, 13 Feb 2013 16:06:01 -0800","Matthias Broecheler","Added CompactMap as a utility that will be useful."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Interval.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ArraysUtil.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ArraysUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/BitMap.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/BitMap.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Factory.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Factory.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/LongCounter.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/LongCounter.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Retriever.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Retriever.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/Retriever.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ImmutableIntSet.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/ImmutableIntSet.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/datastructures/IntSet.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/traversal/AllEdgesIterable.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/traversal/AllEdgesIterator.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/encoding/LongEncoding.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/encoding/LongEncoding.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/encoding/LongEncoding.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/ObjectAccumulator.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/ObjectAccumulator.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","2cd3aed74079cc5b5206e2c387b2cfcde5dbb4e2","Fri, 20 Dec 2013 23:43:45 -0500","Dan LaRocque","Replacing AtomicLongs with Metrics Counters"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","67bf106dcc7470e2d6b7ef94734f200885bf35ee","Fri, 18 Oct 2013 00:18:22 -0400","Dan LaRocque","Added Metrics Graphite reporter support"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","5189ffb35b6bc01afd6e32160771e3a890ac6963","Thu, 17 Oct 2013 23:02:02 -0400","Dan LaRocque","Cleanup imports in MetricManager and GraphDBConfig"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","c2d5cf981a65a8858de1907cbbb8e64ff159b6ac","Thu, 17 Oct 2013 22:59:10 -0400","Dan LaRocque","Tested and tweaked Ganglia Metrics reporter"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","6d48623f4838983ae8989faccfdee1c4ddd4df76","Thu, 17 Oct 2013 19:40:32 -0400","Dan LaRocque","Adding Metrics Ganglia and Graphite support"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/MetricManager.java","54b2b1bae566832433c6c20393956a1d6849508c","Thu, 23 May 2013 21:09:40 -0400","Dan LaRocque","Testing Metrics on Thrift Cassandra backend"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/IntegerDoubleFrequency.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/IntegerDoubleFrequency.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/IntegerLongFrequency.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/stats/IntegerLongFrequency.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/system/Threads.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/system/Threads.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/util/system/IOUtils.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/util/system/IOUtils.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StorageCallable.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/BackendCompression.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/DirectoryUtil.java","c7ec60ae9e7240b280235a9732142f1aa37ca847","Wed, 13 Nov 2013 14:08:38 -0800","Matthias Broecheler","Fixed error message"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/DirectoryUtil.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/DirectoryUtil.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/DirectoryUtil.java","ad06aa3c92dc62cecdadc1c9e3bc59a712c0c2b2","Mon, 25 Mar 2013 16:35:24 -0700","Matthias Broecheler","refactored and updated BerkeleyJE"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/UncheckedCallable.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","63000653344b797a5b533f3329bfcda0d474fbf2","Thu, 31 Oct 2013 19:47:55 -0400","Dan LaRocque","Rewrite ByteBufferUtil#hashcode(...) methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","644da002e709efb5d37c61438197f004aad480ca","Thu, 9 May 2013 15:20:35 -0400","Dan LaRocque","Added two StaticBuffer helpers to ByteBufferUtil"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","52cc81327a150d9aaee1df165fa53aba1e8a59e4","Wed, 8 May 2013 11:17:31 -0700","Matthias Broecheler","Premature commit, fixed"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","d90fe733ea83385a6db30e31421f7e1c46baad69","Wed, 8 May 2013 11:02:12 -0700","Matthias Broecheler","Modified ByteBufferUtil to use only absolute access"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","cd996b3e6e1d1101bfc91a3e19a153c03622023f","Mon, 18 Mar 2013 00:20:28 -0700","Pavel Yaskevich","refactor and optimize HBase implementation"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ByteBufferUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadByteBuffer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadByteBuffer.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadByteBuffer.java","b72b6c155f97e642f39677104d85b16f98b20777","Sun, 4 Aug 2013 16:35:14 -0700","Matthias Broecheler","Refactored VariableLong adding support for better prefix writing and backward writing of variable long."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadByteBuffer.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadByteBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/WriteByteBuffer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/WriteByteBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/KeyColumn.java","d0f32f5108a2b429be66cfcf021b51c8aff9d0b5","Wed, 8 May 2013 23:55:48 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/KeyColumn.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/KeyColumn.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/KeyColumn.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticByteBuffer.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticByteBuffer.java","6af9c7adeb8ceaeddc9014986ded255665f1a2e1","Thu, 26 Sep 2013 13:12:11 -0700","Matthias Broecheler","Minor refactoring of Hazelcast implementation"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticByteBuffer.java","e48eb1d73871f20466bbcc3983af3d075baa0911","Thu, 9 May 2013 15:22:12 -0400","Dan LaRocque","Added Javadoc on StaticByteBuffer constructor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticByteBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","f5925c76f06bec3d53219a372374f7d085445e6e","Tue, 9 Jul 2013 20:29:26 -0700","Dan LaRocque","Hacking ConsistentKeyLockStore/Txn"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","f5809dd85c4258403960fab53c77ad5cabfa35f9","Tue, 9 Jul 2013 03:00:03 -0700","Dan LaRocque","Hooked up new locking code to legacy interface"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimeUtility.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadArrayBuffer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadArrayBuffer.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadArrayBuffer.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/ReadArrayBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/WriteBufferUtil.java","d0f32f5108a2b429be66cfcf021b51c8aff9d0b5","Wed, 8 May 2013 23:55:48 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/WriteBufferUtil.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/NoLock.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/NoLock.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/NoLock.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimestampProvider.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimestampProvider.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/TimestampProvider.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/BackendOperation.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/BackendOperation.java","4ca4dc0452a4fce614ece988424a80856c16723d","Mon, 6 May 2013 18:05:35 -0700","Matthias Broecheler","Increased test coverage in LockKeyColumnValueStore - currently does not pass for thrift!"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/BackendOperation.java","aea1fb24b10ce49dc7f6c632ee93261dd7db1762","Mon, 6 May 2013 14:13:45 -0700","Matthias Broecheler","Refactored BackendOperations into a separate class. Improved error/log messages."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticArrayBuffer.java","325c5c15cfe6b8cf34f71277329504938e73f847","Wed, 30 Oct 2013 16:16:31 -0700","Matthias Broecheler","1) Fixed static StaticArrayBuffer.compare method 2) Use StaticBuffer in Hazelcast as value and register explicit serialization 3) Fixed CacheStoreAdapter when compression is used."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticArrayBuffer.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticArrayBuffer.java","0bc0ccdf24f07b042108a57e26de93a51c176e0c","Thu, 9 May 2013 17:06:09 -0400","Dan LaRocque","Re-adding accidentally removed StaticArrayBuffer"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticArrayBuffer.java","e1ebf1275a27dbec79f44960b4786c7696ebb8d3","Thu, 9 May 2013 16:40:59 -0400","Dan LaRocque","Untested refactoring of LocalLockMediatorTest"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/StaticArrayBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/Hex.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/Hex.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/IOCallable.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedIterator.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedIterator.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedIterator.java","55b5a596d895edbfb073f19e6e825c39650cf381","Wed, 19 Jun 2013 16:26:10 -0700","Pavel Yaskevich","refactor MetricInstrumented{Store, Iterator} and add missing getKeys(...) methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedIterator.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","9840c19ee70c410977c91d813116b90f987dbe4f","Mon, 23 Dec 2013 11:36:00 -0500","Dan LaRocque","Tweak getSlice and getKeys metrics names"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","e43b1354e899a7261f5b81b64ed8e35f79177ad8","Mon, 21 Oct 2013 17:11:14 -0400","Dan LaRocque","Renamed GraphDBConf constants and updated javadocs"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","149b8d85f0e5390ddcf03810279fbbe9d34f64f8","Fri, 18 Oct 2013 18:09:49 -0400","Dan LaRocque","Fix broken getSlice.iterator Metric names"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","6b8c08187f96dd6730c5d5d318f1f2f52d5b2861","Fri, 18 Oct 2013 17:56:43 -0400","Dan LaRocque","Fix getSlice Metric name mangling"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","55b5a596d895edbfb073f19e6e825c39650cf381","Wed, 19 Jun 2013 16:26:10 -0700","Pavel Yaskevich","refactor MetricInstrumented{Store, Iterator} and add missing getKeys(...) methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","868ae8feeb52f44d7df5cc0ee6b2c6934a96082f","Tue, 4 Jun 2013 14:03:28 -0400","Dan LaRocque","Added option to merge Metrics across stores"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/MetricInstrumentedStore.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/RecordIterator.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/util/RecordIterator.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","db73354894a076eeadbe6a361745e3c9c8592dc7","Wed, 8 May 2013 21:33:01 -0400","Dan LaRocque","locking.consistentkey Javadoc and import changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TransactionHandle.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexInformation.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/KeyInformation.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/KeyInformation.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/KeyInformation.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/HashPrefixKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexTransaction.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/RawQuery.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/StandardKeyInformation.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","6a63bd5b144acfbb475141ae921e0b610b2ab7da","Thu, 7 Nov 2013 18:35:33 -0800","Matthias Broecheler","Fixes #457."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","f77a4f7d95c07a0f54fc714dc97ddbb6a19ab431","Fri, 27 Sep 2013 18:05:37 -0700","Matthias Broecheler","Fixes #297"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexQuery.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexEntry.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexEntry.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexEntry.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexEntry.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","ea0027bd43653789c51d148c036993a63291a44a","Sun, 3 Mar 2013 19:03:26 -0800","Matthias Broecheler","Converted exception thrown when max result size is exceeded to warning and returning top results."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexProvider.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexMutation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexMutation.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexMutation.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/indexing/IndexMutation.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/StorageException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/NoOpStoreTransaction.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/NoOpStoreTransaction.java","6af9c7adeb8ceaeddc9014986ded255665f1a2e1","Thu, 26 Sep 2013 13:12:11 -0700","Matthias Broecheler","Minor refactoring of Hazelcast implementation"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","d56267d3f843d3d8794ddf9ab69f8d6d501efe81","Mon, 11 Nov 2013 12:58:25 -0800","Matthias Broecheler","Pulled authentication to DistributedStoreManager."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","7e9fc5d9058000bd751b9ed70953861c3f698050","Fri, 8 Nov 2013 09:01:04 -0500","Dan LaRocque","Merge branch 'master' of github.com:janarthanamr/titan into janarthanamr-master"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","b7d6ba90728d9da170b6293ec58982f182d3631e","Wed, 23 Oct 2013 23:59:03 -0700","janar","reproduce the bug with ConsistentKeyIDManager"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","8a8b0921d1b7aa791666a7807a219310435eb41f","Sat, 2 Mar 2013 22:25:38 -0800","Matthias Broecheler","allowed elastic search transport client, changed config option parsing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/DistributedStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/LocalStoreManager.java","25010ae4fba93fddc4ae4326ed6f8f2fcdbcd856","Tue, 12 Nov 2013 08:02:09 -0500","Dan LaRocque","Refactor Infinispan persistence configuration"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/LocalStoreManager.java","fbfdf29597737e08d6c1354f3c99bb37fbe9b9c4","Fri, 13 Sep 2013 21:26:14 -0700","Pavel Yaskevich","add Hazelcast CacheStore implementation and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/LocalStoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/LocalStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/common/AbstractStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/PermanentStorageException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/PermanentStorageException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","6961aa8c13bba370070d7a6e14a6c1691ca9bb9c","Fri, 13 Sep 2013 16:41:24 -0400","Dan LaRocque","Removing IDAuthority's peekNextID method"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","4ca4dc0452a4fce614ece988424a80856c16723d","Mon, 6 May 2013 18:05:35 -0700","Matthias Broecheler","Increased test coverage in LockKeyColumnValueStore - currently does not pass for thrift!"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","560c02dc92a77b07cd3fead1f073c16b948eb2be","Tue, 30 Apr 2013 12:30:28 -0700","Matthias Broecheler","Fixed InMemoryKCVS implementation. Removed redundancy when storing loop edges. Fixes #237."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/ConsistentKeyIDManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","6961aa8c13bba370070d7a6e14a6c1691ca9bb9c","Fri, 13 Sep 2013 16:41:24 -0400","Dan LaRocque","Removing IDAuthority's peekNextID method"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/TransactionalIDManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/idmanagement/AbstractIDManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/Locker.java","a5ee2121451ea269f70a6e38e31688fe8675fb90","Thu, 11 Jul 2013 19:07:16 -0400","Dan LaRocque","Locking refactoring and javadoc cleanup"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/Locker.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/Locker.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/TimestampRid.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","27371b98cac421c0a3cbab7ff771e99a3b73c7b4","Thu, 12 Sep 2013 11:09:30 -0400","Dan LaRocque","Fix infinite recursion"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","0871d3b52fa3abc87bad76221e975b27283bf798","Fri, 6 Sep 2013 13:13:33 -0700","Matthias Broecheler","fixed bugs in wrappers (did not unwrap transactional handle)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","1901437c65665c8ce3a0bfadeb2d667f54f5156d","Fri, 2 Aug 2013 17:08:52 -0700","Pavel Yaskevich","add missing getKeys/getSlice methods to ExpectedValueCheckingStore"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingStore.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLockerSerializer.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLockStatus.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLockStatus.java","95532f532603d43a7b274d54388945c4f0fd1718","Thu, 11 Jul 2013 20:29:33 -0400","Dan LaRocque","Javadoc updates"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLockStatus.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","708cc70b27832d64688553d81fda5ef5cf3e40ab","Tue, 12 Nov 2013 05:44:47 -0500","Dan LaRocque","ExpectedValueCheckingStore tx handling tweaks"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","92f7dab9f6e19edeb44cfdb312ea4416355c09b9","Mon, 23 Sep 2013 20:18:57 -0400","Dan LaRocque","Reorder baseTx.commit() and deleteAllLocks()"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ExpectedValueCheckingTransaction.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","5d743bf042390ddb19d5537343e9b7ff86167d89","Thu, 14 Nov 2013 22:57:53 -0500","Dan LaRocque","Fixing timestamp handling bug in CK locker"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","de2bd3ff0fd62eda28d8441caa4b9771d4cc0071","Thu, 1 Aug 2013 07:04:25 -0400","Dan LaRocque","Tweaks for timeout-sensitive failure on Travis"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","95532f532603d43a7b274d54388945c4f0fd1718","Thu, 11 Jul 2013 20:29:33 -0400","Dan LaRocque","Javadoc updates"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","a5ee2121451ea269f70a6e38e31688fe8675fb90","Thu, 11 Jul 2013 19:07:16 -0400","Dan LaRocque","Locking refactoring and javadoc cleanup"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","7bc1927272e241cbfb0589251ca4b3a76f70e16f","Wed, 10 Jul 2013 01:53:40 -0700","Dan LaRocque","Fix ConsistentKeyLocker & Test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","a242da6bd95a472692e4aecbc8fe69d297e0146a","Wed, 10 Jul 2013 00:55:03 -0700","Dan LaRocque","Hacked an Astyanax-Recipes-based lock impl"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","f5925c76f06bec3d53219a372374f7d085445e6e","Tue, 9 Jul 2013 20:29:26 -0700","Dan LaRocque","Hacking ConsistentKeyLockStore/Txn"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","f5809dd85c4258403960fab53c77ad5cabfa35f9","Tue, 9 Jul 2013 03:00:03 -0700","Dan LaRocque","Hooked up new locking code to legacy interface"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","09f36d8ef788522102a9b0668dad547cf8a35913","Mon, 8 Jul 2013 21:40:21 -0700","Dan LaRocque","Adding basic lock delete tests and impl"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","e9f9122fe166b8321db47de4c5f48d27f4b12076","Sat, 6 Jul 2013 21:50:23 -0700","Dan LaRocque","Refactoring ConsistentKeyLocker tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/consistentkey/ConsistentKeyLocker.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockStatus.java","42482c760ca1135357b6f503b63fc6b8163df6da","Thu, 11 Jul 2013 20:37:01 -0400","Dan LaRocque","Javadoc and unused class cleanup"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockStatus.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/TemporaryLockingException.java","f5f8789d1b6653ca2bf7015c2e48a5c969db8cd3","Fri, 13 Sep 2013 14:10:37 -0400","Dan LaRocque","Javadoc update on locking exception classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/TemporaryLockingException.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/TemporaryLockingException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/TemporaryLockingException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediators.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediators.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediators.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/transactional/TransactionalLockStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/PermanentLockingException.java","f5f8789d1b6653ca2bf7015c2e48a5c969db8cd3","Fri, 13 Sep 2013 14:10:37 -0400","Dan LaRocque","Javadoc update on locking exception classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/PermanentLockingException.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/PermanentLockingException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/PermanentLockingException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediator.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediator.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediator.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediator.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","b32822c8078b62fb9a8b0826d4591e131af71ee0","Mon, 23 Dec 2013 11:31:37 -0500","Dan LaRocque","Add Metrics counters on locking operations"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","91b9a1982588cbed616983f674d3781c5652d1de","Sun, 29 Sep 2013 23:44:37 -0700","Matthias Broecheler","Intermediate commit. Cassandra ordering is broken."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","a459e4a5853567cb7551a61f2a44a5f1862ff05f","Fri, 13 Sep 2013 14:08:14 -0400","Dan LaRocque","Changed local lock contention to permanent failure"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","dcf66f095188810e0c6adab62f05c52efc427e4a","Wed, 31 Jul 2013 21:08:56 -0400","Dan LaRocque","Reduced loglevel on a benign locking condition"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/AbstractLocker.java","a5ee2121451ea269f70a6e38e31688fe8675fb90","Thu, 11 Jul 2013 19:07:16 -0400","Dan LaRocque","Locking refactoring and javadoc cleanup"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockerState.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockerState.java","1a4e3d52743dfdec51dc66042d68792e44aafdc7","Thu, 11 Jul 2013 20:46:58 -0400","Dan LaRocque","Javadoc fix in LockerState"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockerState.java","42482c760ca1135357b6f503b63fc6b8163df6da","Thu, 11 Jul 2013 20:37:01 -0400","Dan LaRocque","Javadoc and unused class cleanup"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LockerState.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/locking/LocalLockMediatorProvider.java","13f65a745d1218706840615eb6bb53239054cc88","Thu, 11 Jul 2013 20:42:46 -0400","Dan LaRocque","Moved LocalLockMediator classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/ReadBuffer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/ReadBuffer.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/ReadBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","0c29e10c4d3f0101a0d08e64da13a6bf4cd30e64","Wed, 25 Sep 2013 20:49:36 -0700","Pavel Yaskevich","fix HazelcastKCVStore.mutate"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeySliceQuery.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyIterator.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyIterator.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyIterator.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyIterator.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManager.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManagerAdapter.java","d9cba807dd4f5311098bd1acd42d6e1d8c576bc4","Tue, 12 Nov 2013 19:40:18 -0800","Matthias Broecheler","Made check for transactional instead of locking"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManagerAdapter.java","d0fb48ff32e61389a369b3fa9768aac0d3194e29","Tue, 12 Nov 2013 22:21:15 -0500","Dan LaRocque","Modify cache store adapter for locking"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManagerAdapter.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManagerAdapter.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManagerAdapter.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/LimitedSelector.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/LimitedSelector.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/LimitedSelector.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","6c021244b88f9dc2c6572879d3de0090bf871ec2","Tue, 12 Nov 2013 06:14:15 -0500","Dan LaRocque","Initial commit of Infinispan transaction support"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","18717d3f5e275a23717e286feee817e677faba41","Thu, 26 Sep 2013 16:11:37 -0700","Pavel Yaskevich","add general CacheStoreTest to be used to test all CacheStore implementations"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","c69d8c93232ac8afdbbe8e5e7c4ff00f644733d5","Thu, 26 Sep 2013 13:20:06 -0700","Matthias Broecheler","Minor refactoring of Hazelcast implementation"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","fbfdf29597737e08d6c1354f3c99bb37fbe9b9c4","Fri, 13 Sep 2013 21:26:14 -0700","Pavel Yaskevich","add Hazelcast CacheStore implementation and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","e122ef74812c71b74fa6794a4b484e211586f188","Wed, 11 Sep 2013 22:23:18 -0700","Pavel Yaskevich","remove redundant CacheStore.insert method"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","47b88f030fb6640b6c1da7d3f03267ca30018acf","Wed, 11 Sep 2013 11:47:13 -0700","Pavel Yaskevich","add insert method to CacheStore"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStore.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeySelector.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeySelector.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeySelector.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStoreManager.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVMutation.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVMutation.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheUpdateException.java","47b88f030fb6640b6c1da7d3f03267ca30018acf","Wed, 11 Sep 2013 11:47:13 -0700","Pavel Yaskevich","add insert method to CacheStore"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheUpdateException.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreManagerAdapter.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStore.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStore.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/BaseKeyColumnValueAdapter.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/BaseKeyColumnValueAdapter.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManager.java","47b88f030fb6640b6c1da7d3f03267ca30018acf","Wed, 11 Sep 2013 11:47:13 -0700","Pavel Yaskevich","add insert method to CacheStore"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreManager.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","5cff7f7bb337232ac4461da6258055b68def4c06","Fri, 4 Oct 2013 18:06:04 -0400","Dan LaRocque","Add column slice bounds check to OrderedKCVS"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","0871d3b52fa3abc87bad76221e975b27283bf798","Fri, 6 Sep 2013 13:13:33 -0700","Matthias Broecheler","fixed bugs in wrappers (did not unwrap transactional handle)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","d221cfbda0cd6fa63a8f3b27ad73dc568b6ff264","Fri, 21 Jun 2013 23:42:44 -0700","Pavel Yaskevich","add getKeys(KeyRangeQuery) test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","3ed3d1ca287fa21ed52e4e1f2053f4dccc8da83a","Thu, 20 Jun 2013 23:22:24 -0700","Pavel Yaskevich","add getKeys(SliceQuery) test for all of the backends"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/OrderedKeyValueStoreAdapter.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueEntry.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueEntry.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KeyValueEntry.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","c31a86d55f76fb755ad6e2be0d634048a3bb0da5","Tue, 12 Nov 2013 20:16:16 -0800","Matthias Broecheler","reverted change but added explicit comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","d9cba807dd4f5311098bd1acd42d6e1d8c576bc4","Tue, 12 Nov 2013 19:40:18 -0800","Matthias Broecheler","Made check for transactional instead of locking"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","d0fb48ff32e61389a369b3fa9768aac0d3194e29","Tue, 12 Nov 2013 22:21:15 -0500","Dan LaRocque","Modify cache store adapter for locking"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","325c5c15cfe6b8cf34f71277329504938e73f847","Wed, 30 Oct 2013 16:16:31 -0700","Matthias Broecheler","1) Fixed static StaticArrayBuffer.compare method 2) Use StaticBuffer in Hazelcast as value and register explicit serialization 3) Fixed CacheStoreAdapter when compression is used."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","42adf83d24c220f68f88f67d585d893c2ded6c7b","Sun, 6 Oct 2013 10:28:06 -0400","Dan LaRocque","Column slice hack for CacheStoreAdapter#getKeys"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/CacheStoreAdapter.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/keyvalue/KVUtil.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","2c41834eda2165883a3b457f42d75ed2feb08c88","Sat, 5 Oct 2013 19:00:27 -0400","Dan LaRocque","Rename KCVUtil to KCVSUtil"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","16212efb6c2a213b0c13104864ffc830c41db7c9","Thu, 3 Oct 2013 11:21:58 -0400","Dan LaRocque","Rewrite getKeys methods in CassandraThrift"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVSUtil.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreFeatures.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StaticBufferEntry.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StaticBufferEntry.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StaticBufferEntry.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StaticBufferEntry.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ByteBufferEntry.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ByteBufferEntry.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ByteBufferEntry.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ByteBufferEntry.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","6d7787fcd5f2d737db1e99cf9069e9253688de3e","Fri, 29 Mar 2013 00:26:17 -0700","Matthias Broecheler","Fixed thread race condition during bytebuffer comparison"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/Entry.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTransaction.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTransaction.java","70aafd84e0b27f9621cd67d5fef8115d44cea868","Sun, 29 Sep 2013 23:00:07 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction. Closes #369."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTransaction.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","5f69c33dadab8608076ca93e09ca2badbfa3671c","Tue, 12 Nov 2013 19:40:24 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","87800d3ff6b8866e35fcee14cc2244e6b6db5619","Tue, 29 Oct 2013 13:40:58 -0700","Matthias Broecheler","refactored sub-result set extraction into SliceQuery and added limit check."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","f77a4f7d95c07a0f54fc714dc97ddbb6a19ab431","Fri, 27 Sep 2013 18:05:37 -0700","Matthias Broecheler","Fixes #297"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/SliceQuery.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ConsistencyLevel.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ConsistencyLevel.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ConsistencyLevel.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ConsistencyLevel.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","034750dd1bb71e5084487c98abd8714c208382e3","Mon, 23 Dec 2013 16:21:24 -0500","Dan LaRocque","Replace AtomicLongs in CachedKCVS with Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","aa5049ef26756747a48294cb03441d221bb5abf2","Mon, 18 Nov 2013 14:50:42 -0800","Matthias Broecheler","Added additional counting test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","807de59a91ae64d8de2e43b6171deee2de0e053d","Tue, 12 Nov 2013 18:40:44 -0800","Matthias Broecheler","Fixed test case to reset statistics before run."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","9692b2e0e968267fb95f33b411508d21d0fce9e9","Thu, 24 Oct 2013 15:38:20 -0700","Matthias Broecheler","Reduce default cache size of CachedKeyColumnValueStore to 1000."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","0871d3b52fa3abc87bad76221e975b27283bf798","Fri, 6 Sep 2013 13:13:33 -0700","Matthias Broecheler","fixed bugs in wrappers (did not unwrap transactional handle)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","8537f8c2845843dc5f95a8e78ec75bb0f5c27438","Fri, 1 Mar 2013 01:02:05 -0800","Matthias Broecheler","Included full text search in all module"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/CachedKeyColumnValueStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","8c7d3d4a85b735d6e6d76c1f547164297a9355ab","Mon, 19 Aug 2013 23:24:36 -0700","Matthias Broecheler","Documentation typo fix"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","a1dfd56e8e8821462ff2ea4a5ca449bc6fe940e6","Fri, 2 Aug 2013 14:51:12 -0700","Pavel Yaskevich","merge with master"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","3172836097beffd9c3a44247bec24a042008629c","Sat, 6 Jul 2013 19:49:10 -0700","Dan LaRocque","WIP on locking refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","36b4b86f4d4b7edfb9f754960b38d9c1aa50a86f","Thu, 16 May 2013 16:21:56 -0700","Matthias Broecheler","Added 3 methods to KCVS."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","f515caf7b8093d15deaf31b6cf46b7e67b9a72f6","Thu, 9 May 2013 00:05:20 -0700","Matthias Broecheler","Merge branch 'titan03' of github.com:thinkaurelius/titan into titan03"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","db73354894a076eeadbe6a361745e3c9c8592dc7","Wed, 8 May 2013 21:33:01 -0400","Dan LaRocque","locking.consistentkey Javadoc and import changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","35b5b246b6a524718dcd1c89a31708ab021a2e83","Tue, 5 Mar 2013 18:21:35 -0800","Pavel Yaskevich","add C* global Vertex/Edge operatations"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e","Tue, 12 Nov 2013 16:18:44 -0800","Matthias Broecheler","Added metric and cache hit based test cases to ensure that the correct number of storage backend retrievals are happening. Removed query limit check for static query caching. Fixes #479. Made hashcode for SliceQuery children based on HashCodeBuilder."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","fd13f4e76ef100f1d5e669e35f55b7361fb88522","Tue, 1 Oct 2013 06:27:23 -0400","Dan LaRocque","Minor javadoc on KeyRangeQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","0c29e10c4d3f0101a0d08e64da13a6bf4cd30e64","Wed, 25 Sep 2013 20:49:36 -0700","Pavel Yaskevich","fix HazelcastKCVStore.mutate"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyRangeQuery.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStoreManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KeyColumnValueStoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/ReadOnlyKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2","Tue, 1 Oct 2013 21:14:31 -0400","Dan LaRocque","Monster getKeys refactoring and testing commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","0871d3b52fa3abc87bad76221e975b27283bf798","Fri, 6 Sep 2013 13:13:33 -0700","Matthias Broecheler","fixed bugs in wrappers (did not unwrap transactional handle)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/BufferedKeyColumnValueStore.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","560c02dc92a77b07cd3fead1f073c16b948eb2be","Tue, 30 Apr 2013 12:30:28 -0700","Matthias Broecheler","Fixed InMemoryKCVS implementation. Removed redundancy when storing loop edges. Fixes #237."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/ColumnValueStore.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","c273a4135544c773c7cddff41718ea943d0c5a55","Fri, 4 Oct 2013 18:04:06 -0400","Dan LaRocque","Make InMemoryKCVS respect column slice bounds"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","a1dfd56e8e8821462ff2ea4a5ca449bc6fe940e6","Fri, 2 Aug 2013 14:51:12 -0700","Pavel Yaskevich","merge with master"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","63ed96cb11c8a0754a1b402d621c1843d747e9c5","Fri, 14 Jun 2013 17:19:11 -0700","Pavel Yaskevich","add missing getKeys({KeyRange,Slice}Query, StoreTransaction)"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","374713614186bdbe505850403dad9fd1aa3c96e5","Sat, 25 May 2013 00:36:15 -0700","Pavel Yaskevich","add Cassandra adapters implemention of getSlice(List<StaticBuffer>, ...) + test"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","560c02dc92a77b07cd3fead1f073c16b948eb2be","Tue, 30 Apr 2013 12:30:28 -0700","Matthias Broecheler","Fixed InMemoryKCVS implementation. Removed redundancy when storing loop edges. Fixes #237."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","651755501bdb52a0b5700a341d9b2bd27393f78a","Fri, 19 Apr 2013 16:04:42 -0700","Matthias Broecheler","Improved performance of in memory key column value store by a factor of 3-5"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryKeyColumnValueStore.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","6c0c5d8489dc422707a66264560ac0236fc31bd9","Fri, 19 Jul 2013 23:12:40 -0700","Pavel Yaskevich","add HBase and LockKeyColumnValueStoreTest improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","e9c4a734ff5160673024538f5b3ef1339c5424e7","Tue, 30 Apr 2013 17:38:36 -0700","Matthias Broecheler","Fixes #201"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/inmemory/InMemoryStoreManager.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVMutation.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVMutation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVMutation.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/KCVMutation.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","04b25036801f88e71f3faaa295b3ecdbe64ad1ca","Sat, 9 Nov 2013 17:04:26 -0800","Matthias Broecheler","Made transactional timestamps fixed for the entire transaction and all associated mutations. Fixed test cases to correctly reflect that. Improved ConsistentKeyIDAllocation by making each mutation in its own transaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/keycolumnvalue/StoreTxConfig.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/WriteBuffer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/WriteBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/StaticBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/ScanBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","1621199028afbd27c03d9916adfa73905118811d","Tue, 30 Apr 2013 14:48:26 -0700","Matthias Broecheler","Updated mutation checking for emptiness. Updating missed test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Mutation.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","6961aa8c13bba370070d7a6e14a6c1691ca9bb9c","Fri, 13 Sep 2013 16:41:24 -0400","Dan LaRocque","Removing IDAuthority's peekNextID method"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/IDAuthority.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TemporaryStorageException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/TemporaryStorageException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","b2d5ca9d88093a13c75c0b92baaa80cf7664fc8c","Wed, 28 Aug 2013 21:17:15 -0700","Pavel Yaskevich","removed getKeys(StoreTransaction), fixed getSlice for ordered stores and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","aea1fb24b10ce49dc7f6c632ee93261dd7db1762","Mon, 6 May 2013 14:13:45 -0700","Matthias Broecheler","Refactored BackendOperations into a separate class. Improved error/log messages."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/BackendTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","f0d0dd798031df04d96863051ab440226a9c25b9","Fri, 21 Mar 2014 08:55:49 -0500","Richard Doll","Backend thread pool incorrectly fixed at 2 threads"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","b8258e12952c8201327c0a78893319dac0ede63b","Mon, 23 Dec 2013 14:33:55 -0500","Dan LaRocque","Refactor metrics configuration handling"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","e50826bd9866ca1fc1b8844a18f1dfdc0e122629","Tue, 17 Dec 2013 05:39:00 -0500","Dan LaRocque","Merge branch 'fix-for-performance' of github.com:mpouttuclarke/titan into mpouttuclarke-fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","d687805ab766138b29dc609ed4114ade496d03ae","Mon, 9 Dec 2013 17:07:14 -0700","Matt Pouttu-Clarke","If there is only one thread, then the threadpool is null and this throws error"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","5f69c33dadab8608076ca93e09ca2badbfa3671c","Tue, 12 Nov 2013 19:40:24 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","8dc47a327a10f167a618d11b74823d1b0b07e7a5","Mon, 11 Nov 2013 15:28:39 -0800","Matthias Broecheler","Added test that batch loading does not acquire any locks."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","483887dd28c0bebc246e6c50ef850a68f9c8a52e","Mon, 11 Nov 2013 16:53:30 -0500","Dan LaRocque","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","51082c187c57dcb37136245289151c42a165f43c","Thu, 31 Oct 2013 04:41:45 -0400","Dan LaRocque","Recognize "infinispan" as a storage.backend value"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","0aa2523df3f77916f7d2edcb20ae90dece6dd444","Wed, 30 Oct 2013 13:36:48 -0700","Matthias Broecheler","removed HaselcastKCVS"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","e43b1354e899a7261f5b81b64ed8e35f79177ad8","Mon, 21 Oct 2013 17:11:14 -0400","Dan LaRocque","Renamed GraphDBConf constants and updated javadocs"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","e7d720a6ab94c8ad0d20cfa9fe84b77a95c92bfe","Mon, 30 Sep 2013 11:37:39 -0700","Matthias Broecheler","Fixed timestamping outside a transactional scope."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","eebbf2b1a346e732e08b30e65abea825296a18d8","Thu, 26 Sep 2013 14:21:48 -0700","Matthias Broecheler","Added CacheStoreAdapter and test implementations for HazelCast"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","fbfdf29597737e08d6c1354f3c99bb37fbe9b9c4","Fri, 13 Sep 2013 21:26:14 -0700","Pavel Yaskevich","add Hazelcast CacheStore implementation and tests"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","759d7a8bdda71abf6c7da939f3b4d50799a7bb1e","Wed, 11 Sep 2013 11:50:01 -0700","Pavel Yaskevich","add EhCache/Hazelcast modules to main pom and all package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","442f468a5b0c962b5c087baa682302976a08cbb8","Sat, 7 Sep 2013 17:48:53 -0700","Matthias Broecheler","Fixes #273. Fixes #350"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","ae98b794c58d0c1fac20ce84bc7c4f7cc35d42d7","Thu, 1 Aug 2013 05:26:23 -0400","Dan LaRocque","Merge branch 'lock-refactoring'"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","25e5c517a2bd70d1b56003696391e63699b3fdd3","Thu, 1 Aug 2013 01:42:52 -0400","Dan LaRocque","Locking backend configuration changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","1afd8fd7abc445e5752f1184ef8d206d7a9dae65","Fri, 12 Jul 2013 00:12:58 -0400","Dan LaRocque","Renamed ConsistentKeyLockStore/Transaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","5c63652f0b6b0561a00fa200a233be2a16574b42","Thu, 11 Jul 2013 11:56:27 -0700","Dan LaRocque","Refactoring new locking classes"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","a242da6bd95a472692e4aecbc8fe69d297e0146a","Wed, 10 Jul 2013 00:55:03 -0700","Dan LaRocque","Hacked an Astyanax-Recipes-based lock impl"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","f5925c76f06bec3d53219a372374f7d085445e6e","Tue, 9 Jul 2013 20:29:26 -0700","Dan LaRocque","Hacking ConsistentKeyLockStore/Txn"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","f5809dd85c4258403960fab53c77ad5cabfa35f9","Tue, 9 Jul 2013 03:00:03 -0700","Dan LaRocque","Hooked up new locking code to legacy interface"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","94553bab8dc466a0362540e6203c119c066945e8","Mon, 8 Jul 2013 14:21:30 -0700","Dan LaRocque","Locking refactoring WIP"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","5308f068c7521d5d82ab44524d1578939adb3324","Tue, 18 Jun 2013 13:07:12 -0400","Dan LaRocque","Untested merge of Persistit to master"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","868ae8feeb52f44d7df5cc0ee6b2c6934a96082f","Tue, 4 Jun 2013 14:03:28 -0400","Dan LaRocque","Added option to merge Metrics across stores"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","d891da072c3a2f5f67d1748038fd3a550d2dabab","Sat, 18 May 2013 22:37:58 -0700","Blake Eggleston","Merge branch 'persistit' into titan03"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","aea1fb24b10ce49dc7f6c632ee93261dd7db1762","Mon, 6 May 2013 14:13:45 -0700","Matthias Broecheler","Refactored BackendOperations into a separate class. Improved error/log messages."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","70bb99de466b870cf0adf2978abaadaecda2a5f4","Thu, 28 Mar 2013 15:13:39 -0700","Matthias Broecheler","Added InMemoryKeyColumnValueStore Manager and registered with backend. Also, made keyslicequeries always be actual intervals."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","a08f6db2fe5ef87d6ea1b4f84d24df59941351fe","Mon, 25 Mar 2013 18:29:38 -0700","Blake Eggleston","adding configuration to persistit store manager"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","e1078ae8ce6b0a407ae6e384957c5c25cfb37de6","Tue, 19 Mar 2013 19:28:47 -0700","Matthias Broecheler","Registered storage backends and index providers"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","62ca1d0824abdc5871f7db54eac125363bba7cf4","Mon, 18 Mar 2013 14:13:08 -0700","Matthias Broecheler","registered existing storage backends"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","337d29854cc39d96b386ce43ca47371dd5e05034","Wed, 6 Mar 2013 21:36:23 -0800","Matthias Broecheler","make shorthand registering optional"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","60f9b6356efaf070aa8626c23bf42b70506703b9","Mon, 7 Jan 2013 16:17:49 -0800","Pavel Yaskevich","fix maven packaging issues"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-core/src/main/java/com/thinkaurelius/titan/diskstorage/Backend.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","06755bf3468ec82dea3743722f472e435784e0ba","Tue, 19 Nov 2013 14:56:38 -0800","Matthias Broecheler","Fixed exception message"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","f645e3f3afdef3b9bfdb8dd55c832dba0a6da500","Fri, 8 Nov 2013 16:08:41 -0500","Dan LaRocque","Mark ConcurrentLRUCache cleaner threads as daemon"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","34f6e2f4dde83a6ad5adbb753a739f49b48b6e52","Tue, 29 Oct 2013 12:27:09 -0700","Pavel Yaskevich","fix LRUVertexCache.get on absent items"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","77b07e2bfc071b27b1a24b2c5ff2f5b474ebd3e5","Tue, 29 Oct 2013 11:34:23 -0700","Pavel Yaskevich","fix CLRUC.putIfAbsent to do maintenance only if new item was added + CLRUC.put is back."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","9fd99f998c2ba1b636e03226b6e0c96ba9629408","Tue, 29 Oct 2013 10:48:45 -0700","Matthias Broecheler","Changed LRUCache to use putIfAbsent to avoid concurrency issues."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ConcurrentLRUCache.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/VertexCentricEdgeIterable.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/VertexCentricEdgeIterable.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/FakeLock.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/FakeLock.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/PriorityQueue.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ExceptionFactory.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/util/ExceptionFactory.java","4246ca352070a0dc5f4c27b69af120ab3fddaf52","Thu, 2 May 2013 17:58:20 -0700","Matthias Broecheler","Fixes #247"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseVertexCentricQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseVertexCentricQuery.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseVertexCentricQuery.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseVertexCentricQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexListInternal.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQuery.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryProcessor.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","fe35a70748c9cbddb95de058831a2d96cd153fcd","Wed, 18 Dec 2013 17:09:31 -0800","Matthias Broecheler","Fixes #307"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","2422c2dd3e9ec19dbf6bcc8096763523a6ced56b","Tue, 15 Oct 2013 13:15:40 -0700","Matthias Broecheler","Fixes #429. Added large index test to verify limit updates."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryUtil.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/FixedCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/FixedCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/PredicateCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/PredicateCondition.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/PredicateCondition.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/PredicateCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/LabelCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/LabelCondition.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/LabelCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/HiddenFilterCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/HiddenFilterCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/DirectionCondition.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/DirectionCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/DirectionCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Literal.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Literal.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Condition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/And.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/And.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/IncidenceCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/IncidenceCondition.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/IncidenceCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/ConditionUtil.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/ConditionUtil.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/ConditionUtil.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Or.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Or.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Or.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Not.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Not.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/Not.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/MultiCondition.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/MultiCondition.java","8fe95b8e03f36c7bca8721e1829ca8b9525fb367","Fri, 25 Oct 2013 18:14:14 -0700","Pavel Yaskevich","query.condition package improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/MultiCondition.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/MultiCondition.java","6d3cfd22aa976594ca3abceb1d66309b96b48d90","Wed, 23 Oct 2013 00:20:00 -0700","Matthias Broecheler","Fixes #439 multiquery issue."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/condition/MultiCondition.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/Query.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/Query.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/Query.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/Query.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","dcf545aa375576377da5af029e1c5a7b2d911b04","Thu, 14 Nov 2013 13:02:23 -0800","Matthias Broecheler","Disabled "smart" query limit setting and also disabled using SimpleQuery in case property prefetching is enabled."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","28f1f5697190952e8125f4fec58af5cc8e7fccd9","Mon, 11 Nov 2013 12:17:13 -0800","Matthias Broecheler","Added vertex centric index handling to SimpleVertexQueryProcessor for further performance improvements."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","4e71e58a8564d92e85610026e0e5e38382671ccb","Mon, 4 Nov 2013 22:13:23 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","27bc9b5f7d22009fb90d2d1849847e43c4253d6b","Sat, 2 Nov 2013 12:27:44 -0700","Matthias Broecheler","Refactored construction into VertexCentricQueryBuilder to make it centralized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","6bd2ad371464dca57bef6e8e642bb9a845c5c06d","Thu, 24 Oct 2013 13:29:50 -0700","Matthias Broecheler","Implements a property prefetching configuration option that will instruct transaction to load all properties on a vertex when a property is first looked up on the vertex. This leads to much better latencies on multiple vertex lookups against high latency storage backends and is hence enabled by default for distributed storage backends. Added performance test cases to validate its behavior and test performance. Closes #145"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","28650a32ec86c8fdccc8518318116ed408f1346b","Wed, 25 Sep 2013 17:11:49 -0700","Matthias Broecheler","Fixes #287"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/AbstractVertexCentricQueryBuilder.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BackendQueryHolder.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BackendQueryHolder.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BackendQueryHolder.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexLongList.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexLongList.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexLongList.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseQuery.java","d7d4bf68f98a8d67135fee9e52ceebe3cef1cdbd","Fri, 4 Oct 2013 05:35:38 -0700","Matthias Broecheler","Added test cases for ordering on both the diskstorage and TitanGraph level. Made sort ignore unmapped fields in ElasticSearch."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BaseQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","dcf545aa375576377da5af029e1c5a7b2d911b04","Thu, 14 Nov 2013 13:02:23 -0800","Matthias Broecheler","Disabled "smart" query limit setting and also disabled using SimpleQuery in case property prefetching is enabled."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","28f1f5697190952e8125f4fec58af5cc8e7fccd9","Mon, 11 Nov 2013 12:17:13 -0800","Matthias Broecheler","Added vertex centric index handling to SimpleVertexQueryProcessor for further performance improvements."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","27bc9b5f7d22009fb90d2d1849847e43c4253d6b","Sat, 2 Nov 2013 12:27:44 -0700","Matthias Broecheler","Refactored construction into VertexCentricQueryBuilder to make it centralized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","6bd2ad371464dca57bef6e8e642bb9a845c5c06d","Thu, 24 Oct 2013 13:29:50 -0700","Matthias Broecheler","Implements a property prefetching configuration option that will instruct transaction to load all properties on a vertex when a property is first looked up on the vertex. This leads to much better latencies on multiple vertex lookups against high latency storage backends and is hence enabled by default for distributed storage backends. Added performance test cases to validate its behavior and test performance. Closes #145"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","027caeb75002179fc0ab448d5c342f828eeb88ec","Fri, 14 Jun 2013 15:03:38 -0400","Dan LaRocque","Reverting to Blueprints 2.3.0"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","4e9486f68e4f4ce329bf32924d125d6f3b9aa0fa","Tue, 11 Jun 2013 08:26:52 -0400","Dan LaRocque","Throw exception in unimplemented BP 2.4.0 methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","f0966eb430f3dec10fc0534c24ec8677d82b53b7","Thu, 23 May 2013 18:16:04 -0400","Dan LaRocque","Added unimplemented Blueprints method stubs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","97f3c69b06ed6cf67dab963c4157eb9a0a77d50c","Tue, 21 May 2013 15:25:34 -0400","Dan LaRocque","Upgrade to latest tinkerpop 2.4.0-SNAPSHOT stack"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","309ec86b86c9d8bdcd61b715964dd073b4082ab7","Sat, 9 Mar 2013 14:33:29 -0800","Matthias Broecheler","fixed test cases for GraphQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexCentricQueryBuilder.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryExecutor.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryExecutor.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryExecutor.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/QueryExecutor.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","19d20cb9292a8b96033a01e1b7e91a3ae9fa0ae8","Tue, 19 Nov 2013 00:11:42 -0800","Matthias Broecheler","Removed streaming of large adjacency result sets since such iterative updating of limits is expensive and has very little benefit. Users should set a limit up front. In the REPL, a CTRL-C type functionality should be available to abort long running queries."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","28f1f5697190952e8125f4fec58af5cc8e7fccd9","Mon, 11 Nov 2013 12:17:13 -0800","Matthias Broecheler","Added vertex centric index handling to SimpleVertexQueryProcessor for further performance improvements."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","5f904d746f517fc714368c0258df4fd545e3829f","Mon, 4 Nov 2013 22:17:52 -0800","Matthias Broecheler","Fixed limit adjustment issue for SimpleVertexQueryProcessor #461"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","27bc9b5f7d22009fb90d2d1849847e43c4253d6b","Sat, 2 Nov 2013 12:27:44 -0700","Matthias Broecheler","Refactored construction into VertexCentricQueryBuilder to make it centralized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/SimpleVertexQueryProcessor.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","b428f3b0b34bc81d67ec83b7203320ba2578bf89","Thu, 7 Nov 2013 19:20:24 -0800","Matthias Broecheler","Fixes #426."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","6a63bd5b144acfbb475141ae921e0b610b2ab7da","Thu, 7 Nov 2013 18:35:33 -0800","Matthias Broecheler","Fixes #457."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","dcd82492cda4cbe13b0e664cfe5b6d08d00f3a2f","Fri, 4 Oct 2013 17:35:04 -0700","Matthias Broecheler","Make mappings explicit in ElasticSearch Adapter. Closes #359."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/GraphCentricQueryBuilder.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MultiVertexCentricQueryBuilder.java","27bc9b5f7d22009fb90d2d1849847e43c4253d6b","Sat, 2 Nov 2013 12:27:44 -0700","Matthias Broecheler","Refactored construction into VertexCentricQueryBuilder to make it centralized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MultiVertexCentricQueryBuilder.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MultiVertexCentricQueryBuilder.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MultiVertexCentricQueryBuilder.java","6d3cfd22aa976594ca3abceb1d66309b96b48d90","Wed, 23 Oct 2013 00:20:00 -0700","Matthias Broecheler","Fixes #439 multiquery issue."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MultiVertexCentricQueryBuilder.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/IndexQueryBuilder.java","ffa27ea571acff6aa6170448b6a48cc12dcd4d05","Wed, 18 Dec 2013 19:12:24 -0800","Matthias Broecheler","Fixes #507 introducing configuration option: ignore-unknown-index-key"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/IndexQueryBuilder.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/MetricsQueryExecutor.java","1e0a628dd2419781b53e19f17ee13596b6e2f163","Mon, 23 Dec 2013 09:28:33 -0500","Dan LaRocque","Wrap QueryExecutor implementations with Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/JointIndexQuery.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexArrayList.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexArrayList.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/VertexArrayList.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/TitanPredicate.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/TitanPredicate.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/LimitAdjustingIterator.java","28f1f5697190952e8125f4fec58af5cc8e7fccd9","Mon, 11 Nov 2013 12:17:13 -0800","Matthias Broecheler","Added vertex centric index handling to SimpleVertexQueryProcessor for further performance improvements."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/LimitAdjustingIterator.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/BackendQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/ElementQuery.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/ElementQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/ElementQuery.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/query/ElementQuery.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDInspector.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDInspector.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDInspector.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDInspector.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDInspector.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","7a76a03036e4bc5ed29697a12e183fb4c0e4d44d","Sat, 28 Sep 2013 12:27:36 -0700","Matthias Broecheler","Made methods in IDManager final for better inlining"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","fc2167333a252c29a6929dc33366ccd01ed34a32","Mon, 19 Aug 2013 12:30:18 -0700","Matthias Broecheler","Refactored and extedned IDManagementTest. Bugfix in IDHandler. Cleaned up IDManager"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/idmanagement/IDManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardKeyMaker.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardKeyMaker.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardKeyMaker.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardKeyMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttribute.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttribute.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttribute.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","61a34053f25c8e200c8abb8b96df55c1eef90dc2","Wed, 6 Nov 2013 18:43:13 -0800","Matthias Broecheler","Changed enum to remain backwards compatible with 0.4.0"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TypeAttributeType.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexDefinition.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TitanTypeClass.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/TitanTypeClass.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","4cdeca6febdd54b02c8bdc242a225dabc95f3d84","Fri, 15 Nov 2013 11:46:18 -0500","Dan LaRocque","Fix concurrent lazy init bug in TitanKeyVertex"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanKeyVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","99d550c559bde1fc67db64babd25ff35522710c4","Thu, 19 Dec 2013 23:25:04 -0800","Matthias Broecheler","Fixes #505. Fixes #498"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","a1584af975de2b75cfbd94b2e88f2a04d7a16ca8","Wed, 18 Dec 2013 17:58:06 -0800","Matthias Broecheler","toString on types returns the type's name instead of the vertex identifier. Fixes #525."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanTypeVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanLabelVertex.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanLabelVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanLabelVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/vertices/TitanLabelVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardLabelMaker.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardLabelMaker.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardLabelMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexType.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexType.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexType.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexType.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexType.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/DisableDefaultTypeMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/DisableDefaultTypeMaker.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/DisableDefaultTypeMaker.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/IndexParameters.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemType.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","484980482f7fa52a02f4f6fb1b0601e0e77f8d64","Sat, 28 Sep 2013 13:14:00 -0700","Matthias Broecheler","Fixes #260"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemKey.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/SystemTypeManager.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","74a078485b5b74ab1c779d83ab95c4ba8210faf4","Mon, 28 Oct 2013 15:23:38 -0700","Pavel Yaskevich","add LRU back to VertexCache and remove unnecessary boxing of longs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/system/EmptyVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","28650a32ec86c8fdccc8518318116ed408f1346b","Wed, 25 Sep 2013 17:11:49 -0700","Matthias Broecheler","Fixes #287"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","c083ed375c16493b7259361db76824688f678be7","Sat, 20 Apr 2013 18:24:42 -0700","Matthias Broecheler","More extensive datatype class checks: DataTypes cannot be abstract classes or interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/types/StandardTypeMaker.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/DefaultAttributeHandling.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/DataOutput.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/DataOutput.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/DataOutput.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/Serializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/Serializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/Serializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/Serializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","55de01a3c038f078877d930827376907e9c68ca3","Thu, 17 Apr 2014 13:38:32 -0700","Matthias Broecheler","Use BaseConfiguration instead of PropertiesConfiguration for empty config. Its leaner."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","fd860c1567104262ede573f4fd2de28196281f40","Sun, 13 Apr 2014 00:23:58 -0700","janar","Fix kryo serialization test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","8d77b28a6c2af185135adc1eb5ce464f6fc5fffc","Sat, 12 Apr 2014 07:39:31 +0000","jana","[bug 6889954] introduce basic kryo serialization for string. It does utf8 by default. more efficient,also spacewise than the current serialization. Enable turning it on by a configuration variable to allow for default 0.4.x serialization for b/w compat"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","1a52ef84f7fcdc10a99abc6e8fbb2eee19764fb7","Thu, 9 May 2013 18:17:49 -0700","Matthias Broecheler","copied array to avoid race conditions during serialization"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","4d7177ad85af546f5bdbf55f06c4b71bd06a3581","Thu, 28 Mar 2013 21:59:12 -0700","Matthias Broecheler","Updated Kryo for multi threaded use. Removed no longer needed dependencies."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","8c9ddfbaea8e815bcdbd5826c45e2a2213238d6b","Wed, 27 Mar 2013 19:35:37 -0700","Matthias Broecheler","changed constructor discovery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","ad8efa0d85e71b86dabfb7c37614001d3d435255","Mon, 25 Mar 2013 18:42:17 -0700","Matthias Broecheler","fixing serialization test"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","918650c8a4757c58c0697a98501b11edb1e08504","Mon, 25 Mar 2013 17:59:09 -0700","Matthias Broecheler","added verification checks prior to serialization to see if objects can be successfully deserialized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","4d7177ad85af546f5bdbf55f06c4b71bd06a3581","Thu, 28 Mar 2013 21:59:12 -0700","Matthias Broecheler","Updated Kryo for multi threaded use. Removed no longer needed dependencies."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","ad8efa0d85e71b86dabfb7c37614001d3d435255","Mon, 25 Mar 2013 18:42:17 -0700","Matthias Broecheler","fixing serialization test"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","918650c8a4757c58c0697a98501b11edb1e08504","Mon, 25 Mar 2013 17:59:09 -0700","Matthias Broecheler","added verification checks prior to serialization to see if objects can be successfully deserialized."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoDataOutput.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/InputScanBuffer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoAttributeSerializerAdapter.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoAttributeSerializerAdapter.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/kryo/KryoAttributeSerializerAdapter.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/GeoshapeHandler.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ByteArrayHandler.java","43eef3b1eef467bc0aa9828319687b12854a5869","Tue, 22 Oct 2013 16:22:38 +0900","Frederick Haebin Na","Byte array vertex key handling added."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FullFloatHandler.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ByteSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ByteSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ByteSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FullDoubleHandler.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/CharacterSerializer.java","9c4c96c9f7a426da769ff578dee5e15fe4cff4e5","Sat, 7 Sep 2013 14:41:27 -0700","Matthias Broecheler","Respected byte order in string serialization. Fixes #306"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/CharacterSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/CharacterSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/CharacterSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/LongSerializer.java","74a078485b5b74ab1c779d83ab95c4ba8210faf4","Mon, 28 Oct 2013 15:23:38 -0700","Pavel Yaskevich","add LRU back to VertexCache and remove unnecessary boxing of longs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/LongSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/LongSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/LongSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/LongSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DateSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DateSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DateSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DateSerializer.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/StringSerializer.java","9c4c96c9f7a426da769ff578dee5e15fe4cff4e5","Sat, 7 Sep 2013 14:41:27 -0700","Matthias Broecheler","Respected byte order in string serialization. Fixes #306"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/StringSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","902237a70341bbf77feaddb3ce0dac4269b8cc7f","Wed, 15 Jan 2014 21:33:35 -0800","Matthias Broecheler","Fixes #547 and adds test coverage around decimal truncation."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/DoubleSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","902237a70341bbf77feaddb3ce0dac4269b8cc7f","Wed, 15 Jan 2014 21:33:35 -0800","Matthias Broecheler","Fixes #547 and adds test coverage around decimal truncation."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/FloatSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/IntegerSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/IntegerSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/IntegerSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/IntegerSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/BooleanSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/BooleanSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/BooleanSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ShortSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ShortSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/attribute/ShortSerializer.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/AttributeHandling.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","8d77b28a6c2af185135adc1eb5ce464f6fc5fffc","Sat, 12 Apr 2014 07:39:31 +0000","jana","[bug 6889954] introduce basic kryo serialization for string. It does utf8 by default. more efficient,also spacewise than the current serialization. Enable turning it on by a configuration variable to allow for default 0.4.x serialization for b/w compat"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","996f18c029228ea12e140610ecf91ef94ee27641","Sat, 9 Nov 2013 18:29:26 -0800","Matthias Broecheler","Removed wrong serializer initialization line. Fixed for backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","387c16ea05ef9fa312f37139228d2bbf61455ff4","Sat, 9 Nov 2013 17:20:01 -0800","Matthias Broecheler","Merge pull request #452 from haebin/bytearray_patch"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","43eef3b1eef467bc0aa9828319687b12854a5869","Tue, 22 Oct 2013 16:22:38 +0900","Frederick Haebin Na","Byte array vertex key handling added."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","9c4c96c9f7a426da769ff578dee5e15fe4cff4e5","Sat, 7 Sep 2013 14:41:27 -0700","Matthias Broecheler","Respected byte order in string serialization. Fixes #306"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","4ac7c2597b66a628dd5511dff3cf0162381e0411","Wed, 17 Apr 2013 09:20:28 -0700","Matthias Broecheler","Fixes #217"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/SerializerInitialization.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/AttributeUtil.java","b7ffdfb333e459ae165a510b28c2e2b1dd090ef2","Fri, 10 Jan 2014 14:10:56 -0500","Dan LaRocque","Remove call to JRE-7-only library method"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/AttributeUtil.java","fe35a70748c9cbddb95de058831a2d96cd153fcd","Wed, 18 Dec 2013 17:09:31 -0800","Matthias Broecheler","Fixes #307"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/serialize/AttributeUtil.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDBlockSizer.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDBlockSizer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDBlockSizer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDPool.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDPoolExhaustedException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/IDPoolExhaustedException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","27864d7b1051c580877294d222f771d42f4de126","Fri, 14 Feb 2014 14:27:40 -0500","Dan LaRocque","Handle zero upper partition bounds"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","f67e8c38725a609aac1ae9cb2d9943c887be4846","Sun, 5 May 2013 20:10:55 -0700","Matthias Broecheler","Made StandardIDPool more robust and configurable. Added additional test cases to verify and extend coverage. Fixes #242"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","e669191b85fad7b8859534b757edf794b306d9c6","Thu, 28 Mar 2013 22:43:16 -0700","Matthias Broecheler","updated pom to 0.3.0, updated titan.properties, changed logging statement"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","04b50b0bdbf78e88f17eca6ba381fc7f64f323f6","Thu, 21 Mar 2013 14:36:34 -0700","Matthias Broecheler","Enabled local partitioning in embeded cassandra and improved log output in VertexIDAssigner"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/VertexIDAssigner.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/PartitionAssignment.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/PartitionAssignment.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimplePartitionAssignment.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimplePartitionAssignment.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/IDPlacementStrategy.java","3e20bed6c36fc7a60e1a2a30677510b6ffdd6498","Wed, 6 Nov 2013 00:33:20 -0800","Matthias Broecheler","changed return from long to int for partition id"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/IDPlacementStrategy.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/IDPlacementStrategy.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/IDPlacementStrategy.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/IDPlacementStrategy.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/DefaultPlacementStrategy.java","3e20bed6c36fc7a60e1a2a30677510b6ffdd6498","Wed, 6 Nov 2013 00:33:20 -0800","Matthias Broecheler","changed return from long to int for partition id"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/DefaultPlacementStrategy.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/DefaultPlacementStrategy.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/DefaultPlacementStrategy.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/DefaultPlacementStrategy.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimpleBulkPlacementStrategy.java","3e20bed6c36fc7a60e1a2a30677510b6ffdd6498","Wed, 6 Nov 2013 00:33:20 -0800","Matthias Broecheler","changed return from long to int for partition id"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimpleBulkPlacementStrategy.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimpleBulkPlacementStrategy.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimpleBulkPlacementStrategy.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/placement/SimpleBulkPlacementStrategy.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","9396857bde0ca22bace1a0e61fc1cdf1bee5e5c6","Mon, 23 Dec 2013 11:30:13 -0500","Dan LaRocque","Reformat broken debug log message"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","63e0a0a5030831bde3c6327b50a7f7d365cedd76","Sun, 5 May 2013 20:25:15 -0700","Matthias Broecheler","Added additional test case to StandardIDPool to check for correct failure"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","f67e8c38725a609aac1ae9cb2d9943c887be4846","Sun, 5 May 2013 20:10:55 -0700","Matthias Broecheler","Made StandardIDPool more robust and configurable. Added additional test cases to verify and extend coverage. Fixes #242"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StandardIDPool.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StaticIDBlockSizer.java","62c09c3d8ae9b5b2eaec3ae23602e6a2f4f4b056","Wed, 6 Nov 2013 17:01:20 -0800","Matthias Broecheler","Added IDAllocation tests for all other backends. Added additional test cases for IDPool exhaustion. Reworked the way the unique id marker is inserted into the id and checking of the upper bound."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StaticIDBlockSizer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idassigner/StaticIDBlockSizer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","dcb3d24410f8d464c2555478e99848cdde127df4","Mon, 12 Aug 2013 20:53:56 -0700","Matthias Broecheler","Added support for Contain.IN in Standard index. NOT TESTED"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/indexing/StandardIndexInformation.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","196f5f704ef5dd74b89b4203fcfdc858fbfb7efb","Mon, 19 Aug 2013 12:14:39 -0700","Matthias Broecheler","Refactored VariableLong test case, increased coverage to full coverage, added comments"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","063f0a17dcd39baa588e2f98222c005cee5a7274","Tue, 6 Aug 2013 17:58:45 -0700","Matthias Broecheler","Changed the storage format to: 1) Make it faster to read relation information without having to read properties of the relation (i.e. header only) by writing the relation and vertexDiffId backward 2) Moving the value for properties into the value part of the entry to allow longer properties than 2^15 byte."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","b72b6c155f97e642f39677104d85b16f98b20777","Sun, 4 Aug 2013 16:35:14 -0700","Matthias Broecheler","Refactored VariableLong adding support for better prefix writing and backward writing of variable long."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/VariableLong.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","fc2167333a252c29a6929dc33366ccd01ed34a32","Mon, 19 Aug 2013 12:30:18 -0700","Matthias Broecheler","Refactored and extedned IDManagementTest. Bugfix in IDHandler. Cleaned up IDManager"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/idhandling/IDHandler.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","a179f32b530cc97e67ff2db202b5ea4709cb4696","Mon, 23 Dec 2013 11:33:12 -0500","Dan LaRocque","Rename ExpirationStoreCache metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","2cd3aed74079cc5b5206e2c387b2cfcde5dbb4e2","Fri, 20 Dec 2013 23:43:45 -0500","Dan LaRocque","Replacing AtomicLongs with Metrics Counters"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","6576a7ae2dd5228ccd764c87fa73401f533dbd2d","Wed, 20 Nov 2013 18:11:45 -0800","Matthias Broecheler","Set cache concurrency to available processors"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","73117762b93d184041216b8e69ab742aba08970f","Mon, 18 Nov 2013 16:50:53 -0800","Matthias Broecheler","Better size estimation for cache"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/ExpirationStoreCache.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/StoreCache.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/cache/PassThroughStoreCache.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/RelationFactory.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/RelationFactory.java","3c9291f224046e7c155cdad757f90d1c74528a1d","Mon, 4 Mar 2013 14:51:26 -0800","Matthias Broecheler","Added RelationFactory for Faunus integration"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","99d550c559bde1fc67db64babd25ff35522710c4","Thu, 19 Dec 2013 23:25:04 -0800","Matthias Broecheler","Fixes #505. Fixes #498"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","8f279ee5239499bb066146a7dbe25927534cc840","Wed, 18 Dec 2013 17:29:51 -0800","Matthias Broecheler","Removing left over clear() method."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","483887dd28c0bebc246e6c50ef850a68f9c8a52e","Mon, 11 Nov 2013 16:53:30 -0500","Dan LaRocque","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","1e1de972e8476d29cffd112187c49710438477b9","Sun, 6 Oct 2013 01:04:35 -0400","Dan LaRocque","Heavily-conflicted inmemory->master merge attempt"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","cfecb0c85cf2539eb2bc01c90a83e7f3572d57d6","Fri, 4 Oct 2013 23:18:42 -0400","Dan LaRocque","Merge branch 'indexing4'"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","099cd16accd059c0272559d04ecd5ea2efd066b8","Sun, 29 Sep 2013 15:31:20 -0700","Matthias Broecheler","Made StoreTransaction configurable and introduced StoreTxConfig object for that purpose."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","bf10db3120bf251e613ac7390f981fe8ffbdffd3","Sun, 29 Sep 2013 14:51:47 -0700","Matthias Broecheler","Refactored StoreFeatures to disentangle scan support from ordering of keys."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","484980482f7fa52a02f4f6fb1b0601e0e77f8d64","Sat, 28 Sep 2013 13:14:00 -0700","Matthias Broecheler","Fixes #260"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","3fedaf2cdff20618a3b06951f72e0da59204c6de","Fri, 27 Sep 2013 21:10:30 -0700","Matthias Broecheler","Fixes #393. Fixes another issue where loop edges get deleted twice."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","05dd3ea9ef139bc499901fe5a46df22f58e87b4f","Fri, 27 Sep 2013 14:05:50 -0700","Matthias Broecheler","Fixes #314. Reordering persistence: first writing edges to edge store and then doing index updates. Also, now making sure that each relation is only once passed to an index update."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","1f4fc575096c87266b191650b673ada588fcf759","Sat, 21 Sep 2013 21:52:08 -0700","Pavel Yaskevich","add Hazecalcast TitanGraph{Performance}Test implementations"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","8c075d95ed44e3ec55c2492056391f75b7048dbe","Sat, 7 Sep 2013 15:28:57 -0700","Matthias Broecheler","Merge branch 'multiquery'"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","644bfcd310f98134b4bba7157dba764e21159f7e","Tue, 20 Aug 2013 17:33:39 -0700","Matthias Broecheler","Finished initial refactoring for Pavel to review. DOES NOT BUILD"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","5404bf2b6eea68002321f6d3a0a8a4e2ea32adde","Tue, 20 Aug 2013 14:02:34 -0700","Matthias Broecheler","Initial refactoring of diskstorage package"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","aea1fb24b10ce49dc7f6c632ee93261dd7db1762","Mon, 6 May 2013 14:13:45 -0700","Matthias Broecheler","Refactored BackendOperations into a separate class. Improved error/log messages."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","4246ca352070a0dc5f4c27b69af120ab3fddaf52","Thu, 2 May 2013 17:58:20 -0700","Matthias Broecheler","Fixes #247"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","560c02dc92a77b07cd3fead1f073c16b948eb2be","Tue, 30 Apr 2013 12:30:28 -0700","Matthias Broecheler","Fixed InMemoryKCVS implementation. Removed redundancy when storing loop edges. Fixes #237."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","522c1d367938b7e00f82f12afab66da67b2e48a6","Thu, 28 Feb 2013 21:51:25 -0800","Matthias Broecheler","Disabled id>0 checks for temporary ids"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","ac746d5753151c1904efda645429fca6a9086231","Tue, 12 Feb 2013 17:41:59 -0800","Matthias Broecheler","Fixes #127."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","43619ac420e8393b939f823bd63b99020c75e1f4","Tue, 12 Feb 2013 16:15:33 -0800","Matthias Broecheler","Fixes #144."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/StandardTitanGraph.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","a46ce945b0fd191e59bd264b33a753ad63136d67","Fri, 20 Dec 2013 00:49:26 -0800","Matthias Broecheler","Fixes #500. Fixes #535."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","99d550c559bde1fc67db64babd25ff35522710c4","Thu, 19 Dec 2013 23:25:04 -0800","Matthias Broecheler","Fixes #505. Fixes #498"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","4e71e58a8564d92e85610026e0e5e38382671ccb","Mon, 4 Nov 2013 22:13:23 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","3efb915c9f767ee8aea300fa5a3ba72a187cd156","Fri, 1 Nov 2013 23:26:33 -0700","Matthias Broecheler","Minor modularization of EdgeSerializer"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","9ed39663f5419c8eb66dafcbbd2a0ae3b7cf2886","Tue, 29 Oct 2013 01:47:32 -0700","Matthias Broecheler","Rewriting of RelationCache to store properties of the relation directly (not in the map) and corresponding rewrite of EdgeSerializer where PropertiesHeader became redundant."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","28650a32ec86c8fdccc8518318116ed408f1346b","Wed, 25 Sep 2013 17:11:49 -0700","Matthias Broecheler","Fixes #287"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","d53d3f6c94b91f777fdc3dcbb4f8fa3a559ca1ac","Thu, 8 Aug 2013 16:07:59 -0700","Matthias Broecheler","Encoded edge id as delta (similar to how the other vertex id is encoded)"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","063f0a17dcd39baa588e2f98222c005cee5a7274","Tue, 6 Aug 2013 17:58:45 -0700","Matthias Broecheler","Changed the storage format to: 1) Make it faster to read relation information without having to read properties of the relation (i.e. header only) by writing the relation and vertexDiffId backward 2) Moving the value for properties into the value part of the entry to allow longer properties than 2^15 byte."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","c7ac478437665f6989f9925b4198f0effcba94a3","Tue, 30 Apr 2013 19:41:21 -0700","Matthias Broecheler","Added parallel serializer test and refactored EdgeSerializer"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","b31a02e46b3d9d4f92ad9a5bb5e5fe5ed74ab062","Fri, 19 Apr 2013 16:14:43 -0700","Matthias Broecheler","removed duplicate duplicate() and unnecessary synchronized block"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","69f53a3d4fd0804a295a718b28fbdfaca488f683","Sat, 9 Mar 2013 21:24:18 -0800","Matthias Broecheler","Only add property to relationfactory if !=null"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","3c9291f224046e7c155cdad757f90d1c74528a1d","Mon, 4 Mar 2013 14:51:26 -0800","Matthias Broecheler","Added RelationFactory for Faunus integration"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/EdgeSerializer.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","ffa27ea571acff6aa6170448b6a48cc12dcd4d05","Wed, 18 Dec 2013 19:12:24 -0800","Matthias Broecheler","Fixes #507 introducing configuration option: ignore-unknown-index-key"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","996dd26106e7310f2a8681591e7b86596f690532","Tue, 12 Nov 2013 11:19:40 -0800","Matthias Broecheler","Added additional check for raw queries."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","06ae09c2a7d033ee391e5a1410d8d310bdff849a","Fri, 8 Nov 2013 23:12:39 -0800","Matthias Broecheler","Fixed test case and " parsing in raw query."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","74a078485b5b74ab1c779d83ab95c4ba8210faf4","Mon, 28 Oct 2013 15:23:38 -0700","Pavel Yaskevich","add LRU back to VertexCache and remove unnecessary boxing of longs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","2422c2dd3e9ec19dbf6bcc8096763523a6ced56b","Tue, 15 Oct 2013 13:15:40 -0700","Matthias Broecheler","Fixes #429. Added large index test to verify limit updates."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","55d73740c60812fa57864c07f01e08b09a4504f4","Wed, 25 Sep 2013 19:04:58 -0700","Matthias Broecheler","Fixes #329"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","dcb3d24410f8d464c2555478e99848cdde127df4","Mon, 12 Aug 2013 20:53:56 -0700","Matthias Broecheler","Added support for Contain.IN in Standard index. NOT TESTED"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","fa5c1bffdf26f12b6f9c5330ea445c2d30b8a801","Mon, 20 May 2013 17:26:27 -0400","Dan LaRocque","Support multiple standard index conditions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","fb5901cef9a90217c5e5b90a833cd5b2765307fe","Fri, 26 Apr 2013 11:39:48 -0700","Matthias Broecheler","Fixes #231"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","cae81f94c6fe480ed382d5af35c3723ba6b689cf","Tue, 26 Feb 2013 22:47:18 -0800","Matthias Broecheler","Added ElasticSearch module and finalized IndexProvider test cases. Both Lucene and ElasticSearch pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/IndexSerializer.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/RelationQueryCache.java","ca489861d52b0788b6c56606b466f70c3fdd572c","Tue, 19 Nov 2013 14:21:00 -0800","Matthias Broecheler","use Guava cache in RelationQueryCache"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/database/RelationQueryCache.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/RegisteredAttributeClass.java","590368f007374df0c64d25cb68a2b4a1606fbee2","Tue, 15 Oct 2013 16:51:58 -0400","Dan LaRocque","Define hashCode in a class with just equals"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/RegisteredAttributeClass.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/RegisteredAttributeClass.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/RegisteredAttributeClass.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/RegisteredAttributeClass.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","b962e70995fd71881b2f8ca4a3646d617b0ffc3a","Thu, 17 Apr 2014 11:24:02 -0700","Matthias Broecheler","Adjusted the PR to: 1) rename the config option and place it under the attributes namesapce 2) refactor out some code duplication 3) fixed a minor bug in a test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","8d77b28a6c2af185135adc1eb5ce464f6fc5fffc","Sat, 12 Apr 2014 07:39:31 +0000","jana","[bug 6889954] introduce basic kryo serialization for string. It does utf8 by default. more efficient,also spacewise than the current serialization. Enable turning it on by a configuration variable to allow for default 0.4.x serialization for b/w compat"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","b7e918a8cc0c1080700136d484c3901b2c235176","Mon, 23 Dec 2013 14:50:26 -0500","Dan LaRocque","Change System.err.println to log.debug"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","b8258e12952c8201327c0a78893319dac0ede63b","Mon, 23 Dec 2013 14:33:55 -0500","Dan LaRocque","Refactor metrics configuration handling"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","ffa27ea571acff6aa6170448b6a48cc12dcd4d05","Wed, 18 Dec 2013 19:12:24 -0800","Matthias Broecheler","Fixes #507 introducing configuration option: ignore-unknown-index-key"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","19d20cb9292a8b96033a01e1b7e91a3ae9fa0ae8","Tue, 19 Nov 2013 00:11:42 -0800","Matthias Broecheler","Removed streaming of large adjacency result sets since such iterative updating of limits is expensive and has very little benefit. Users should set a limit up front. In the REPL, a CTRL-C type functionality should be available to abort long running queries."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","a1870b3889ea1d6bb3509adc4fe9a12b27e7d480","Mon, 18 Nov 2013 23:59:31 -0800","Matthias Broecheler","improved database level cache sizing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","1f1f19f9a2bb3f7f147a32edf4ec9c06f568b95e","Thu, 14 Nov 2013 22:57:13 -0500","Dan LaRocque","Merge branch 'infinispan'"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","c312bb7dd7c42a6bd662cc4e953b4abcb2af66bb","Thu, 14 Nov 2013 18:59:44 -0500","Dan LaRocque","Fix NPE when parsing config file path without dir"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","483887dd28c0bebc246e6c50ef850a68f9c8a52e","Mon, 11 Nov 2013 16:53:30 -0500","Dan LaRocque","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","9a25c17dd5452d0447cc31a2ab1bb28c73159dc0","Mon, 11 Nov 2013 11:04:46 -0800","Pavel Yaskevich","add authentication/authorization compatibility for Cassandra Astyanax/Thrift"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","65043a74b6944e1684cb140e7ae90b599f6afd9f","Wed, 6 Nov 2013 20:29:59 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","6b866d1d289ecf2f6f86f5127ff56148bfd73f40","Wed, 6 Nov 2013 00:07:11 -0800","Matthias Broecheler","Added username,password config options"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","0c4459a73949e200325247907c0435b14ef0e7e7","Tue, 5 Nov 2013 23:48:30 -0800","Matthias Broecheler","Implemented additional provisions in the id allocation logic to allow the user to configure Titan in such a way that id allocation conflicts are much less likely when ingesting through lots of machines. Fixes #382"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","45081730fb71c481f4028bbc774a7a966dc64ace","Wed, 6 Nov 2013 00:35:26 -0500","Dan LaRocque","Merge branch 'infinispan' of github.com:thinkaurelius/titan into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","1f3a5275b44711fbc75674873e3a4043f860834a","Wed, 6 Nov 2013 00:21:43 -0500","Dan LaRocque","Extending ISPN configuration options"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","4e71e58a8564d92e85610026e0e5e38382671ccb","Mon, 4 Nov 2013 22:13:23 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","d5a5b25a72ac434f83cc1db591179988c284700f","Fri, 1 Nov 2013 22:34:38 -0400","Dan LaRocque","Fix javadoc typo"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","73136ea50e0170413e97587ecdb4dad135deaa75","Tue, 29 Oct 2013 16:55:48 -0700","Matthias Broecheler","Added StoreFeatures option supportsMultiQuery so that backends can indicate whether they can efficiently execute (i.e. bundle) multiQueries. Add graph level configuration option parallel-backend-ops, which - when enabled - will create a thread pool that a backend transaction uses to parallelize multiQueries for backends that don't support them natively."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","6fec8f8bb11e2953f29c292971e9d48aa87cd90d","Thu, 24 Oct 2013 17:13:41 -0700","Matthias Broecheler","Better documentation and additional checks for externally provided vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","fc2bc838a04c7a07de7a8a9b43fc41d08baf9611","Thu, 24 Oct 2013 16:46:45 -0700","Matthias Broecheler","Allows to pass in a user provided vertex id when creating a vertex. Must be enabled through "set-vertex-id". Closes #382."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","6bd2ad371464dca57bef6e8e642bb9a845c5c06d","Thu, 24 Oct 2013 13:29:50 -0700","Matthias Broecheler","Implements a property prefetching configuration option that will instruct transaction to load all properties on a vertex when a property is first looked up on the vertex. This leads to much better latencies on multiple vertex lookups against high latency storage backends and is hence enabled by default for distributed storage backends. Added performance test cases to validate its behavior and test performance. Closes #145"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","73a803dc3590b16c899de7d9d57b186b00ea2f54","Wed, 23 Oct 2013 22:27:54 -0700","Matthias Broecheler","Merge branch 'master' of github.com:thinkaurelius/titan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","a9222db3654d1bee17081417fa8fb3b7852dd3c4","Wed, 23 Oct 2013 00:23:01 -0700","Matthias Broecheler","Added causing exception when class fails to load."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","148613ba5d985937242be78d13fa9dc515084caa","Mon, 21 Oct 2013 20:13:20 -0400","Dan LaRocque","Disable Metrics by default"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","e43b1354e899a7261f5b81b64ed8e35f79177ad8","Mon, 21 Oct 2013 17:11:14 -0400","Dan LaRocque","Renamed GraphDBConf constants and updated javadocs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","37d2a99b7a9b54c1e413e18446b1a83bea222965","Fri, 18 Oct 2013 20:14:18 -0400","Dan LaRocque","Change metrics prefix in non-transactional context"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","80224b96eb7c36411eb11006d41c1867cb6e5213","Fri, 18 Oct 2013 18:16:11 -0400","Dan LaRocque","Fix metrics.prefix config parsing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","5089870d911f8048a04a22e15dcd695da6b390d5","Fri, 18 Oct 2013 17:51:39 -0400","Dan LaRocque","Fix Configuration loading exception"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","67bf106dcc7470e2d6b7ef94734f200885bf35ee","Fri, 18 Oct 2013 00:18:22 -0400","Dan LaRocque","Added Metrics Graphite reporter support"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","f4488c420f7e51eb22af6af1430558fb00791069","Thu, 17 Oct 2013 23:29:18 -0400","Dan LaRocque","Rename metrics.ganglia.host to .hostname"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","5189ffb35b6bc01afd6e32160771e3a890ac6963","Thu, 17 Oct 2013 23:02:02 -0400","Dan LaRocque","Cleanup imports in MetricManager and GraphDBConfig"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","c2d5cf981a65a8858de1907cbbb8e64ff159b6ac","Thu, 17 Oct 2013 22:59:10 -0400","Dan LaRocque","Tested and tweaked Ganglia Metrics reporter"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","6d48623f4838983ae8989faccfdee1c4ddd4df76","Thu, 17 Oct 2013 19:40:32 -0400","Dan LaRocque","Adding Metrics Ganglia and Graphite support"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","8b3ce7e5a22f070f9423a9840d48343b9fae46a8","Thu, 10 Oct 2013 01:13:20 -0400","Dan LaRocque","Refactoring bin/gremlin.sh config file handling"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","0e7cbafdf79860e8df7fb633b08f8fa53e79f97b","Wed, 25 Sep 2013 19:19:23 -0700","Matthias Broecheler","Fixes #289"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","0221302fd6e14f6d4c85062bd25fcd0608ff1a14","Sat, 7 Sep 2013 17:40:46 -0700","Matthias Broecheler","Fixes #346"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","25e5c517a2bd70d1b56003696391e63699b3fdd3","Thu, 1 Aug 2013 01:42:52 -0400","Dan LaRocque","Locking backend configuration changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","a242da6bd95a472692e4aecbc8fe69d297e0146a","Wed, 10 Jul 2013 00:55:03 -0700","Dan LaRocque","Hacked an Astyanax-Recipes-based lock impl"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","868ae8feeb52f44d7df5cc0ee6b2c6934a96082f","Tue, 4 Jun 2013 14:03:28 -0400","Dan LaRocque","Added option to merge Metrics across stores"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","a1cb713ab44eadfda620877141f0eb0c2a341823","Tue, 4 Jun 2013 13:30:39 -0400","Dan LaRocque","Created wrapper KCVS that instruments w/ Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","f67e8c38725a609aac1ae9cb2d9943c887be4846","Sun, 5 May 2013 20:10:55 -0700","Matthias Broecheler","Made StandardIDPool more robust and configurable. Added additional test cases to verify and extend coverage. Fixes #242"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","abc6f869fe83b17935119c88fc85a1b2a871f495","Mon, 29 Apr 2013 14:55:41 -0700","Matthias Broecheler","Refactored and cleaned-up diskstorage package. Added javadoc documentation where missing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","4d7177ad85af546f5bdbf55f06c4b71bd06a3581","Thu, 28 Mar 2013 21:59:12 -0700","Matthias Broecheler","Updated Kryo for multi threaded use. Removed no longer needed dependencies."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","2682952c4b2fd823b2b229f8f9136ec80bd44093","Tue, 19 Mar 2013 16:11:06 -0700","Matthias Broecheler","Delegating responsibility to create directories to storage implementations"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/GraphDatabaseConfiguration.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/KCVSConfiguration.java","e03a3a2880b88fc31c2c033c71b3c12bb28a1fe2","Sat, 9 Nov 2013 14:48:22 -0800","Matthias Broecheler","Implemented a KCVS based configuration wrapper to pull the get/setConfiguration methods out of StoreManager and store the configuration in a specified store in each backend. Fixes #420. Fixes #389."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/TitanConstants.java","28df6d41ac0b581e2b560a495c01ba2af15006e8","Wed, 19 Feb 2014 19:50:09 -0500","Dan LaRocque","Move titan.properties into a Titan subpackage"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/TitanConstants.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/TitanConstants.java","89a606b1008ba336392a4dac3bb9c29d61540cf4","Fri, 4 Jan 2013 15:12:22 -0800","Matthias Broecheler","Completed pom refactoring making sure the test cases can run. Refactored Backend.java to pull storage manager definitions from titan.properties"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/configuration/TitanConstants.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","b5398c88f2f86484f79632bf26ad2d9cbb4b9e64","Thu, 24 Oct 2013 21:51:14 -0700","Matthias Broecheler","Reworked exception messages for better clarity around setting vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","b00635a757a2ca0516ca21fa75941b43cbb72e07","Wed, 23 Oct 2013 21:51:39 -0700","Matthias Broecheler","Fixes #438"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","8826e3e338259d4bf53d68e211890b3e05643cfe","Sun, 13 Oct 2013 12:57:19 -0700","Matthias Broecheler","Added multi-query to TitanGraph in addition to TitanTransaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","f89e9f0466dfdc00cce3dec0c740994ab587d95a","Sat, 7 Sep 2013 18:11:09 -0700","Matthias Broecheler","Added API method to retrieve defined types. Fixes #345"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","1bea1e5a9d3de1b8eb128dd05c237b4a1d01201a","Wed, 22 May 2013 18:20:12 -0400","Dan LaRocque","Change WeakHashMap to ConcurrentHashMap"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","4246ca352070a0dc5f4c27b69af120ab3fddaf52","Thu, 2 May 2013 17:58:20 -0700","Matthias Broecheler","Fixes #247"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsGraph.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","eb5b7c6d95ee752ba7e9643c1445452ed64d0fff","Wed, 13 Nov 2013 10:39:51 -0800","Matthias Broecheler","Removed warning so that Titan silently ignores passed in ids"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","b5398c88f2f86484f79632bf26ad2d9cbb4b9e64","Thu, 24 Oct 2013 21:51:14 -0700","Matthias Broecheler","Reworked exception messages for better clarity around setting vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","97e6b0af8f738906957783717297490eed6b1289","Thu, 24 Oct 2013 16:51:47 -0700","Matthias Broecheler","changed ID to Id in TitanId method names"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","fc2bc838a04c7a07de7a8a9b43fc41d08baf9611","Thu, 24 Oct 2013 16:46:45 -0700","Matthias Broecheler","Allows to pass in a user provided vertex id when creating a vertex. Must be enabled through "set-vertex-id". Closes #382."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","f89e9f0466dfdc00cce3dec0c740994ab587d95a","Sat, 7 Sep 2013 18:11:09 -0700","Matthias Broecheler","Added API method to retrieve defined types. Fixes #345"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","65ff57f8d3f0f0c1502d3d5e2b9942ecf6a06eab","Tue, 11 Jun 2013 08:29:01 -0400","Dan LaRocque","Change exception type on addEdge"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","4f922eeb00317b8b59a1584f6784bf6fb09d1187","Mon, 25 Mar 2013 19:07:59 -0700","Matthias Broecheler","If id is a string, do a Long.valueOf (not Double.valueOf)"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanBlueprintsTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/BlueprintsDefaultTypeMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/BlueprintsDefaultTypeMaker.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/BlueprintsDefaultTypeMaker.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/BlueprintsDefaultTypeMaker.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/BlueprintsDefaultTypeMaker.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","027caeb75002179fc0ab448d5c342f828eeb88ec","Fri, 14 Jun 2013 15:03:38 -0400","Dan LaRocque","Reverting to Blueprints 2.3.0"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","97f3c69b06ed6cf67dab963c4157eb9a0a77d50c","Tue, 21 May 2013 15:25:34 -0400","Dan LaRocque","Upgrade to latest tinkerpop 2.4.0-SNAPSHOT stack"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/blueprints/TitanFeatures.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","c97601a4a298da0c1ba8184d223890a819cbcd27","Wed, 20 Nov 2013 18:43:09 -0800","Matthias Broecheler","Added metrics test cases for Cassandra and Hbase. Fixed bug that circumvented type caching (related to #489)."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","e0c5f718636a39fc68acef4b992767c706d2ada0","Thu, 14 Nov 2013 13:04:47 -0800","Matthias Broecheler","Use simple hashmap for caching in CacheVertex and made sure all access to it is synchronized. This a single vertex in a single transaction it not contended a lot, this should be a lot more space and memory efficient than a heavy Guava cache. In the future, we should investigate how to release memory heuristically on such this "cache"."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","87800d3ff6b8866e35fcee14cc2244e6b6db5619","Tue, 29 Oct 2013 13:40:58 -0700","Matthias Broecheler","refactored sub-result set extraction into SliceQuery and added limit check."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","bb298d2aed085bd94817e1b865ac6a3aea8d4712","Fri, 6 Sep 2013 17:20:14 -0700","Matthias Broecheler","Merge branch 'master' into multiquery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","3111b7f394b7c246f76b55fe4bb1b8a7e58d30f4","Wed, 4 Sep 2013 13:04:08 -0400","Dan LaRocque","Flattened holder class in CacheVertex"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","f4432878068cb809d88db1b6fd062c4993aecab5","Mon, 5 Aug 2013 18:26:26 -0400","Dan LaRocque","CacheVertex: fix broken double-checked locking"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","6d7787fcd5f2d737db1e99cf9069e9253688de3e","Fri, 29 Mar 2013 00:26:17 -0700","Matthias Broecheler","Fixed thread race condition during bytebuffer comparison"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/CacheVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/RemovableRelationIterator.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/RemovableRelationIterator.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/RemovableRelationIterator.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","682a496cdfd1e557785ded41efe3a49640f02b53","Fri, 21 Jun 2013 02:30:51 -0400","Dan LaRocque","Fix double-checked locking in StandardVertex"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/StandardVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/RemovableRelationIterable.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/RemovableRelationIterable.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","79456be8c5884bf9d4a80e8f123e12fb9b144979","Fri, 1 Nov 2013 21:59:34 -0400","Dan LaRocque","Added hashCode override to AbstractEquals"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","48c680b16582318630c56716b0ffc629177841db","Fri, 24 May 2013 16:27:50 -0400","Dan LaRocque","Let AbstractVertex remove multivalued properties"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/vertices/AbstractVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardRelation.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardRelation.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","9ed39663f5419c8eb66dafcbbd2a0ae3b7cf2886","Tue, 29 Oct 2013 01:47:32 -0700","Matthias Broecheler","Rewriting of RelationCache to store properties of the relation directly (not in the map) and corresponding rewrite of EdgeSerializer where PropertiesHeader became redundant."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","d39591ed87e4e2f0c854e1e9942af37cd070e2e5","Fri, 27 Sep 2013 13:07:09 -0700","Matthias Broecheler","Fixes #358"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheProperty.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","acc50faae774c2bc73ff4f1c160e53b473b5775f","Tue, 12 Nov 2013 17:07:17 -0800","Matthias Broecheler","inlined size into assert and fixes #478."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","9ed39663f5419c8eb66dafcbbd2a0ae3b7cf2886","Tue, 29 Oct 2013 01:47:32 -0700","Matthias Broecheler","Rewriting of RelationCache to store properties of the relation directly (not in the map) and corresponding rewrite of EdgeSerializer where PropertiesHeader became redundant."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","814a5107c5858ef3d4411610feaed4cf74237eb5","Fri, 27 Sep 2013 21:20:05 -0700","Matthias Broecheler","Fixes #393"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","d39591ed87e4e2f0c854e1e9942af37cd070e2e5","Fri, 27 Sep 2013 13:07:09 -0700","Matthias Broecheler","Fixes #358"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","7c8c3c5ac0585a42f177970cf97a3dcfe001fe82","Fri, 26 Apr 2013 11:03:31 -0700","Matthias Broecheler","Fixes #232. Fixes #192."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/CacheEdge.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","d39591ed87e4e2f0c854e1e9942af37cd070e2e5","Fri, 27 Sep 2013 13:07:09 -0700","Matthias Broecheler","Fixes #358"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardProperty.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","309ec86b86c9d8bdcd61b715964dd073b4082ab7","Sat, 9 Mar 2013 14:33:29 -0800","Matthias Broecheler","fixed test cases for GraphQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractProperty.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","4c51273cbfc71b178ee3b7d809bf895ef227280c","Fri, 3 May 2013 14:22:40 -0700","Matthias Broecheler","Fixes #255"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationIdentifier.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","d39591ed87e4e2f0c854e1e9942af37cd070e2e5","Fri, 27 Sep 2013 13:07:09 -0700","Matthias Broecheler","Fixes #358"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/StandardEdge.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractEdge.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationComparator.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/EdgeDirection.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/EdgeDirection.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/EdgeDirection.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/EdgeDirection.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/EdgeDirection.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","acc50faae774c2bc73ff4f1c160e53b473b5775f","Tue, 12 Nov 2013 17:07:17 -0800","Matthias Broecheler","inlined size into assert and fixes #478."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","4c51273cbfc71b178ee3b7d809bf895ef227280c","Fri, 3 May 2013 14:22:40 -0700","Matthias Broecheler","Fixes #255"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/AbstractTypedRelation.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationCache.java","9ed39663f5419c8eb66dafcbbd2a0ae3b7cf2886","Tue, 29 Oct 2013 01:47:32 -0700","Matthias Broecheler","Rewriting of RelationCache to store properties of the relation directly (not in the map) and corresponding rewrite of EdgeSerializer where PropertiesHeader became redundant."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/relations/RelationCache.java","44538640838a98b794d2b9543ba484df7523fe75","Tue, 29 Oct 2013 00:10:19 -0700","Matthias Broecheler","1) Added subsumption test to CacheVertex so that more restrictive queries can be answered from cache. 2) Renamed ImmutableLongObjectMap to RelationCache 3) Fixed ByteBufferUtilTest by using signum"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleBufferAddedRelations.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleBufferAddedRelations.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleBufferAddedRelations.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleBufferAddedRelations.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/ConcurrentAddedRelations.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/ConcurrentAddedRelations.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/ConcurrentBufferAddedRelations.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/ConcurrentBufferAddedRelations.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/AddedRelationsContainer.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/AddedRelationsContainer.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/AddedRelationsContainer.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleAddedRelations.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleAddedRelations.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/addedrelations/SimpleAddedRelations.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","ef5a13638aee552501c7cc76a03f382b12f8a221","Mon, 23 Dec 2013 17:23:56 -0500","Dan LaRocque","Add Metrics counter of getVertex(long) calls"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","1e0a628dd2419781b53e19f17ee13596b6e2f163","Mon, 23 Dec 2013 09:28:33 -0500","Dan LaRocque","Wrap QueryExecutor implementations with Metrics"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","b9cf88e6b1317cc429c76461b9f2ea7e59212607","Thu, 19 Dec 2013 19:38:19 -0800","Matthias Broecheler","Fixes #499."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","f2713c5f3cb4ec7c885ab9cc80c032d124499bed","Wed, 18 Dec 2013 16:35:49 -0800","Matthias Broecheler","Reordered name property creation to be first when creating types so that we don't have a lingering type vertex in case the ensuing exception is thrown and the transaction still committed."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","ca489861d52b0788b6c56606b466f70c3fdd572c","Tue, 19 Nov 2013 14:21:00 -0800","Matthias Broecheler","use Guava cache in RelationQueryCache"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","9b59abf43a3bff8f8ab453d93fc787b2f2e0c672","Fri, 15 Nov 2013 13:08:19 -0800","Matthias Broecheler","Reverted back to Guava cache which is slightly slower but better behaved since it does not require a separate cleanup thread."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231","Thu, 14 Nov 2013 14:08:54 -0800","Matthias Broecheler","Implemented a database level storage cache for Titan that significantly increases warm cache performance. Added tests for the cache."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","1592e621a5f6be5b1c4ac57d24a1a056998dd210","Wed, 13 Nov 2013 14:13:06 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","eb5b7c6d95ee752ba7e9643c1445452ed64d0fff","Wed, 13 Nov 2013 10:39:51 -0800","Matthias Broecheler","Removed warning so that Titan silently ignores passed in ids"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","483887dd28c0bebc246e6c50ef850a68f9c8a52e","Mon, 11 Nov 2013 16:53:30 -0500","Dan LaRocque","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","67bf277458ef734885341facc2d403c75d856ccd","Fri, 8 Nov 2013 13:28:40 -0800","Matthias Broecheler","Fixed getNew for graph queries when there is no constraint."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","4e71e58a8564d92e85610026e0e5e38382671ccb","Mon, 4 Nov 2013 22:13:23 -0800","Matthias Broecheler","Merge branch 'master' into infinispan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","c13653068935640e541ac88784e8b349e64da134","Mon, 4 Nov 2013 15:18:12 -0800","Matthias Broecheler","Fixes #461. Also fixes the relation ordering to go by type first and then direction."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","74a078485b5b74ab1c779d83ab95c4ba8210faf4","Mon, 28 Oct 2013 15:23:38 -0700","Pavel Yaskevich","add LRU back to VertexCache and remove unnecessary boxing of longs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","04edd7f0e7eab2e8255a497922e34dc707d84c19","Sat, 26 Oct 2013 22:53:47 -0700","Matthias Broecheler","Merge branch 'master' into fix-for-performance"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","b5398c88f2f86484f79632bf26ad2d9cbb4b9e64","Thu, 24 Oct 2013 21:51:14 -0700","Matthias Broecheler","Reworked exception messages for better clarity around setting vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","6fec8f8bb11e2953f29c292971e9d48aa87cd90d","Thu, 24 Oct 2013 17:13:41 -0700","Matthias Broecheler","Better documentation and additional checks for externally provided vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","fc2bc838a04c7a07de7a8a9b43fc41d08baf9611","Thu, 24 Oct 2013 16:46:45 -0700","Matthias Broecheler","Allows to pass in a user provided vertex id when creating a vertex. Must be enabled through "set-vertex-id". Closes #382."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","73a803dc3590b16c899de7d9d57b186b00ea2f54","Wed, 23 Oct 2013 22:27:54 -0700","Matthias Broecheler","Merge branch 'master' of github.com:thinkaurelius/titan"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","b00635a757a2ca0516ca21fa75941b43cbb72e07","Wed, 23 Oct 2013 21:51:39 -0700","Matthias Broecheler","Fixes #438"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","f85f85c41e01efa6513d970f2ffda4295d9b59b8","Fri, 18 Oct 2013 18:10:28 -0400","Dan LaRocque","Make StandardTitanTx increment tx counters"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","2422c2dd3e9ec19dbf6bcc8096763523a6ced56b","Tue, 15 Oct 2013 13:15:40 -0700","Matthias Broecheler","Fixes #429. Added large index test to verify limit updates."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","1443a156cc46b54b3c510750068c7da5224dce52","Sun, 29 Sep 2013 10:31:24 -0700","Matthias Broecheler","Replaced KCVS.getKeys(txh) calls with KCVS.getKeys(slice,txh) or KCVS.getKeys(KeyRangeQuery,txh) depending on whether the storage backend has ordered keys or not. Removed the former since its now redundant and added a helper method call to KCVSUtil to replace it with."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","484980482f7fa52a02f4f6fb1b0601e0e77f8d64","Sat, 28 Sep 2013 13:14:00 -0700","Matthias Broecheler","Fixes #260"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","e930de52c4016ba9e38b3f770437937e46b80720","Sat, 7 Sep 2013 16:37:21 -0700","Matthias Broecheler","Fixes #332"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","703a00f6011870d897283dca433a2778fb626f48","Sat, 7 Sep 2013 16:35:42 -0700","Matthias Broecheler","Fixes #342"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","8c075d95ed44e3ec55c2492056391f75b7048dbe","Sat, 7 Sep 2013 15:28:57 -0700","Matthias Broecheler","Merge branch 'multiquery'"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","765eb2e068967756e1df65face415689f93a4d53","Tue, 6 Aug 2013 23:29:43 -0700","Matthias Broecheler","Fixed regression in type update"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","f8c3c374e87e5434a97eb9f22c937e1744f98561","Tue, 18 Jun 2013 22:36:48 -0400","Dan LaRocque","Fix limits in partially-indexed graph queries"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","aea1fb24b10ce49dc7f6c632ee93261dd7db1762","Mon, 6 May 2013 14:13:45 -0700","Matthias Broecheler","Refactored BackendOperations into a separate class. Improved error/log messages."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","58277e146491df91eff1b5f6ee72f09c5cda50ff","Mon, 6 May 2013 13:49:49 -0700","Matthias Broecheler","Refactored operation robustness handling and retry. Added retry check for initial backend operation. Improved error messages. Fixes #236."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","6eec0ad79102e9d0d93c7753410965aec85c296a","Thu, 2 May 2013 16:02:09 -0700","Matthias Broecheler","Fixes #225"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","cf981127bcf88a6f6b6c160104ce6e97c2c37554","Thu, 2 May 2013 14:38:46 -0700","Matthias Broecheler","Added in-transaction index for newly added vertex properties. Fixes #215"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","27639d4fc85bf97bfbd4db1c8227026f4ad3043e","Thu, 2 May 2013 12:52:33 -0700","Matthias Broecheler","Added test case and fix #205. Closes #205"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","0cfc06920d42ce9cc5b8230db4f187e4f8fefeff","Mon, 18 Mar 2013 12:47:01 -0700","Matthias Broecheler","better exception msg"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","309ec86b86c9d8bdcd61b715964dd073b4082ab7","Sat, 9 Mar 2013 14:33:29 -0800","Matthias Broecheler","fixed test cases for GraphQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","5348dcc7411bb72f59cafa7f58b5e9d85e465b7a","Sat, 9 Mar 2013 11:33:40 -0800","Matthias Broecheler","Updated interfaces to Blueprints 2.3.0-SNAPSHOT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","17d575fcc60a41d91e39aca336a3de206e4170f6","Thu, 7 Mar 2013 18:14:20 -0800","Matthias Broecheler","Removed dangling 2"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","8537f8c2845843dc5f95a8e78ec75bb0f5c27438","Fri, 1 Mar 2013 01:02:05 -0800","Matthias Broecheler","Included full text search in all module"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","e87372876ca0b5ae7dc34b716d5ae3533422790f","Thu, 28 Feb 2013 20:44:31 -0800","Matthias Broecheler","Updated tests and inmemory titan graph. Inmemory is not yet functional and only used for testing."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTitanTx.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","6bd2ad371464dca57bef6e8e642bb9a845c5c06d","Thu, 24 Oct 2013 13:29:50 -0700","Matthias Broecheler","Implements a property prefetching configuration option that will instruct transaction to load all properties on a vertex when a property is first looked up on the vertex. This leads to much better latencies on multiple vertex lookups against high latency storage backends and is hence enabled by default for distributed storage backends. Added performance test cases to validate its behavior and test performance. Closes #145"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","dd6cf2ad289130f6b1212eecc5b51f3a8dd1f1ed","Mon, 21 Oct 2013 20:13:51 -0400","Dan LaRocque","Metrics-related Javadoc update"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","e43b1354e899a7261f5b81b64ed8e35f79177ad8","Mon, 21 Oct 2013 17:11:14 -0400","Dan LaRocque","Renamed GraphDBConf constants and updated javadocs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/TransactionConfiguration.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/ConcurrentIndexCache.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/ConcurrentIndexCache.java","cf981127bcf88a6f6b6c160104ce6e97c2c37554","Thu, 2 May 2013 14:38:46 -0700","Matthias Broecheler","Added in-transaction index for newly added vertex properties. Fixes #215"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/SimpleIndexCache.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/SimpleIndexCache.java","cf981127bcf88a6f6b6c160104ce6e97c2c37554","Thu, 2 May 2013 14:38:46 -0700","Matthias Broecheler","Added in-transaction index for newly added vertex properties. Fixes #215"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/IndexCache.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/indexcache/IndexCache.java","cf981127bcf88a6f6b6c160104ce6e97c2c37554","Thu, 2 May 2013 14:38:46 -0700","Matthias Broecheler","Added in-transaction index for newly added vertex properties. Fixes #215"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","21dc3d568ccd81b15a7608bb8aa6164690621f5c","Fri, 4 Oct 2013 21:43:58 -0400","Dan LaRocque","Make RecordIterator & KeyIterator extend Iterator"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","b55f4f332ee7c5c47295db46ffac2d2355968f79","Tue, 12 Feb 2013 18:37:05 -0800","Matthias Broecheler","Fixes #129. Added additional tests to verify other cases that are similar."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/VertexIterable.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/VertexCache.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/VertexCache.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/VertexCache.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/GuavaVertexCache.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/GuavaVertexCache.java","9b59abf43a3bff8f8ab453d93fc787b2f2e0c672","Fri, 15 Nov 2013 13:08:19 -0800","Matthias Broecheler","Reverted back to Guava cache which is slightly slower but better behaved since it does not require a separate cleanup thread."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","9b59abf43a3bff8f8ab453d93fc787b2f2e0c672","Fri, 15 Nov 2013 13:08:19 -0800","Matthias Broecheler","Reverted back to Guava cache which is slightly slower but better behaved since it does not require a separate cleanup thread."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","13dd48a263615bc32ae7b5ee8e1e1962bb354b7b","Tue, 29 Oct 2013 13:24:09 -0700","Pavel Yaskevich","fix VertexLRUCache get to actually cache non-existing vertices"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","34f6e2f4dde83a6ad5adbb753a739f49b48b6e52","Tue, 29 Oct 2013 12:27:09 -0700","Pavel Yaskevich","fix LRUVertexCache.get on absent items"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","d41e1dca93df90d86b61062575ca04776f1cd101","Tue, 29 Oct 2013 10:51:19 -0700","Matthias Broecheler","enabled counters in LRUCache so its actually an LRUCache (i.e. keeps track of recency)"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","9fd99f998c2ba1b636e03226b6e0c96ba9629408","Tue, 29 Oct 2013 10:48:45 -0700","Matthias Broecheler","Changed LRUCache to use putIfAbsent to avoid concurrency issues."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","74a078485b5b74ab1c779d83ab95c4ba8210faf4","Mon, 28 Oct 2013 15:23:38 -0700","Pavel Yaskevich","add LRU back to VertexCache and remove unnecessary boxing of longs"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/vertexcache/LRUVertexCache.java","7d69240e324cb5c2bef71a25dc88fbead1697308","Thu, 26 Sep 2013 21:37:22 -0700","Matthias Broecheler","Fixes #335 by way of introducing an LRU VertexCache. Added configuration option tx-cache-size to make its size configurable on a per transaction basis. Greatly refactored the PerformanceTest Case to verify that the LRU cache indeed solves the running out of memory problem as well as test for other memory leaks."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/UniqueLockApplication.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/UniqueLockApplication.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/UniqueLockApplication.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/UniqueLockApplication.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","51f9ca342786a64d17f10bdcd2f36e2b957c2372","Sat, 2 Nov 2013 03:26:55 -0700","Matthias Broecheler","Performance optimization by introducing SimpleVertexQueryProcessor that can handle the most common queries more efficiently."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","6bd2ad371464dca57bef6e8e642bb9a845c5c06d","Thu, 24 Oct 2013 13:29:50 -0700","Matthias Broecheler","Implements a property prefetching configuration option that will instruct transaction to load all properties on a vertex when a property is first looked up on the vertex. This leads to much better latencies on multiple vertex lookups against high latency storage backends and is hence enabled by default for distributed storage backends. Added performance test cases to validate its behavior and test performance. Closes #145"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/transaction/StandardTransactionBuilder.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/ElementType.java","619f7deeb8c9ef04ff1042fa6c911229aa22dd42","Mon, 19 Aug 2013 22:42:21 -0700","Matthias Broecheler","Bugfixing of recent refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/ElementType.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalElement.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalElement.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/OrderList.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/ElementLifeCycle.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/ElementLifeCycle.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/ElementLifeCycle.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/RelationType.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/RelationType.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","c76172177fc84d3e26dd6cb1cd04b8a171833216","Fri, 25 Oct 2013 16:12:03 -0700","Pavel Yaskevich","titan-core performance improvements"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","162f942f4839b451fac706a2b0fa49f2eaf5ae77","Wed, 29 May 2013 18:50:45 -0400","Dan LaRocque","Call AbstractElement getID() insteado of getId()"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","37b84fb6425485bd5f2ab0396885a9a9d616e47c","Fri, 24 May 2013 15:33:05 -0400","Dan LaRocque","Remove unchecked cast in AbstractElement#equals()"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/AbstractElement.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","d679325a8ebb4d70e9557a9a80baf589f8908102","Tue, 6 Aug 2013 23:02:27 -0700","Matthias Broecheler","Refactored Type definition into individual properties to make it easier to extend the type system without jeopardizing backwards compatibility."
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalType.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalRelation.java","950c410b6286eb2cd8c7b8984a50999f09aa86d0","Fri, 3 May 2013 15:52:26 -0700","Matthias Broecheler","Fixes #256"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalRelation.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalRelation.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/graphdb/internal/InternalRelation.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","c3aac13ba60d659723ef2a1354227a833b35a785","Thu, 4 Apr 2013 14:05:38 -0600","Marko A. Rodriguez","Fixed #203 -- static LOCK and NO_LOCK into Gremlin."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","e8280480d0830cfb3db4288d8f0dba8ca1a4c037","Tue, 7 May 2013 13:38:28 -0600","Marko A. Rodriguez","added new util package to Imports for Gremlin."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","b07878ea7d5459c36280bffea3a41cea0c96ce6a","Thu, 28 Mar 2013 22:24:35 -0700","Matthias Broecheler","updated gremlin imports"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","8234e6e5807761328ae2e4314fbc3c42b3036d74","Thu, 28 Mar 2013 14:18:54 -0600","Marko A. Rodriguez","added GraphOfTheGodsFactory. Updated Imports in Gremlin to see example.* package. Remove data/ directory as graph-of-the-gods.xml is no longer distributed with Titan -- see GraphOfTheGodsFactory."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","c8bf737b935664172e558678fb8e5dd047ec9f11","Fri, 1 Mar 2013 10:50:17 -0800","Matthias Broecheler","Updated gremlin to play nice with the new titan"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Imports.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ConsoleSetup.java","c4d07150eb9cea41b0620ca7aaa23e023fdb0719","Thu, 26 Sep 2013 01:28:17 -0400","Dan LaRocque","Refactored titan-dist and ConsoleSetup"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ConsoleSetup.java","336698ce1cf8202965971f4876740e2db277cd87","Wed, 25 Sep 2013 18:55:21 -0400","Dan LaRocque","Extracted Gremlin imports into utility class"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ScriptExecutor.java","3ce428e0d3b50edab34ebae0f4d4e572e0e662b2","Wed, 9 Oct 2013 09:59:03 -0600","Marko A. Rodriguez","updated ScriptExecutor to use args[0...blah] so its consistent with Gremlin 2.2.0+ distribution."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ScriptExecutor.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ScriptExecutor.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/ScriptExecutor.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","c4d07150eb9cea41b0620ca7aaa23e023fdb0719","Thu, 26 Sep 2013 01:28:17 -0400","Dan LaRocque","Refactored titan-dist and ConsoleSetup"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","336698ce1cf8202965971f4876740e2db277cd87","Wed, 25 Sep 2013 18:55:21 -0400","Dan LaRocque","Extracted Gremlin imports into utility class"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","81daf1db36477b171534268815cc60ad1abf8610","Tue, 26 Mar 2013 18:19:26 -0400","Stephen Mallette","Initialize Gremlin repl with a groovy script. #132"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/tinkerpop/gremlin/Console.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/util/TitanId.java","319db22c57204c8bba16ca49390848d445ff2614","Fri, 25 Oct 2013 15:22:32 -0400","Dan LaRocque","Rename TitanID.java to TitanId.java"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/util/TitanCleanup.java","472e913c1f0b634f43c1638e0ec201e5f0acce6e","Tue, 7 May 2013 12:22:49 -0700","Matthias Broecheler","Added utility method for cleaning out a Titan graph"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanType.java","237965bcd8b8341616cdb2d519f46673a5226495","Mon, 14 Oct 2013 13:54:58 -0700","Matthias Broecheler","Made some java-doc changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanType.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanType.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanType.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanType.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","3af8545b992cd5fb53328afcdb7bcba942f9358d","Mon, 7 Oct 2013 18:58:07 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","7e0d39612d57f420ac14e64d46db9a5aa2985aee","Sat, 7 Sep 2013 17:39:22 -0700","Matthias Broecheler","improved documentation, fixed a test case"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","1df57ec9cd0019f2accc45e05d46290cfba41180","Wed, 13 Feb 2013 06:06:33 +0400","Michael Klishin","Correct broken link"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TypeMaker.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/QueryException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanException.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Titan.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Titan.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Titan.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Titan.java","b8e886059c4d62303bf2298ec4d0ed7e0c4fa71c","Mon, 21 Jan 2013 13:33:57 -0800","Pavel Yaskevich","add Titan.version()"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanProperty.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanProperty.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanKey.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanKey.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanKey.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanKey.java","5ec6054660633690a77a74380429a4a7b925d8a6","Sat, 16 Feb 2013 14:47:48 -0800","Matthias Broecheler","initial index refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanKey.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Mapping.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/KeyMaker.java","aaad1b8a4e52a39317b303fffab49b2d854af25f","Fri, 8 Nov 2013 13:03:40 -0800","Matthias Broecheler","Updated javadoc, changelog and moved mapping class."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/KeyMaker.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/KeyMaker.java","3af8545b992cd5fb53328afcdb7bcba942f9358d","Mon, 7 Oct 2013 18:58:07 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/KeyMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Parameter.java","4e42ebc18b0a33da3df310675993dc48e45ca577","Fri, 8 Nov 2013 12:47:29 -0800","Matthias Broecheler","Implementation of additional parameter specification for indexes. These parameters can modify the behavior of the index. For instance, a mapping specification is now supported for ES and Lucene when it comes to strings (index them as TEXT or STRING). This fixes #410."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeSerializer.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeSerializer.java","eab917b78fa300d8e6d81a543d4f1738f945b5b2","Wed, 8 May 2013 23:44:12 -0700","Matthias Broecheler","Refactored titan-core to use custom Buffer interfaces for better abstraction and thread safety instead of ByteBuffer."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeSerializer.java","18152c5faa5f3787bbc5a8ce59c68777121b68c8","Thu, 28 Mar 2013 19:16:22 -0700","Matthias Broecheler","updated to Kryo 2.21"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeSerializer.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","b5398c88f2f86484f79632bf26ad2d9cbb4b9e64","Thu, 24 Oct 2013 21:51:14 -0700","Matthias Broecheler","Reworked exception messages for better clarity around setting vertex ids."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","97e6b0af8f738906957783717297490eed6b1289","Thu, 24 Oct 2013 16:51:47 -0700","Matthias Broecheler","changed ID to Id in TitanId method names"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","fc2bc838a04c7a07de7a8a9b43fc41d08baf9611","Thu, 24 Oct 2013 16:46:45 -0700","Matthias Broecheler","Allows to pass in a user provided vertex id when creating a vertex. Must be enabled through "set-vertex-id". Closes #382."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","b00635a757a2ca0516ca21fa75941b43cbb72e07","Wed, 23 Oct 2013 21:51:39 -0700","Matthias Broecheler","Fixes #438"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","83bf201b8cbf175675cc843f3b82589212d4980f","Sun, 13 Oct 2013 13:01:33 -0700","Matthias Broecheler","Improved documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","54bd092ca7792604fd33f354643a6d3e5bd43920","Sun, 13 Oct 2013 13:00:25 -0700","Matthias Broecheler","Improved documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","f89e9f0466dfdc00cce3dec0c740994ab587d95a","Sat, 7 Sep 2013 18:11:09 -0700","Matthias Broecheler","Added API method to retrieve defined types. Fixes #345"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","441a44a76ce01423743f8a077678390fa1b317d0","Thu, 28 Mar 2013 23:08:42 -0700","Matthias Broecheler","optimized imports, updated NOTICE"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","223bf42588288a7497af352eb0df3342f73e7926","Mon, 25 Feb 2013 12:39:05 -0800","Matthias Broecheler","Refactoring test cases"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanTransaction.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanConfigurationException.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanConfigurationException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanLabel.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanLabel.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanLabel.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","41d3fad80d604c3d2149ebb0ac98cc9cb0e5daf3","Wed, 2 Oct 2013 04:36:03 -0700","Matthias Broecheler","Better GraphQuery execution to take advantage of multiple indexes covering a single index. This takes care of the performance aspect of #373."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","8311e0b174e12c015072dfd520f2369f1e3b4565","Mon, 22 Jul 2013 00:03:43 -0700","Matthias Broecheler","Changed handling of missing property keys in light of trivially satisifed queries"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","02fc08c4e7fd67472be5c6b3ceff7a2ac2a9d7cd","Thu, 28 Mar 2013 19:31:40 -0700","Matthias Broecheler","Added method with inline relation for future Blueprints compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","5348dcc7411bb72f59cafa7f58b5e9d85e465b7a","Sat, 9 Mar 2013 11:33:40 -0800","Matthias Broecheler","Updated interfaces to Blueprints 2.3.0-SNAPSHOT"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraphQuery.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanFactory.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanFactory.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","b00635a757a2ca0516ca21fa75941b43cbb72e07","Wed, 23 Oct 2013 21:51:39 -0700","Matthias Broecheler","Fixes #438"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","8826e3e338259d4bf53d68e211890b3e05643cfe","Sun, 13 Oct 2013 12:57:19 -0700","Matthias Broecheler","Added multi-query to TitanGraph in addition to TitanTransaction."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","f89e9f0466dfdc00cce3dec0c740994ab587d95a","Sat, 7 Sep 2013 18:11:09 -0700","Matthias Broecheler","Added API method to retrieve defined types. Fixes #345"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","68f04d6d74d97778ee9aafd17978fb6672e272b7","Wed, 6 Mar 2013 21:26:22 -0800","Matthias Broecheler","Renaming of indexing interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","5e4ebed47a44f33ee6b90e35ab380934e849499f","Thu, 28 Feb 2013 19:50:52 -0800","Matthias Broecheler","Updated log4j to INFO level, extending indexing support and tests added convenience methods to interfaces"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","bd1445809192f13ed0674e0a81c8117fe263b0a0","Tue, 12 Feb 2013 17:18:05 -0800","Matthias Broecheler","Updated to Blueprints 2.3.0-SNAPSHOT and refactored codebase correspondingly"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanGraph.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanMultiVertexQuery.java","6d3cfd22aa976594ca3abceb1d66309b96b48d90","Wed, 23 Oct 2013 00:20:00 -0700","Matthias Broecheler","Fixes #439 multiquery issue."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanMultiVertexQuery.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanMultiVertexQuery.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","237965bcd8b8341616cdb2d519f46673a5226495","Mon, 14 Oct 2013 13:54:58 -0700","Matthias Broecheler","Made some java-doc changes"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","e715670b304da165feafdf2a991772ae8ff46f25","Fri, 19 Apr 2013 16:54:51 -0700","Matthias Broecheler","Using auto-casting and removing redundant methods"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanElement.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeHandler.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/AttributeHandler.java","92d766ff2c35fff892346341fc23c19b1a8fd2a3","Sat, 7 Sep 2013 13:41:32 -0700","Matthias Broecheler","Refactored attribute handling. Fixes #307."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/BaseVertexQuery.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","6d3cfd22aa976594ca3abceb1d66309b96b48d90","Wed, 23 Oct 2013 00:20:00 -0700","Matthias Broecheler","Fixes #439 multiquery issue."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","c06f55fccb8e6e675c78a187ba15d55e28009560","Fri, 6 Sep 2013 12:39:08 -0700","Matthias Broecheler","Implementation of MultiVertexQuery and adjacency constraint in VertexQuery"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","e3cf51623ab321f9dcde185038029722cefcf44c","Fri, 2 Aug 2013 17:25:07 -0700","Matthias Broecheler","Removed type groups. INCOMPATIBLE STORAGE FORMAT"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","5348dcc7411bb72f59cafa7f58b5e9d85e465b7a","Sat, 9 Mar 2013 11:33:40 -0800","Matthias Broecheler","Updated interfaces to Blueprints 2.3.0-SNAPSHOT"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertexQuery.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Contain.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Contain.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Contain.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Contain.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geo.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullFloat.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullFloat.java","a8ad2ba03a81a8150f662929083683313e4f3d2d","Sat, 7 Sep 2013 16:32:22 -0700","Matthias Broecheler","Fixes #360"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullFloat.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullFloat.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","68071786c64e31f3167c99ae5c2c542a18505005","Mon, 18 Nov 2013 13:56:17 -0800","Matthias Broecheler","Updated indexing predicates to distinguish between token based and entire string based PREFIX and REGEX queries. Implemented those changes throughout the stack and updated test cases."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","2f21a0c6478ff7ad524ba2629826fda0cb67c299","Fri, 4 Oct 2013 19:01:22 -0700","Matthias Broecheler","Support for prefix queries and regular expressions in full text search."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","b61995d5d8b78a0fe0e43fbf83f58d31d1f430e8","Mon, 30 Sep 2013 19:44:15 -0700","Matthias Broecheler","Made Text.CONTAINS term based and hence semantically (almost) equivalent to how it is used in Lucene/ElasticSearch. Difference can still exists based on how strings are tokenized and which list of stop words is used. Fixes #373. Fixes 296. Fixes #277."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Text.java","21282096549f632b546242577621151b0a3de388","Thu, 28 Mar 2013 15:21:36 -0700","Matthias Broecheler","Changed Txt to Text"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullDouble.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullDouble.java","a8ad2ba03a81a8150f662929083683313e4f3d2d","Sat, 7 Sep 2013 16:32:22 -0700","Matthias Broecheler","Fixes #360"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullDouble.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/FullDouble.java","33a560db97bf3187ac45d1fe4fdf2e6b817bec40","Sat, 20 Apr 2013 18:09:09 -0700","Matthias Broecheler","Registered additional primitive classes in Kryo. Improved attribute checking and automatic conversions. Added full versions of double and float in case full precision is needed and order preservation is not. Fixes #220. Fixes #222."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","9f0612fcb42347b6e6cf5f100007a252437b7bde","Thu, 28 Mar 2013 13:35:51 -0700","Matthias Broecheler","hide Geoshape Point constructor to avoid confusion"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","68a42196ecd300d66352fab629b3584abd4b252d","Sun, 3 Mar 2013 17:07:57 -0800","Matthias Broecheler","added toString and test cases for Geoshape"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","5e99241374d48dad2b0504194aecac981557674e","Sun, 3 Mar 2013 15:42:21 -0800","Matthias Broecheler","added hashcode and equals to Geoshape so caching works"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","2a5fdf187b7cdaf98d6953914d2e43b889e23688","Mon, 25 Feb 2013 19:42:47 -0800","Matthias Broecheler","Added Lucene IndexProvider"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Geoshape.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","fe35a70748c9cbddb95de058831a2d96cd153fcd","Wed, 18 Dec 2013 17:09:31 -0800","Matthias Broecheler","Fixes #307"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","53441fa4ba940ba38ebbe2710ce9041819722020","Tue, 13 Aug 2013 15:57:58 -0700","Matthias Broecheler","Added the notion of Query-Normal-Form (QNF) to property constraints and queries in Titan. Now, all queries inside titan have to conform to QNF which makes it easier to deal with conditions because one can precondition on QNF and then process accordingly. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","f54f1be596c68cc58edfb1f15cc193b2483e534a","Mon, 12 Aug 2013 19:45:09 -0700","Matthias Broecheler","Finished query optimization and execution refactoring. NOT YET TESTED."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","ccb339c401603a0d1fcbf122360ea06627e1f3fb","Sun, 21 Jul 2013 23:34:24 -0700","Matthias Broecheler","Refactored queries for Blueprints 2.4.0 compatibility"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","ea2f0f0c0f1fb3c258ac028ae0a9c4fe7dce8f7e","Fri, 3 May 2013 12:51:16 -0700","Matthias Broecheler","changed (c) to @author in comment"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/attribute/Cmp.java","d5662482340f61d370cde27fece75d7ecb6b16e4","Mon, 25 Feb 2013 00:58:42 -0800","Matthias Broecheler","Intermediate commit on indexing and complete refactor"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanRelation.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanRelation.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanRelation.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","452a22902a99ead8f8bbab7883cb1458a9eeea48","Mon, 28 Oct 2013 23:03:15 -0700","Pavel Yaskevich","replace guava cache in LRUVertexCache with Solr based CLRUCache backed by NonBlockingHashMapLong"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","dd6cf2ad289130f6b1212eecc5b51f3a8dd1f1ed","Mon, 21 Oct 2013 20:13:51 -0400","Dan LaRocque","Metrics-related Javadoc update"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","763eef71ffd404c9bb7f78b84f11019f7f4e5649","Fri, 18 Oct 2013 17:24:03 -0400","Dan LaRocque","Major untested Metrics refactoring"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","d7b404d09e2045f0403ec57cb2e70fdd9ed3be3f","Sun, 29 Sep 2013 16:16:55 -0700","Matthias Broecheler","Adding the ability to set timestamps for transactions and moving the time handling aspects of transactions into AbstractStoreTransaction"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TransactionBuilder.java","639d431fac05dd1b8f6072a02d2f584052113b39","Sat, 28 Sep 2013 14:16:13 -0700","Matthias Broecheler","Added TransactionBuilder interface which gives the user the ability to configure transactions prior to opening them and thereby controlling performance and consistency checking aspects of the transaction on a per transaction basis. Use TitanGraph.buildTransaction() for that. One aspect TransactionBuilder lets you control is whether a TitanTransaction should verify the existence of all vertices internally. Since this is expensive, its disabled by default but can selectively be enabled via TransactionBuilder in the face of data degradation  on eventually consistent storage backends. Fixes #363. Fixes #214."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertex.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertex.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanVertex.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/VertexList.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/VertexList.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanEdge.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanEdge.java","4759d76a055121a0d1136c1e27be4a9ae3d49999","Wed, 20 Feb 2013 00:39:11 -0800","Matthias Broecheler","intermediate commit"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanEdge.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Order.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Order.java","361c3df4ff51579a399542bbc97396229e8156fb","Thu, 3 Oct 2013 21:07:17 -0700","Matthias Broecheler","Refactored query answering. Finished implementation. Untested."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/Order.java","5810fec13666c1d1d838209205e224df1b226d9e","Wed, 2 Oct 2013 07:47:14 -0700","Matthias Broecheler","Added and fixed additional test cases for index handling."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/DefaultTypeMaker.java","83450ad3ce7d439eade544fb0924c853c85bb43f","Tue, 15 Oct 2013 14:56:34 -0700","Matthias Broecheler","Updated javadoc"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/DefaultTypeMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/DefaultTypeMaker.java","e7a9dcca39d55b2c7afdc423a487762de79abc18","Thu, 7 Mar 2013 00:56:34 -0800","Matthias Broecheler","Updating javadoc, adding limit to GraphQuery and implementing this feature throughout the stack."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/DefaultTypeMaker.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/TitanIndexQuery.java","d07e2ab555f8a181f339230fb482c84e9b2644da","Fri, 8 Nov 2013 22:00:59 -0800","Matthias Broecheler","Implemented support for raw queries against the backend."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/InvalidElementException.java","46c9c8146f5965a3c3efc684d1eb04ea3ff2e430","Thu, 28 Feb 2013 16:37:55 -0800","Matthias Broecheler","Added test cases and fixed bugs around external indexing"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/InvalidElementException.java","ae15683f30b52b053cb7c62c6bd9162e374f62a4","Fri, 4 Jan 2013 11:20:28 -0700","okram","big fatty refactor -- tests do not pass."
"./titan-core/src/main/java/com/thinkaurelius/titan/core/LabelMaker.java","11c86091cadab2775eb86ef6ca52f5de9b93b0a3","Sun, 3 Nov 2013 15:14:54 -0800","Matthias Broecheler","Implemented sort-ordering for label definitions"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/LabelMaker.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/LabelMaker.java","3af8545b992cd5fb53328afcdb7bcba942f9358d","Mon, 7 Oct 2013 18:58:07 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/core/LabelMaker.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","6cbabb1de36b108db4c712d5cc2b1efc56705c9e","Wed, 9 Oct 2013 06:53:04 -0700","Matthias Broecheler","renaming primaryKey to sortKey"
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","2b070fcd60d08f68ae09ef5ddc00d90024cad6c0","Mon, 7 Oct 2013 18:10:08 -0700","Matthias Broecheler","Refactored TypeMaker to use new terminology and split PropertyKey and EdgeLabel maker into separate builder classes."
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","8bcd75ceb0db036c3be98b265fa4045803510de6","Sat, 7 Sep 2013 17:13:35 -0700","Matthias Broecheler","Changed the naming convention around uniqueness and added out-unique/no-lock as default for property keys"
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","5ab4387ad2df9f45242f5e655716846e80b69da1","Fri, 3 May 2013 14:41:48 -0700","Matthias Broecheler","Updated documentation"
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","e6f36591862c183c8b4be03d20d5dc559be41a73","Fri, 29 Mar 2013 00:09:27 -0600","Marko A. Rodriguez","commit the transaction on GraphOfTheGodsFactory."
"./titan-core/src/main/java/com/thinkaurelius/titan/example/GraphOfTheGodsFactory.java","8234e6e5807761328ae2e4314fbc3c42b3036d74","Thu, 28 Mar 2013 14:18:54 -0600","Marko A. Rodriguez","added GraphOfTheGodsFactory. Updated Imports in Gremlin to see example.* package. Remove data/ directory as graph-of-the-gods.xml is no longer distributed with Titan -- see GraphOfTheGodsFactory."
