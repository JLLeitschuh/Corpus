fileName,RevisionId,Date,Author,Comment,diffs
"./lib/build/jdiff/Null.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./lib/build/jdiff/Null.java","e0359ad38f79c9e8f9a7321e2336eacb3fa0c6d2","2010-10-31 20:39:41","sberlin","add jdiff build packages, update build.properties for struts2, update build.xml to include a jdiff target & fix up javadoc target, add a new uploadApiDiffs script, update uploadJavadocs script.","1;2;3;4;5;6;7;8;9"
"./core/src/com/google/inject/util/Providers.java","4754a22f265ad638d5484d12219515bd663272d0","2014-05-03 04:40:05","Sam Berlin","Add equals/hashCode to Providers.guicify(...) results. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65072672","100;101;102;103;104;105;106;107;108;109;116;117;118;119;120;121;122;125;126;127;128;129;130;131;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154"
"./core/src/com/google/inject/util/Providers.java","14e2703cd15b0ac745a0df80d25800692d8c727e","2014-05-03 04:39:35","Sam Berlin","Implement hashCode and equals on type returned by Providers.of(...). There doesn't seem to be any reason *not* to provide these methods, and it means downstream code that does","21;54;55;56;57;58;59;60;61;62;63;64;71;72;73;74;75;76;77;78;79;80"
"./core/src/com/google/inject/util/Providers.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;28;29;34;35"
"./core/src/com/google/inject/util/Providers.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;27;28;29;30"
"./core/src/com/google/inject/util/Providers.java","16f8b0fdf6f1993f6d5d714d86fd455065301474","2010-12-09 14:18:42","sberlin","fix issue 578, Providers.guicify loses injection points from the delegate.","21;22;23;24;26;27;28;29;30;77;78;79;80;81;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116"
"./core/src/com/google/inject/util/Providers.java","d00bb052f3c46d528db507607898530886de0f3b","2010-12-09 04:15:04","sberlin","add missing @since tag.","59;60"
"./core/src/com/google/inject/util/Providers.java","a523ea5e25e18b348097f587a7f150b987f440b3","2010-12-09 03:00:02","sberlin","rm jsr330, move the one method into Providers.","19;20;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75"
"./core/src/com/google/inject/util/Providers.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./core/src/com/google/inject/util/Modules.java","ebe9f053ab2431f8f22f6d892cffadef4b10479c","2013-12-06 22:08:25","Sam Berlin","Re-committed the rolled back CL, after fixing internal projects.","174;175;194;195"
"./core/src/com/google/inject/util/Modules.java","a4c16e8b45261e23e1c35d5fdce9b57357b16d1f","2013-12-06 22:06:40","Sam Berlin","Rolled back commit -- broke some internal projects.","174;175;194;195"
"./core/src/com/google/inject/util/Modules.java","9b268e4467753f31eb6dfeb4001e76e32b01f5a3","2013-12-06 22:04:48","Sam Berlin","Pass the correct stage to Modules.override, so currentStage() works. Fixes issue 784 -- patch thanks to Tavian Barnes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57755697","174;175;194;195"
"./core/src/com/google/inject/util/Modules.java","a9228269b4d6e7b74a6354f179babe723c00f387","2013-11-13 07:06:04","Christian Edward Gruber","Make named classes for anonymous Modules so they appear prettier (and useful) in error messages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54796862","56;57;58;60;61;112;113;114;115;116;117;118;119;120;121;122;123;130"
"./core/src/com/google/inject/util/Modules.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","32;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;184;185;190;191;192;200;201;213;214;223;224;225;226;227;228;229;277;278;279;280;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;303;304;309;310;315;316;323;324"
"./core/src/com/google/inject/util/Modules.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","103;104"
"./core/src/com/google/inject/util/Modules.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;32;33;34;35;36;43"
"./core/src/com/google/inject/util/Modules.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","27;28;29;30;31;32;33;34;35;36"
"./core/src/com/google/inject/util/Modules.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303"
"./core/src/com/google/inject/util/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./core/src/com/google/inject/util/Types.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25"
"./core/src/com/google/inject/util/Types.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133"
"./core/src/com/google/inject/PrivateBinder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50"
"./core/src/com/google/inject/spi/MembersInjectorLookup.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","48;49;50"
"./core/src/com/google/inject/spi/MembersInjectorLookup.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","48;49;50"
"./core/src/com/google/inject/spi/MembersInjectorLookup.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;25;26"
"./core/src/com/google/inject/spi/MembersInjectorLookup.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/src/com/google/inject/spi/MembersInjectorLookup.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102"
"./core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java","338213332308fc9932603b2f4c853a4a7d19cc13","2013-11-13 07:07:22","Christian Edward Gruber","Make guice build with javac 8.","72;75;76;77"
"./core/src/com/google/inject/spi/DefaultBindingTargetVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77"
"./core/src/com/google/inject/spi/TypeListenerBinding.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","57;58;59"
"./core/src/com/google/inject/spi/TypeListenerBinding.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","57;58;59"
"./core/src/com/google/inject/spi/TypeListenerBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./core/src/com/google/inject/spi/TypeEncounter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","24"
"./core/src/com/google/inject/spi/TypeEncounter.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121"
"./core/src/com/google/inject/spi/ProvidesMethodBinding.java","29ce12be89584ca1ad671408ecbe0f6c343f9382","2014-03-10 16:52:01","Sam Berlin","Add an SPI for @Provides methods (using the extensions SPI) so that users can do more analysis (with the enclosing instance, method, etc..).","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./core/src/com/google/inject/spi/ExposedBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39"
"./core/src/com/google/inject/spi/ProvidesMethodTargetVisitor.java","29ce12be89584ca1ad671408ecbe0f6c343f9382","2014-03-10 16:52:01","Sam Berlin","Add an SPI for @Provides methods (using the extensions SPI) so that users can do more analysis (with the enclosing instance, method, etc..).","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/src/com/google/inject/spi/ProviderWithDependencies.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27"
"./core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","37;38;39"
"./core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","37;38;39"
"./core/src/com/google/inject/spi/RequireExactBindingAnnotationsOption.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47"
"./core/src/com/google/inject/spi/InjectionPoint.java","4daa205dc4fe1d339f91155dde65f3941cbd144c","2014-05-03 04:44:06","Sam Berlin","Ignore synthetic/bridge methods when determining if a method should be injected.  This broke injections for different reasons before & after java8, but the fix is the same for both.","675;676;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768"
"./core/src/com/google/inject/spi/InjectionPoint.java","4d5804923d55353b214b8e2a45a6416a75665a4d","2013-08-09 18:06:25","Christian Edward Gruber","Fix random bitwise | to be a real ||. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50288042","681;682"
"./core/src/com/google/inject/spi/InjectionPoint.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","447;467"
"./core/src/com/google/inject/spi/InjectionPoint.java","ee443bce9731bb8da1eb60202f68de4c4c298698","2011-09-09 21:19:11","guice.mirrorbot@gmail.com","Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.","323;324;325;326;327;328;329;330;331;332"
"./core/src/com/google/inject/spi/InjectionPoint.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;31;34;35;36;37"
"./core/src/com/google/inject/spi/InjectionPoint.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","29;30;31;32;33;34"
"./core/src/com/google/inject/spi/InjectionPoint.java","dfee9fd5f78c5f1f769713b603e4e92a0b7b01e3","2010-10-30 14:15:06","sberlin","issue 531 -- don't let c.g.i.internal.util reference outside its package.","26;29;194;195"
"./core/src/com/google/inject/spi/InjectionPoint.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825"
"./core/src/com/google/inject/spi/ElementSource.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","22;23;24;25;26;27;48;49;71;74;76;79;101;102;103;106;107;108;109;110;111;112;113;114;115;116;117;118;123;124;127;128;129;132;133;134;135;137;138;139;140;141;142;143;145;150;151;160;161;162;163;164;165;166"
"./core/src/com/google/inject/spi/ElementSource.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","17;18;19;20;21;22;23;24;25;26;27;28;31;32;33;34;133;134;135;138;139;140;144;145;150;151;160;161;162;163;177;178;179;180;181;182;183"
"./core/src/com/google/inject/spi/ElementSource.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171"
"./core/src/com/google/inject/spi/Dependency.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;25;26;27;28"
"./core/src/com/google/inject/spi/Dependency.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23;24;25;26;27"
"./core/src/com/google/inject/spi/Dependency.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126"
"./core/src/com/google/inject/spi/Elements.java","c5848c0b57ad0f3f09acadff4be80c19d0c7d95f","2013-12-06 22:05:44","Sam Berlin","Optimize RecordingBinder.withSource so it doesn't always create a new binder. Fixes issue 776, patch thanks to Stuart McCulloch! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57757534","328;329"
"./core/src/com/google/inject/spi/Elements.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;21;26;71;72;73;74;75;76;77;78;111;114;143;144;145;146;147;394;395;396;397;399;400;406;408;409;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;430;431;435;436;437;438;439;440;441;442;444;445;446;448;449;450;451"
"./core/src/com/google/inject/spi/Elements.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","124;125;126;127;128;129;130;131;132;133;134;135;141;142;143;144;145;146;147;148"
"./core/src/com/google/inject/spi/Elements.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","75;76;77;78;142;145;146"
"./core/src/com/google/inject/spi/Elements.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","46;124;152;153;157;170;187;200;224;225;303;304;305;306;323;352;354;355;356;462;463;464;465;466;467"
"./core/src/com/google/inject/spi/Elements.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","47;66;67;68;69;70;71;72;73;74;75;76;77;78;119;120;121;122;144;145;146;147;148;149;155;156;184;196;207;208;209;214;215;222;223;228;229;237;238;243;244;249;250;257;258;259;260;264;272;273;274;275;284;285;290;291;297;298;309;310;314;315;324;325;342;343;349;350;354;355;359;360;364;365;385;386;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453"
"./core/src/com/google/inject/spi/Elements.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","323;324;325;326"
"./core/src/com/google/inject/spi/Elements.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","319;320;321;322"
"./core/src/com/google/inject/spi/Elements.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","211;212;213;214;215"
"./core/src/com/google/inject/spi/Elements.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;46;47;48;49;52"
"./core/src/com/google/inject/spi/Elements.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","41;42;43;44;45;46;47;48"
"./core/src/com/google/inject/spi/Elements.java","3391af361375eb021e27711bb06cae2a193ccf91","2011-06-12 22:26:20","sberlin","remove stray <T>","209;210"
"./core/src/com/google/inject/spi/Elements.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","209;210;211;212"
"./core/src/com/google/inject/spi/Elements.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","304;305;306;307;308;309;310;311"
"./core/src/com/google/inject/spi/Elements.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341"
"./core/src/com/google/inject/spi/HasDependencies.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/spi/UntargettedBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28"
"./core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","44"
"./core/src/com/google/inject/spi/ProviderWithExtensionVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60"
"./core/src/com/google/inject/spi/DependencyAndSource.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","19;21;45;46"
"./core/src/com/google/inject/spi/DependencyAndSource.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25"
"./core/src/com/google/inject/spi/DependencyAndSource.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/DependencyAndSource.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76"
"./core/src/com/google/inject/spi/InjectionRequest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","50;51;52"
"./core/src/com/google/inject/spi/InjectionRequest.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","50;51;52"
"./core/src/com/google/inject/spi/InjectionRequest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25"
"./core/src/com/google/inject/spi/InjectionRequest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23"
"./core/src/com/google/inject/spi/InjectionRequest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82"
"./core/src/com/google/inject/spi/InjectionListener.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./core/src/com/google/inject/spi/InterceptorBinding.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","63;64;65"
"./core/src/com/google/inject/spi/InterceptorBinding.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","63;64;65"
"./core/src/com/google/inject/spi/InterceptorBinding.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","59;60"
"./core/src/com/google/inject/spi/InterceptorBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;23;24;26;27;28;31"
"./core/src/com/google/inject/spi/InterceptorBinding.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/src/com/google/inject/spi/InterceptorBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83"
"./core/src/com/google/inject/spi/PrivateElements.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/spi/PrivateElements.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60"
"./core/src/com/google/inject/spi/LinkedKeyBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36"
"./core/src/com/google/inject/spi/TypeListener.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48"
"./core/src/com/google/inject/spi/StaticInjectionRequest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","46;47;48"
"./core/src/com/google/inject/spi/StaticInjectionRequest.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","46;47;48"
"./core/src/com/google/inject/spi/StaticInjectionRequest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24"
"./core/src/com/google/inject/spi/StaticInjectionRequest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/src/com/google/inject/spi/StaticInjectionRequest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74"
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","37;38;39"
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","37;38;39"
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;23"
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/spi/RequireExplicitBindingsOption.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./core/src/com/google/inject/spi/Toolable.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;8;10;12;15"
"./core/src/com/google/inject/spi/Toolable.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/Toolable.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28"
"./core/src/com/google/inject/spi/ConstructorBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/spi/ConstructorBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/src/com/google/inject/spi/ProviderBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/spi/ElementVisitor.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","116;117;118;119;120;121;122"
"./core/src/com/google/inject/spi/ElementVisitor.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","20;109;110;111;112;113;114;115"
"./core/src/com/google/inject/spi/ElementVisitor.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","91;92;93;94;95"
"./core/src/com/google/inject/spi/ElementVisitor.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","89;90;91;92;93;94;95;96;97;98;99;100;101;102"
"./core/src/com/google/inject/spi/ElementVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89"
"./core/src/com/google/inject/spi/BindingScopingVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/spi/BindingScopingVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/src/com/google/inject/spi/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/src/com/google/inject/spi/BindingTargetVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","23;71;72"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","49;50;51"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","49;50;51"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","6716a71b495e25fb6c499c03ad2d919bedf2ec50","2010-11-19 02:47:30","sberlin","a few more @sinces.","39"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","39;40;65;66;67;68;69"
"./core/src/com/google/inject/spi/TypeConverterBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65"
"./core/src/com/google/inject/spi/Element.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64"
"./core/src/com/google/inject/spi/ScopeBinding.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","49;50;51"
"./core/src/com/google/inject/spi/ScopeBinding.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","49;50;51"
"./core/src/com/google/inject/spi/ScopeBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24"
"./core/src/com/google/inject/spi/ScopeBinding.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/src/com/google/inject/spi/ScopeBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65"
"./core/src/com/google/inject/spi/InstanceBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/spi/InstanceBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./core/src/com/google/inject/spi/ModuleSource.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","4;9;10;19;20;21;32;33;65;66;76;77;78;85;86;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;148;149;150;153;154;155;156;157"
"./core/src/com/google/inject/spi/ModuleSource.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","77;78;79;80;81;82;83;84;85;86;87;88"
"./core/src/com/google/inject/spi/ModuleSource.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","60;61;62"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","60;61;62"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","21;22;29;30;36;37;41;42;45;46;52;53;54;55;56;57;58;59;68;69"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","44;45"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;27;28"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24"
"./core/src/com/google/inject/spi/ProvisionListenerBinding.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","91a844c19e6d52877c65b8870d8ffc86acb0d80b","2011-10-17 00:02:49","guice.mirrorbot@gmail.com","fix issue 616, thanks for the patch!","46;47"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","b405e0417151915b98c3d2033adb9770336a7bbb","2011-10-16 22:34:21","guice.mirrorbot@gmail.com","Fix flaky service test.  The whole AsyncService thing probably should just be rm'd, but fixing the test for now.","46;47"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","7e5464ef25b98ea8f1988040d3623b93129ff1f4","2011-10-16 16:38:42","sberlin","fix issue 616, thanks for the patch!","46;47"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","6716a71b495e25fb6c499c03ad2d919bedf2ec50","2010-11-19 02:47:30","sberlin","a few more @sinces.","39;40"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","38;39;40;41;42"
"./core/src/com/google/inject/spi/ConvertedConstantBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47"
"./core/src/com/google/inject/spi/DefaultElementVisitor.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","101;102;103;104"
"./core/src/com/google/inject/spi/DefaultElementVisitor.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","97;98;99;100"
"./core/src/com/google/inject/spi/DefaultElementVisitor.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","86;87;88;89"
"./core/src/com/google/inject/spi/DefaultElementVisitor.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","85;86;87;88;89;90;91;92"
"./core/src/com/google/inject/spi/DefaultElementVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85"
"./core/src/com/google/inject/spi/ProviderKeyBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","38;39;40"
"./core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","38;39;40"
"./core/src/com/google/inject/spi/RequireAtInjectOnConstructorsOption.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48"
"./core/src/com/google/inject/spi/ProviderInstanceBinding.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","34;35;36;37;38;40;43;44;45"
"./core/src/com/google/inject/spi/ProviderInstanceBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/spi/ProviderInstanceBinding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45"
"./core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/spi/DefaultBindingScopingVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/src/com/google/inject/spi/ProvisionListener.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","38;39;40;41"
"./core/src/com/google/inject/spi/ProvisionListener.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","19;20;53;54;55;56;57;58;59;60;61;68"
"./core/src/com/google/inject/spi/ProvisionListener.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26"
"./core/src/com/google/inject/spi/ProvisionListener.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/ProvisionListener.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","19;20;58;59;60"
"./core/src/com/google/inject/spi/ProvisionListener.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57"
"./core/src/com/google/inject/spi/ProviderLookup.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","24;29;30;31;47;94;95;102;103;104;105;106;107;108;109;110;111;112;113;114;123"
"./core/src/com/google/inject/spi/ProviderLookup.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","50;51;52"
"./core/src/com/google/inject/spi/ProviderLookup.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","21;22;27;41;42;104;105;106;107;108;109;110;111;112;113"
"./core/src/com/google/inject/spi/ProviderLookup.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","47;48;49"
"./core/src/com/google/inject/spi/ProviderLookup.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;25;26"
"./core/src/com/google/inject/spi/ProviderLookup.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/src/com/google/inject/spi/ProviderLookup.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97"
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","37;38;39"
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","37;38;39"
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;23"
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/spi/DisableCircularProxiesOption.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./core/src/com/google/inject/spi/Message.java","0e896db46024dc7596302f8622276d1c7df02c6b","2013-12-11 23:40:58","Sam Berlin","A Message should have only one source but as it is used in Errors, currently it can have multiple sources. The Message objects is returned from two public methods(Elements#getElements() and Errors#getMessages()) that make any changes in its method declarations difficult. As the first step, I am going to remove all calls to the Message constructor that receives multiple sources from []. So, the only calls will be from Errors that I will deal with separately. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57979416","58;59;60;61;62;63;64"
"./core/src/com/google/inject/spi/Message.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","129;130"
"./core/src/com/google/inject/spi/Message.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;25;26;27;29"
"./core/src/com/google/inject/spi/Message.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;26"
"./core/src/com/google/inject/spi/Message.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131"
"./core/src/com/google/inject/spi/TypeConverter.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./core/src/com/google/inject/ConfigurationException.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23;25"
"./core/src/com/google/inject/ConfigurationException.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","20;22"
"./core/src/com/google/inject/ConfigurationException.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/src/com/google/inject/ConfigurationException.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74"
"./core/src/com/google/inject/MembersInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./core/src/com/google/inject/Provides.java","7839f29c2559fa100851777a79774e85f0dadeaf","2013-08-09 18:07:36","Christian Edward Gruber","Fix typo in comment for Provides annotation. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50518753","28;29"
"./core/src/com/google/inject/Provides.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23;24;25"
"./core/src/com/google/inject/Provides.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./core/src/com/google/inject/ProvidedBy.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23"
"./core/src/com/google/inject/ProvidedBy.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./core/src/com/google/inject/TypeLiteral.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","174;175"
"./core/src/com/google/inject/TypeLiteral.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;25;26;27;29"
"./core/src/com/google/inject/TypeLiteral.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;26"
"./core/src/com/google/inject/TypeLiteral.java","5d5941f9c5a882ac98a3312bd411bde00a1f425f","2010-11-25 02:06:49","sberlin","rm documentation that a TypeLiteral with wildcard character (such as List<? extends CharSequence>) doesn't work, add a test that asserts it does work.","48;49;50;51;52;53"
"./core/src/com/google/inject/TypeLiteral.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345"
"./core/src/com/google/inject/binder/LinkedBindingBuilder.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","63;64;65;66;67;68;69"
"./core/src/com/google/inject/binder/LinkedBindingBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22"
"./core/src/com/google/inject/binder/LinkedBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92"
"./core/src/com/google/inject/binder/ConstantBindingBuilder.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","66;67"
"./core/src/com/google/inject/binder/ConstantBindingBuilder.java","ebaa152b131a02b312ecdb37efcf98d07050120d","2010-10-25 00:58:04","sberlin","issue 496 -- ConstantBindingBuilder was missing to(byte).","67;68;69;70;71"
"./core/src/com/google/inject/binder/ConstantBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73"
"./core/src/com/google/inject/binder/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/src/com/google/inject/binder/AnnotatedElementBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/binder/AnnotatedBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/binder/AnnotatedConstantBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/binder/ScopedBindingBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/binder/ScopedBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./core/src/com/google/inject/matcher/Matchers.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","100;101;122;123"
"./core/src/com/google/inject/matcher/Matchers.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/matcher/Matchers.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22"
"./core/src/com/google/inject/matcher/Matchers.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399"
"./core/src/com/google/inject/matcher/Matcher.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./core/src/com/google/inject/matcher/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/src/com/google/inject/matcher/AbstractMatcher.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93"
"./core/src/com/google/inject/Binding.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92"
"./core/src/com/google/inject/ScopeAnnotation.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23"
"./core/src/com/google/inject/ScopeAnnotation.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/src/com/google/inject/BindingAnnotation.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23"
"./core/src/com/google/inject/BindingAnnotation.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/src/com/google/inject/Exposed.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24"
"./core/src/com/google/inject/Exposed.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./core/src/com/google/inject/Scope.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./core/src/com/google/inject/Injector.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;27"
"./core/src/com/google/inject/Injector.java","95b3f8a316e2ae2dda4d5af4be5a4bdbb892f168","2011-02-20 22:08:50","sberlin","issue 282 - mention quirks with optional dependencies, JIT bindings & child injectors in the javadoc.","216;217;218;219"
"./core/src/com/google/inject/Injector.java","30b582e14ad7f9ab64450720be5fce0c9f998312","2010-11-19 15:50:59","mcculls","Minor javadoc fix","255;256;257;258"
"./core/src/com/google/inject/Injector.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","22;23;24;253;254;255;256;257;258;259;260;261;262"
"./core/src/com/google/inject/Injector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250"
"./core/src/com/google/inject/AbstractModule.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","259;260;263;264;266;267"
"./core/src/com/google/inject/AbstractModule.java","f74ee672186bffc687b2accb911344a7021e7ecf","2011-10-18 20:43:18","Sam Berlin","Better errors when using binder(), etc. outside of configure().","78;87;88;95;96;103;104;111;112;119;120;127;128;135;136;143;144;144;145;152;153;160;161;171;172;184;185;196;197;204;205;212;213;221;222;229;230;237;238;245;246;255;256;264;265"
"./core/src/com/google/inject/AbstractModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;25;26;32"
"./core/src/com/google/inject/AbstractModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/src/com/google/inject/AbstractModule.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","26;254;255;256;257;258;259;260;261;262"
"./core/src/com/google/inject/AbstractModule.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253"
"./core/src/com/google/inject/Scopes.java","d9b62c213e28f42cba6c1c4bf625fc0dc6d0d8e2","2012-01-13 23:22:09","Sam Berlin","Do not create a new visitor instance for every call to isSingleton.","123;124;125;126;127;128;129;130;131;132;133;134;135;141;142;144;145;146;147;148;149;150;151;152;153;154"
"./core/src/com/google/inject/Scopes.java","66094fb9923bb4d1cf109be8915bac4679083169","2012-01-13 23:21:27","Sam Berlin","Add isEagerSingleton.","177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232"
"./core/src/com/google/inject/Scopes.java","05bf8e59221197d8e1b8b04bace4ff5cc34e7336","2011-09-27 15:37:30","guice.mirrorbot@gmail.com","Add Scopes.isCircularProxy, for use by Scope implementations.  The basic problem is that somewhere along the line, Guice is breaking the type-safety of <T> in the scope(Key<T>, Provider<T>) method.  This happens when <T> is involved in a circular dependency, and the ConstructionContext creates a circular proxy for a given 'expectedType' of <T> (the type in the parameter where it's being injected).  Expected type is a superclass or superinterface of <T>, not a subclass or subinterface, so if a Scope caches the result of Key<T> -> Provider<T>.get(), and then tries to reuse it, it's possible that we return something that isn't compatible with <T>.  This results in either a ClassCastException (if cglib is involved) or IllegalArgumentException (java reflection) when trying to construct the object, because the parameters don't match the arguments.","68;69;90;158;159;175;176;177;178;179;180;181;182;183;184;185;186"
"./core/src/com/google/inject/Scopes.java","09ab5f9e6a1d81bb6d4d196b009492f959ca5ceb","2010-10-25 00:41:10","sberlin","issue 477 - fix Scopes.isSingleton to navigate through exposed private elements.","23;24;162;163;164;165;166;167;168"
"./core/src/com/google/inject/Scopes.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165"
"./core/src/com/google/inject/Guice.java","be10b4c6b7a4909ec4eff8a2377a1f1b2d4aa63e","2011-10-16 23:36:26","guice.mirrorbot@gmail.com","fix issue 624.","55;56;57;66;67;68"
"./core/src/com/google/inject/Guice.java","b405e0417151915b98c3d2033adb9770336a7bbb","2011-10-16 22:34:21","guice.mirrorbot@gmail.com","Fix flaky service test.  The whole AsyncService thing probably should just be rm'd, but fixing the test for now.","55;56;57;65;66;67"
"./core/src/com/google/inject/Guice.java","56a879c866f7039321331d1f4305619adba527cb","2011-10-16 16:26:00","sberlin","fix issue 624.","55;56;57;66;67;68"
"./core/src/com/google/inject/Guice.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23"
"./core/src/com/google/inject/Guice.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","21;22;26;27;56;57;58;66;67;68;77;78;88;89;96;97"
"./core/src/com/google/inject/Guice.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100"
"./core/src/com/google/inject/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47"
"./core/src/com/google/inject/Provider.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/src/com/google/inject/Key.java","4ab2a909972c14715e3adcbe9e9acd2c1c403935","2014-04-01 22:04:07","Christian Edward Gruber","Memoize Key#toString() to reduce allocations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63557612","24;25;50;51;61;81;103;123;134;142;155;156;157;158;159;160;161;162;163;164;165;166;167;230;231"
"./core/src/com/google/inject/Key.java","b0aeeda0b5639a0553f0444e85926e4119cf16e0","2013-09-18 17:58:05","Christian Edward Gruber","Remove loophole for making non-canonical Keys. This makes the behaviour of Key.get(new TypeLiteral<T>() {}) and new Key<T>() {} the same. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51109122","75;76;77;96;97;98;115;116;117"
"./core/src/com/google/inject/Key.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","134;135;136;137;138"
"./core/src/com/google/inject/Key.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","21;22;355;356;357;358;359;363;364"
"./core/src/com/google/inject/Key.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;25;26"
"./core/src/com/google/inject/Key.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./core/src/com/google/inject/Key.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484"
"./core/src/com/google/inject/ImplementedBy.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23"
"./core/src/com/google/inject/ImplementedBy.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./core/src/com/google/inject/OutOfScopeException.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39"
"./core/src/com/google/inject/Module.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./core/src/com/google/inject/CreationException.java","f83bda3587fb8f1df33b6f3ada44d9de8bd93f6c","2014-05-03 04:43:10","Sam Berlin","Update provision & creation exception messages.  The previous messages caused misdiagnosis, as users think "There was a Guice error" when there is an error in user code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66120881","50;51"
"./core/src/com/google/inject/CreationException.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;23;24;26"
"./core/src/com/google/inject/CreationException.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/src/com/google/inject/CreationException.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./core/src/com/google/inject/Inject.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","41;42"
"./core/src/com/google/inject/Inject.java","2d454682438a7ed743365daca07e93e7226d4a55","2013-09-18 17:57:35","Christian Edward Gruber","Fix Inject documentation, as method injection happens after field injection. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50901673","37;38"
"./core/src/com/google/inject/Inject.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;25;26;27"
"./core/src/com/google/inject/Inject.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./core/src/com/google/inject/Binder.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","486;487;488;489;490;491;492;493;494;495"
"./core/src/com/google/inject/Binder.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","473;474;475;476;477;478;479;480;481;482;483;484;485"
"./core/src/com/google/inject/Binder.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","386;387;389;390;393;394"
"./core/src/com/google/inject/Binder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","27"
"./core/src/com/google/inject/Binder.java","3391af361375eb021e27711bb06cae2a193ccf91","2011-06-12 22:26:20","sberlin","remove stray <T>","390;391"
"./core/src/com/google/inject/Binder.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","24;379;380;381;382;383;384;385;386;387;388;389;390;391;392"
"./core/src/com/google/inject/Binder.java","be2505a424c177c372f7c8a38afbc0cba5cf4c24","2011-04-21 18:17:15","sberlin","specify that interceptors are called in the order they are listed in bindInterceptor(Matcher, Matcher, Interceptor...).  add a test that guarantees it.","219;220;221"
"./core/src/com/google/inject/Binder.java","ea27c01951aec20a880d410c57d1e5e1204fcb84","2010-12-14 14:08:21","sberlin","review comments from jesse.","418;419"
"./core/src/com/google/inject/Binder.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","28;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455"
"./core/src/com/google/inject/Binder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410"
"./core/src/com/google/inject/Stage.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44"
"./core/src/com/google/inject/ProvisionException.java","f83bda3587fb8f1df33b6f3ada44d9de8bd93f6c","2014-05-03 04:43:10","Sam Berlin","Update provision & creation exception messages.  The previous messages caused misdiagnosis, as users think "There was a Guice error" when there is an error in user code. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66120881","60;61"
"./core/src/com/google/inject/ProvisionException.java","0e896db46024dc7596302f8622276d1c7df02c6b","2013-12-11 23:40:58","Sam Berlin","A Message should have only one source but as it is used in Errors, currently it can have multiple sources. The Message objects is returned from two public methods(Elements#getElements() and Errors#getMessages()) that make any changes in its method declarations difficult. As the first step, I am going to remove all calls to the Message constructor that receives multiple sources from []. So, the only calls will be from Errors that I will deal with separately. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57979416","21;47;48"
"./core/src/com/google/inject/ProvisionException.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;25;27"
"./core/src/com/google/inject/ProvisionException.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23;24;25"
"./core/src/com/google/inject/ProvisionException.java","405828baafef04878c8b5bd57f90a9740bbef4a6","2011-02-06 17:59:07","sberlin","issues 592 & 591, documentation updates.","37;38"
"./core/src/com/google/inject/ProvisionException.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63"
"./core/src/com/google/inject/internal/util/SourceProvider.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","64;65;66;67;68;69;70"
"./core/src/com/google/inject/internal/util/SourceProvider.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","95;96;97;98;99;100;101;102;103;104;105;106;107"
"./core/src/com/google/inject/internal/util/SourceProvider.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","19;84;85;86;87;88"
"./core/src/com/google/inject/internal/util/SourceProvider.java","d9e05457644c7600746f8614f1285d5f1aa49e17","2013-06-26 21:34:13","Christian Edward Gruber","Reduce the memory consumption of SourceProvider instances by keeping a reference to the parent object instead of copying all class names to a new object.","19;20;34;41;42;43;44;45;46;47;48;49;50;51;52;53;54;59;60;61;62;63;64;65;66;67;68;69;86;87;88"
"./core/src/com/google/inject/internal/util/SourceProvider.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;25;26"
"./core/src/com/google/inject/internal/util/SourceProvider.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;23;24;25"
"./core/src/com/google/inject/internal/util/SourceProvider.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./core/src/com/google/inject/internal/util/Classes.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","27"
"./core/src/com/google/inject/internal/util/Classes.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/internal/util/Classes.java","dfee9fd5f78c5f1f769713b603e4e92a0b7b01e3","2010-10-30 14:15:06","sberlin","issue 531 -- don't let c.g.i.internal.util reference outside its package.","19;20;21;22;23;24;27;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80"
"./core/src/com/google/inject/internal/util/Classes.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","36;37;38;39;107;108;109;124;125;126"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","19;20;21;22;37;38;39;40;41;42;43;62;63;79;80"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","48;49;50;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;27;28;29"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25;26"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","dfee9fd5f78c5f1f769713b603e4e92a0b7b01e3","2010-10-30 14:15:06","sberlin","issue 531 -- don't let c.g.i.internal.util reference outside its package.","19;63;64"
"./core/src/com/google/inject/internal/util/StackTraceElements.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82"
"./core/src/com/google/inject/internal/util/LineNumbers.java","57aad211bb85221191216a442812fe1fa5b8bcbb","2014-04-08 16:26:24","Sam Berlin","Change Opcodes.ASM4 to Opcodes.ASM5, to work with java8 lambdas.  Also update opensource build to ASM 5.0.1.","132;133;182;183;208;209"
"./core/src/com/google/inject/internal/util/LineNumbers.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/util/LineNumbers.java","23030077f4b7446f3284d2094c983836c76f28c3","2013-05-16 00:32:52","Christian Edward Gruber","Upgrade to cglib 3.0 adn ASM 4.0.","25;125;126;132;133;134;135;147;148;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;193;194;195;196;197;198;199;200;201;202;207;208;209;210;211;212;215;216;217;218;221;222;223;226;227;228;231;232;233;234;235;236;237;239;240;243;244;245;247;248;251;252;253;254;256;257;258;259;261;262;263;264;266;271;272;273;274;275;276;277;278;279;280;281;284;285;286;287;288;289;290;291;292;293;294;295;296"
"./core/src/com/google/inject/internal/util/LineNumbers.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;25;26;27;28;29;30;33;34;35;36;37;38;39;40;41"
"./core/src/com/google/inject/internal/util/LineNumbers.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;37;38;39"
"./core/src/com/google/inject/internal/util/LineNumbers.java","c17c5a9b58d1d0ac0cf77dba0f5b5011a445c610","2011-02-14 01:01:01","sberlin","issue 574 - don't freak out on generated classes when trying to get line numbers.","61;62;66"
"./core/src/com/google/inject/internal/util/LineNumbers.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267"
"./core/src/com/google/inject/internal/util/Stopwatch.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./core/src/com/google/inject/internal/BindingImpl.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","24;60;61;62"
"./core/src/com/google/inject/internal/BindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","112;113;114;115"
"./core/src/com/google/inject/internal/BindingImpl.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","24;61;62;63"
"./core/src/com/google/inject/internal/BindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;23;109;110"
"./core/src/com/google/inject/internal/BindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119"
"./core/src/com/google/inject/internal/EncounterImpl.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","22;80;81;83;84;85;86;89;90;92;93;94;95"
"./core/src/com/google/inject/internal/EncounterImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;27;28;29;35"
"./core/src/com/google/inject/internal/EncounterImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28"
"./core/src/com/google/inject/internal/EncounterImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141"
"./core/src/com/google/inject/internal/ConstructionContext.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","2cc8ce904aff3d46a55cb6b886e975516a923524","2013-05-16 17:53:11","Christian Edward Gruber","Clear context during provision.  Fixes http://code.google.com/p/google-guice/issues/detail?id=743",""
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","35;39;40;41;42;48;49;50;63;64;74;75;76;77;86;87;91;92;93"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;24;27;28"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","68;69"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","23;35;36;38;40;41;42;43;48;49;50;51;54;55;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;91"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","24;34;38;39;40;46;47;48;49;50;51;52;53"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","24;35;39;40;41;49;50;51;52;53;54;55;56;57;58"
"./core/src/com/google/inject/internal/ProviderInternalFactory.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72"
"./core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;24;27"
"./core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24"
"./core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java","ebaa152b131a02b312ecdb37efcf98d07050120d","2010-10-25 00:58:04","sberlin","issue 496 -- ConstantBindingBuilder was missing to(byte).","85;86;87;88"
"./core/src/com/google/inject/internal/ConstantBindingBuilderImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126"
"./core/src/com/google/inject/internal/Initializer.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/Initializer.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","24;61;62;65;66;70;71;72;73;74;75;76;77;78;79;83;84;85;86;126;128;129;130;133;174;175;176;177;178;179"
"./core/src/com/google/inject/internal/Initializer.java","9ee53e90374a2253624b2d97860d928fde6c81c0","2011-10-31 20:34:57","Sam Berlin","Defer building of error messages for Preconditions.check(State|NotNull|Argument) calls.","162;163"
"./core/src/com/google/inject/internal/Initializer.java","6b7e7187bd074d3f2df9b04e17fa01e7592f295c","2011-10-16 22:36:01","guice.mirrorbot@gmail.com","Fix a very obscure bug where more than one InitializableReference of the same identity could result in an NPE during injector creation if the one that got ejected from the Map was requested for injection from another InitializableReference.","21;41;48;49;50;51;73;74;75;86;87;121;129;130;133;134;157;158;159;160;161;162;163"
"./core/src/com/google/inject/internal/Initializer.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;26;27;28;30"
"./core/src/com/google/inject/internal/Initializer.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25;26;27"
"./core/src/com/google/inject/internal/Initializer.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","19;52;55;56;57;58;65;66;111;114;115;117;151;152;153"
"./core/src/com/google/inject/internal/Initializer.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157"
"./core/src/com/google/inject/internal/ScopeBindingProcessor.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","43;44;49;50;51;55;56;60;61;62"
"./core/src/com/google/inject/internal/ScopeBindingProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;24"
"./core/src/com/google/inject/internal/ScopeBindingProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/ScopeBindingProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","37;38;39;40;138;139;140;141"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","24;62;63;70;71;72;73;74;75;76;77;78;84;85;86;89;90;91;93;94;95;96;97;98"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","19;61;62;69;70;71;72;79;80;82;83;84"
"./core/src/com/google/inject/internal/MembersInjectorImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145"
"./core/src/com/google/inject/internal/Nullability.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","5;6;26;27;28;29;30"
"./core/src/com/google/inject/internal/Nullability.java","94a685598d98e782471954e2e7b6bdb8220d259a","2010-10-29 02:44:32","sberlin","Jesse's suggestion for fixing Nullability -- check the String just for name=="Nullable", but add class==Nullable.class to catch the jarjar'd c.g.i.i.util.Nullable.","5;6;27;28;29;30;31;32;33;34"
"./core/src/com/google/inject/internal/Nullability.java","982f83e9d87049ccfcc2775c4b446c6a6f22d22d","2010-10-27 02:40:07","sberlin","fix Nullability to check for "$Nullable" (the jarjar renamed "Nullable"), and fix jarjar to build using asm-3.3 (it was using 3.1, and using 3.3 fixes http://code.google.com/p/jarjar/issues/detail?id=21, where annotations on methods that are remapped are loss)","25;26;27;28"
"./core/src/com/google/inject/internal/Nullability.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31"
"./core/src/com/google/inject/internal/MethodAspect.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23;24;28"
"./core/src/com/google/inject/internal/MethodAspect.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/internal/MethodAspect.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./core/src/com/google/inject/internal/InternalFlags.java","e1197a962b656e5128cfa01319e42db19c8ffc4b","2013-11-13 07:06:31","Christian Edward Gruber","Update Guice's maven build system to run the unit tests in three configurations, representing the three different values for stack-trace inclusion in error messages.  Additionally, modify the open-source InternalFlags to log a warning if a value is passed to the flag that does not correspond to the Enum.","3;4;5;10;11;16;17;19;20;22;23;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;49"
"./core/src/com/google/inject/internal/InternalFlags.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./core/src/com/google/inject/internal/UntargettedBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;21;55;56;57;58;59;60;61;62"
"./core/src/com/google/inject/internal/UntargettedBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22"
"./core/src/com/google/inject/internal/UntargettedBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;57;58"
"./core/src/com/google/inject/internal/UntargettedBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79"
"./core/src/com/google/inject/internal/CircularDependencyProxy.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./core/src/com/google/inject/internal/ProcessedBindingData.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24"
"./core/src/com/google/inject/internal/ProcessedBindingData.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/ProcessedBindingData.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/src/com/google/inject/internal/ProcessedBindingData.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54"
"./core/src/com/google/inject/internal/InjectorShell.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","19"
"./core/src/com/google/inject/internal/InjectorShell.java","31d8fbf9934778160de52837ef311f0d26efbbf8","2013-12-09 19:26:19","Sam Berlin","Fix issue 723 -- minor optimizations to TypeConverterBindingProcessor. Description in the bug describes this best: TypeConverterBindingProcessor has two responsibilities: 1) prepare built-in type converters for primitives, enums, classes, etc. and 2) process TypeConverter bindings and register them with the containing injector.","150;151"
"./core/src/com/google/inject/internal/InjectorShell.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/InjectorShell.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","132;133;135;136;177;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;291;294"
"./core/src/com/google/inject/internal/InjectorShell.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;30;34;35;36;37;42"
"./core/src/com/google/inject/internal/InjectorShell.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31;32;33;34;35"
"./core/src/com/google/inject/internal/InjectorShell.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","39;156;157;158;162;163;164;165;166;167;168;169;170;171;172;173"
"./core/src/com/google/inject/internal/InjectorShell.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","27;53;56;120;121;122;123;124;125;126;174;175;176;177;178;179;180;181;182;183;184;185;186;188;189"
"./core/src/com/google/inject/internal/InjectorShell.java","920731718b6f3505cdfeefeabd789539603de18a","2011-03-11 00:03:01","sberlin","fix issue 614 -- admittedly not the prettiest solution, but it works.","27;173;174;175;176;177;178;179;180"
"./core/src/com/google/inject/internal/InjectorShell.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","27;28;44;45;46;47;78;83;84;85;86;87;92;93;94;95;96;97;108;109;110;111;124;125;126;130;131;132;133;134;135;136;137;138;139;140;146;147;149;153;179;180"
"./core/src/com/google/inject/internal/InjectorShell.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265"
"./core/src/com/google/inject/internal/Initializable.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./core/src/com/google/inject/internal/MoreTypes.java","978ed86a76b3c47e8247f6691586b994bcf13dbc","2013-05-16 14:49:41","Christian Edward Gruber","Fix a == vs .equals() bug in MoreTypes.","231;232"
"./core/src/com/google/inject/internal/MoreTypes.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;26;27;28;29;30;32"
"./core/src/com/google/inject/internal/MoreTypes.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25;26;27;28;29"
"./core/src/com/google/inject/internal/MoreTypes.java","dfee9fd5f78c5f1f769713b603e4e92a0b7b01e3","2010-10-30 14:15:06","sberlin","issue 531 -- don't let c.g.i.internal.util reference outside its package.","29;30;33;34;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285"
"./core/src/com/google/inject/internal/MoreTypes.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557"
"./core/src/com/google/inject/internal/Annotations.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","23;24;25;27;74;75;76;77;78;79;81;82;90;91;211;212;213;214;215;216;223;224;225;226;237;238"
"./core/src/com/google/inject/internal/Annotations.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","20;21;22;23;25;37;39;40;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169"
"./core/src/com/google/inject/internal/Annotations.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;27;30;36"
"./core/src/com/google/inject/internal/Annotations.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25;26;27"
"./core/src/com/google/inject/internal/Annotations.java","c9d97cf1048498269fabbeb0f2ae2a921f53abf8","2010-12-15 21:42:11","crazyboblee","Cache annotation lookups.","24;25;32;33;34;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;124;125;126;173;174;175;180;181;182"
"./core/src/com/google/inject/internal/Annotations.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161"
"./core/src/com/google/inject/internal/ConstructorInjectorStore.java","efa4e9f24a309c38c1356fd43eb76fcbca8d975a","2011-09-13 17:41:32","guice.mirrorbot@gmail.com","Fix a bug in the way failed JIT bindings are cleaned up.  Because we removed bindings from the jitBindings Map, it was possible for an Injector to try and recreate the failed JIT binding.  Normally we want this behavior.. but in the case of a circular failed JIT binding, it can lead to a ComputationException from ComputingConcurrentHashMap, because we attempt to create two ConstructorInjectors for the same InjectionPoint recursively.","34"
"./core/src/com/google/inject/internal/ConstructorInjectorStore.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22"
"./core/src/com/google/inject/internal/ConstructorInjectorStore.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22"
"./core/src/com/google/inject/internal/ConstructorInjectorStore.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","33"
"./core/src/com/google/inject/internal/ConstructorInjectorStore.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92"
"./core/src/com/google/inject/internal/MessageProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/internal/MessageProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54"
"./core/src/com/google/inject/internal/FailableCache.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","19;20;21;22;23;24;25;31;32;33;34;35;36;48;49;60;61"
"./core/src/com/google/inject/internal/FailableCache.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;23;34;35"
"./core/src/com/google/inject/internal/FailableCache.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","21;22"
"./core/src/com/google/inject/internal/FailableCache.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62"
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","26;39;63;64;65;66;67;68;76;77;78;85;86;87"
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","25;37;55;56;57;58;59;60;67;68;69;75;76;77"
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22"
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","ea27c01951aec20a880d410c57d1e5e1204fcb84","2010-12-14 14:08:21","sberlin","review comments from jesse.","2;3"
"./core/src/com/google/inject/internal/InjectorOptionsProcessor.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./core/src/com/google/inject/internal/BytecodeGen.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","19;20;21;22;23;24;29;127;128;131;132;133;134;135;136;137;138;139;140;141;145;146;147;185;186"
"./core/src/com/google/inject/internal/BytecodeGen.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;23;24;25;134;135"
"./core/src/com/google/inject/internal/BytecodeGen.java","3bdf721ed546315c59098407798b722d20b959b2","2010-12-09 03:57:44","sberlin","fix for NO_AOP build.","33;34;89;90;91;107;108;109"
"./core/src/com/google/inject/internal/BytecodeGen.java","1c6ff880b9a83a833c6fc5fb4fc0e3a15bfb1f80","2010-11-18 03:59:56","sberlin","fix issue 508 -- consider method return type when deciding whether to bridge.  patch contributed by stuart.","261;262;263;264;265;266;267;268;269;270;271;272;273;274"
"./core/src/com/google/inject/internal/BytecodeGen.java","a102c17638ec586de3d6930c8ef794c751d157d6","2010-11-09 05:35:13","sberlin","make sure $$EnhancerByGuice$$ & $$FastClassByGuice$$ stay named that way and don't become $$$EnhancerByGuice$$ & $$$FastClassByGuice$$ after jarjar renames the cglib classes.","33;34;84;85;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;205;206;217;218"
"./core/src/com/google/inject/internal/BytecodeGen.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","22;23"
"./core/src/com/google/inject/internal/BytecodeGen.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299"
"./core/src/com/google/inject/internal/Scoping.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","28;45;46;57;58;64;65;75;76;82;83;93;94;100;101;111;112;123;124;135;136;147;148;159;160;258;259;261;262"
"./core/src/com/google/inject/internal/Scoping.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;27;29"
"./core/src/com/google/inject/internal/Scoping.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","26;27"
"./core/src/com/google/inject/internal/Scoping.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","242;243;244"
"./core/src/com/google/inject/internal/Scoping.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","38;39"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","38;39"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","38"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","28;29;32;33;34;35;36;43;44;51;52"
"./core/src/com/google/inject/internal/InternalFactoryToProviderAdapter.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./core/src/com/google/inject/internal/InjectorImpl.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","312;313"
"./core/src/com/google/inject/internal/InjectorImpl.java","ca81e59c8864a19e061fe5fd3c8dece43cbaf847","2014-07-01 20:52:59","Sam Berlin","Submitting Stuart McCulloch's patch from https://github.com/sonatype/sisu-guice/blob/master/PATCHES/GUICE_288_decouple_thread_local.patch.","131;132;1046;1047;1052;1053;1054;1055;1075;1076;1077;1078;1079;1080;1081"
"./core/src/com/google/inject/internal/InjectorImpl.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","788;789;790;791;792;794;799;800;820;821;822;823;824;826"
"./core/src/com/google/inject/internal/InjectorImpl.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","794;795"
"./core/src/com/google/inject/internal/InjectorImpl.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","794;795"
"./core/src/com/google/inject/internal/InjectorImpl.java","c01ba1d84d542110167e7bdb4bb6d522b30055ea","2013-09-18 17:59:50","Christian Edward Gruber","Convert an anonymous subclass of ThreadLocal in the implementation of InjectorImpl to a nested class, thus eliminating its implicit parent reference. This implicit parent reference creates some additional work during debugging and is unnecessary. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51925521","131;132;133;134;135;136;137;1064;1065;1066;1067;1068;1069"
"./core/src/com/google/inject/internal/InjectorImpl.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/InjectorImpl.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","75;78;79;84;93;859;860"
"./core/src/com/google/inject/internal/InjectorImpl.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","74;76;77;78;82;90;186;187;658;659;660;661;662;663;664;665;666;827;828;836;837"
"./core/src/com/google/inject/internal/InjectorImpl.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","551;552;582;583;596;597;598;599;600;601;602;603;604;605;703;704;705;707;708;713;714"
"./core/src/com/google/inject/internal/InjectorImpl.java","efa4e9f24a309c38c1356fd43eb76fcbca8d975a","2011-09-13 17:41:32","guice.mirrorbot@gmail.com","Fix a bug in the way failed JIT bindings are cleaned up.  Because we removed bindings from the jitBindings Map, it was possible for an Injector to try and recreate the failed JIT binding.  Normally we want this behavior.. but in the case of a circular failed JIT binding, it can lead to a ComputationException from ComputingConcurrentHashMap, because we attempt to create two ConstructorInjectors for the same InjectionPoint recursively.","25;108;109;110;111;112;125;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;280;281;597;1047"
"./core/src/com/google/inject/internal/InjectorImpl.java","5221c15e183cb7029a305766d137d909f77e8941","2011-07-22 21:13:53","sberlin","Fix a few common.collect-related deprecation warnings... because it's easy!","223;224"
"./core/src/com/google/inject/internal/InjectorImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;39;40;41;42;43;44;48"
"./core/src/com/google/inject/internal/InjectorImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","33;34;35;36;37;38;39;40;41;42;43;44;45;47;81;82;109;110;351;352;478;479;1022;1023"
"./core/src/com/google/inject/internal/InjectorImpl.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","719;720;723;724;725;912;913;914;915;955;956;957;958;964;965;967;968;970;971;980;981"
"./core/src/com/google/inject/internal/InjectorImpl.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","576;679;680;681;682;923;924;925"
"./core/src/com/google/inject/internal/InjectorImpl.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","506;507;508;509;515;516;520;521;523;524;665;666;667;668;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;707;708;714;715;716"
"./core/src/com/google/inject/internal/InjectorImpl.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","681;682"
"./core/src/com/google/inject/internal/InjectorImpl.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","681;682"
"./core/src/com/google/inject/internal/InjectorImpl.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","680;681;682;686;687;690;691;692"
"./core/src/com/google/inject/internal/InjectorImpl.java","9cdfe3a047011b6f78d84b189602d238bac2945a","2011-03-02 13:53:17","sberlin","issue 610 - let requireExplicitBindings still allow TypeConverters to create ConvertedConstantBindings.","236;237;238;239;243;244;245;246;247;248;249;250;254;255;256;257;258;260;261;756;757;758;759;761;762;764;765;766;772;773;791;792;793;794;824;825;826;827;828;829"
"./core/src/com/google/inject/internal/InjectorImpl.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","766;767;768;769;794;795;796;797"
"./core/src/com/google/inject/internal/InjectorImpl.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","766;767;768;772;773;794;795;796"
"./core/src/com/google/inject/internal/InjectorImpl.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","24;31;33;65;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;235"
"./core/src/com/google/inject/internal/InjectorImpl.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","49;381;382;384;385;391;392;395;396;401;402;406;407;408;412;413;418;421;422;423;429;443;444;445;446;841;842;843;844;845;846"
"./core/src/com/google/inject/internal/InjectorImpl.java","f712ffddfa3237a84bd457ebb999bfa0951cd422","2010-10-29 12:00:27","sberlin","make sure MembersInjector dependencies don't blow up on requireExplicitBindings.","215;216"
"./core/src/com/google/inject/internal/InjectorImpl.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","39"
"./core/src/com/google/inject/internal/InjectorImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;870;871;872;873;874;875;876;877;878;879;880;881;882;883;884;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910;911;912;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939;940;941;942;943;944;945;946;947;948;949;950;951;952;953;954;955;956;957;958;959;960;961;962;963;964;965;966;967;968;969;970;971;972;973;974;975;976;977;978;979;980;981;982;983;984;985;986;987;988;989;990;991;992;993;994;995;996;997;998"
"./core/src/com/google/inject/internal/ProviderToInternalFactoryAdapter.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./core/src/com/google/inject/internal/ProxyFactory.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","23;139;140;141;142;143;144"
"./core/src/com/google/inject/internal/ProxyFactory.java","2823a381af4bde3c616c6542a6e2933d931ba76e","2012-02-27 02:24:52","Sam Berlin","Fix issue 643 using a slightly modified version of the patch provided by Stuart.","27;173;174;202;203;204;205;206;207;210;211;212;213;215;216;217;218;219;221;222;223;225;227;231;232;237;238;242;243"
"./core/src/com/google/inject/internal/ProxyFactory.java","88ee52dec9920c95e2f0ed3c43e625872c5d1fd4","2012-02-27 02:22:30","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","27;172;173;201;202;203;204;205;206;209;210;211;212;214;215;216;217;218;220;221;222;224;226;230;231;236;237;241;242"
"./core/src/com/google/inject/internal/ProxyFactory.java","1c9b92a5d8699e93df11c222566f797919db3f97","2012-01-21 17:55:00","Sam Berlin","Fix issue 643 using a slightly modified version of the patch provided by Stuart.","27;173;174;202;203;204;205;206;207;210;211;212;213;215;216;217;218;219;221;222;223;225;227;231;232;237;238;242;243"
"./core/src/com/google/inject/internal/ProxyFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;27;28;29;30;31;32;33;34;43;44;45;46;47;48;49"
"./core/src/com/google/inject/internal/ProxyFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23;24;25;26;27"
"./core/src/com/google/inject/internal/ProxyFactory.java","336d222c7840090ecb36652af93d29f424c11921","2011-02-20 21:39:07","sberlin","add some logging for interceptors that may trigger issue 252.","19;29;32;33;34;38;49;50;100;101;102;103;104;105;106"
"./core/src/com/google/inject/internal/ProxyFactory.java","82d0fdbec0cb93ff770dab55931029f4140db54e","2011-01-18 19:41:12","sberlin","rework method interception so that methods that aren't intercepted don't go through cglib, reducing the number of stack frames in most method calls.  this has a slight side effect that additional proxy classes are generated for a single class if (and only if) the intercepted methods change.  if the intercepted methods remain the same, then the proxy classes will continue to be shared (so things like assistedinject will not blow up the heap).","49;50;51;52;53;54;55;56;57;118;119;148;149;150;151;152;153;154;155;156;157"
"./core/src/com/google/inject/internal/ProxyFactory.java","fc46e1a98e70d22e5674a4aa42ede2fdede6a25a","2010-12-15 05:38:37","limpbizkit@gmail.com","Fix warnings in core.","251;252"
"./core/src/com/google/inject/internal/ProxyFactory.java","b02627d4f5706bf29788387e8d96a7a1bcc38f1f","2010-10-25 04:56:00","sberlin","issue 407 -- better error messaging for failed interception.  previously exploded with a ComputationException, now uses a ConfigurationException with a good msg.","26;151;152;168;169"
"./core/src/com/google/inject/internal/ProxyFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271"
"./core/src/com/google/inject/internal/InternalContext.java","cadabc1aa1cbe30c48a7b730c2907c82abff6336","2013-06-26 21:34:36","Christian Edward Gruber","Switch InternalContext to store dependency/source pairs more compactly.","20;26;27;39;41;42;43;44;45;46;47;48;49;50;51;52;53;63;64;69;70;71;72;74;75;76;81;82;89;90;91;96;97;98;103;104;105;106;107;108;109"
"./core/src/com/google/inject/internal/InternalContext.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22"
"./core/src/com/google/inject/internal/InternalContext.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/src/com/google/inject/internal/InternalContext.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","19;20;23;24;25;26;38;40;41;58;59;60;63;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86"
"./core/src/com/google/inject/internal/InternalContext.java","1d0f8167ad78315676dc641db4d5367a68676cda","2010-10-22 04:13:25","sberlin","issue 446 -- InternalContext.setDependency was returning the current, not previous, dependency.","50;51"
"./core/src/com/google/inject/internal/InternalContext.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","21;22;216;217;218;219;220;221;222;223"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","26;75;76;100;101;102;128;129;130;131;132;133"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","130;131"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;28;30;31;32;37"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26;27;28;29;30;31;210;211"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","126;127;128;129;130;131;240;259;260"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","41;42;43"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","fc46e1a98e70d22e5674a4aa42ede2fdede6a25a","2010-12-15 05:38:37","limpbizkit@gmail.com","Fix warnings in core.","200"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","124;125"
"./core/src/com/google/inject/internal/ConstructorBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257"
"./core/src/com/google/inject/internal/DeferredLookups.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;24;28"
"./core/src/com/google/inject/internal/DeferredLookups.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24"
"./core/src/com/google/inject/internal/DeferredLookups.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62"
"./core/src/com/google/inject/internal/DelayedInitialize.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","e91540ea9c03104069b90d40d5d1080dc84ba9d6","2013-12-11 23:41:21","Sam Berlin","Fixes issue 652.  Allow method interceptors to capture the method & call it later from a different context.  Patch by Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58040591","55;56;63;64;67;68;72;77;80;81;82;86;87"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;24;25;32;33;34"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd","2011-02-28 15:08:01","sberlin","update stack trace pruning (for AOP-internal methods & generated methods) to include causes.","102;103;106;107;108;114;115;116"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","e0f541287d1dcbdd5c52c471b357b6ac7d72d152","2011-01-15 07:06:25","limpbizkit@gmail.com","Remove AOP boilerplate from user visible stack traces.","19;22;23;25;36;37;38;39;75;76;77;78;79;80;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114"
"./core/src/com/google/inject/internal/InterceptorStackCallback.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","338213332308fc9932603b2f4c853a4a7d19cc13","2013-11-13 07:07:22","Christian Edward Gruber","Make guice build with javac 8.","62;69;70"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","40;46;47;48;49;50;56;57;58;59;72;73;79"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","63;64;69;70;71"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","45;46;47;48;49;58;66;67;68;69;70;71;73;74;75"
"./core/src/com/google/inject/internal/ProvidedByInternalFactory.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77"
"./core/src/com/google/inject/internal/SingleMemberInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27"
"./core/src/com/google/inject/internal/InjectionRequestProcessor.java","ee443bce9731bb8da1eb60202f68de4c4c298698","2011-09-09 21:19:11","guice.mirrorbot@gmail.com","Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.","102;103;106;109;110;111;112;113"
"./core/src/com/google/inject/internal/InjectionRequestProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;28"
"./core/src/com/google/inject/internal/InjectionRequestProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./core/src/com/google/inject/internal/InjectionRequestProcessor.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","61;62"
"./core/src/com/google/inject/internal/InjectionRequestProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127"
"./core/src/com/google/inject/internal/InterceptorBindingProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/internal/LinkedProviderBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;21;95;96;97;98;99;100;101;102;103;104;105;106;107;108"
"./core/src/com/google/inject/internal/LinkedProviderBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;29"
"./core/src/com/google/inject/internal/LinkedProviderBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;97;98"
"./core/src/com/google/inject/internal/LinkedProviderBindingImpl.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","31;32;35;37;38;40;41;42;45;46;47;48;49;50;51;58;59;60;61;62;63;64;65;66;74;75;76;77;78;79"
"./core/src/com/google/inject/internal/LinkedProviderBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","19;20;21;22;26;33;50;51;52;53;54;55;56;57;68;69;84;85"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","21;25;27;33;34;42;43;44;45;46;47;66;67;68;69;70;71;72;101;102;103;104;105;106"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","23;39;40;42;43;44;45;46;47;54;55;56;57;67;68;75;76;78;79;80;81;85;86;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;27;31;32;33"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28;29;30"
"./core/src/com/google/inject/internal/ProvisionListenerCallbackStore.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89"
"./core/src/com/google/inject/internal/Exceptions.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/Exceptions.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","19;29;30;31;32;33;34;35;37;38;39;40;44;45;46;47;48;49;50;51;52;53;54;55;56;58;59"
"./core/src/com/google/inject/internal/Exceptions.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57"
"./core/src/com/google/inject/internal/Lookups.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;30;31;35"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","201;202;209;210"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","64;65;72;73;103;104;122;123;133;134"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","70;71;72;73;74;75;76;77;78;79;80;81;87;88;89;90;87;111;112;177;178;180;181"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","32;37;291;292;293"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","6f8b39589d3f2193994cd470f83b343416260bf5","2010-11-02 21:23:30","sberlin@gmail.com","(and remove unused import)","29;36"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","22b3c09d5a4d573cd83b21cd5cab63485e211b26","2010-11-02 21:22:49","sberlin@gmail.com","build a list, not a set -- so that we don't call hashCode or equals on any bindings.","28;205;206"
"./core/src/com/google/inject/internal/InternalInjectorCreator.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315"
"./core/src/com/google/inject/internal/LinkedBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;21;69;70;71;72;73;74;75;76;77;78;79;80;81;82"
"./core/src/com/google/inject/internal/LinkedBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;29"
"./core/src/com/google/inject/internal/LinkedBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;70;71"
"./core/src/com/google/inject/internal/LinkedBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95"
"./core/src/com/google/inject/internal/SingleMethodInjector.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22"
"./core/src/com/google/inject/internal/SingleMethodInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100"
"./core/src/com/google/inject/internal/Errors.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","22;53;54;546;547;548;549;553;554;555;556"
"./core/src/com/google/inject/internal/Errors.java","c5848c0b57ad0f3f09acadff4be80c19d0c7d95f","2013-12-06 22:05:44","Sam Berlin","Optimize RecordingBinder.withSource so it doesn't always create a new binder. Fixes issue 776, patch thanks to Stuart McCulloch! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57757534","118;119"
"./core/src/com/google/inject/internal/Errors.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","38;67;68;204;205;206;207;208;211;212;213;214;254;255;257;258;259;260;679;681;682;683;685;686;687;688;691;692;693;694;695;697;698;699;700;701;702;703;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;741;743;744;745;746;747;750;751;756;757;759;760;764;765;768;769;772;773;776;777;781;782;785;786;791;792;798;799;803;804"
"./core/src/com/google/inject/internal/Errors.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","34;679;680;681;691;692;693;694"
"./core/src/com/google/inject/internal/Errors.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","142;143;144;145;146;147;148;657;658;663;664;669;670"
"./core/src/com/google/inject/internal/Errors.java","ee443bce9731bb8da1eb60202f68de4c4c298698","2011-09-09 21:19:11","guice.mirrorbot@gmail.com","Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.","271;272;273;274"
"./core/src/com/google/inject/internal/Errors.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;31;32;33;39"
"./core/src/com/google/inject/internal/Errors.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","72"
"./core/src/com/google/inject/internal/Errors.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31;32;33"
"./core/src/com/google/inject/internal/Errors.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","53;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322"
"./core/src/com/google/inject/internal/Errors.java","0d8b52f2099648805ec1e8aff9399b76856ad1d4","2011-02-21 21:06:40","sberlin","issue 608 - child can rebind a parent binding if it was just-in-time.","297;298;299;300"
"./core/src/com/google/inject/internal/Errors.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","297;298;299;300;301;302;303;310;311"
"./core/src/com/google/inject/internal/Errors.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","37;56;57;140;141;144;145;149;150;154;155;159;160;164;165;169;170;613;614"
"./core/src/com/google/inject/internal/Errors.java","dfee9fd5f78c5f1f769713b603e4e92a0b7b01e3","2010-10-30 14:15:06","sberlin","issue 531 -- don't let c.g.i.internal.util reference outside its package.","27;630;631;687;688"
"./core/src/com/google/inject/internal/Errors.java","b02627d4f5706bf29788387e8d96a7a1bcc38f1f","2010-10-25 04:56:00","sberlin","issue 407 -- better error messaging for failed interception.  previously exploded with a ComputationException, now uses a ConfigurationException with a good msg.","347;348;349;350"
"./core/src/com/google/inject/internal/Errors.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698"
"./core/src/com/google/inject/internal/AbstractBindingBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;27"
"./core/src/com/google/inject/internal/AbstractBindingBuilder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23"
"./core/src/com/google/inject/internal/AbstractBindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130"
"./core/src/com/google/inject/internal/CreationListener.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/CreationListener.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23"
"./core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","27;99;100"
"./core/src/com/google/inject/internal/DefaultConstructionProxyFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107"
"./core/src/com/google/inject/internal/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","101;102"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","101;102"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","101;102"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","29;55;57"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;30;33;34"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","55;56"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","55;56"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","31;32"
"./core/src/com/google/inject/internal/AbstractBindingProcessor.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167"
"./core/src/com/google/inject/internal/SingleParameterInjector.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","28;29;31;32;34;35;39;40;42;43;45;46"
"./core/src/com/google/inject/internal/SingleParameterInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","20;27;54;55;56"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","19;35;36;37;38;42;43;44;45;46"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","19;20;35;36;38;39;40;41;67;68;108;125;126;127;128;129;130;131"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;25;26;27"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","74;75"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","74;75"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","24;50;51;52;53;54;82;89;90;92;127;128;129;130;131"
"./core/src/com/google/inject/internal/ProvisionListenerStackCallback.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124"
"./core/src/com/google/inject/internal/ConstructionProxyFactory.java","b02627d4f5706bf29788387e8d96a7a1bcc38f1f","2010-10-25 04:56:00","sberlin","issue 407 -- better error messaging for failed interception.  previously exploded with a ComputationException, now uses a ConfigurationException with a good msg.","29;30"
"./core/src/com/google/inject/internal/ConstructionProxyFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./core/src/com/google/inject/internal/DelegatingInvocationHandler.java","c18cbce112ed92edd7f94bc5094d49f11ffa259a","2011-05-03 02:53:09","sberlin","remove "involving constructors" since we support proxies for circular dependencies involving providers too now.","31;32"
"./core/src/com/google/inject/internal/DelegatingInvocationHandler.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","37;38;39"
"./core/src/com/google/inject/internal/DelegatingInvocationHandler.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54"
"./core/src/com/google/inject/internal/SingleFieldInjector.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22"
"./core/src/com/google/inject/internal/SingleFieldInjector.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","31;32;41;42;51;52;54;55;62;63"
"./core/src/com/google/inject/internal/SingleFieldInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63"
"./core/src/com/google/inject/internal/ErrorsException.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/internal/LookupProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./core/src/com/google/inject/internal/ConstructorInjector.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/src/com/google/inject/internal/ConstructorInjector.java","2cc8ce904aff3d46a55cb6b886e975516a923524","2013-05-16 17:53:11","Christian Edward Gruber","Clear context during provision.  Fixes http://code.google.com/p/google-guice/issues/detail?id=743","97;127;128"
"./core/src/com/google/inject/internal/ConstructorInjector.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","84;98;106"
"./core/src/com/google/inject/internal/ConstructorInjector.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23"
"./core/src/com/google/inject/internal/ConstructorInjector.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/ConstructorInjector.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","88;89"
"./core/src/com/google/inject/internal/ConstructorInjector.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","19;60;61;62;63;65;66;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;105;126;127"
"./core/src/com/google/inject/internal/ConstructorInjector.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108"
"./core/src/com/google/inject/internal/AbstractProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/internal/AbstractProcessor.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","19;20;22;23;24;25;26;27;28;29;30;31;33;34;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111"
"./core/src/com/google/inject/internal/AbstractProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122"
"./core/src/com/google/inject/internal/MembersInjectorStore.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","21;25;102;103;104;105;106;107;108;110;111;113;114"
"./core/src/com/google/inject/internal/MembersInjectorStore.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;27"
"./core/src/com/google/inject/internal/MembersInjectorStore.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./core/src/com/google/inject/internal/MembersInjectorStore.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135"
"./core/src/com/google/inject/internal/ExposedKeyFactory.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","27;28"
"./core/src/com/google/inject/internal/ExposedKeyFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/src/com/google/inject/internal/PrivateElementProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/internal/PrivateElementProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/internal/PrivateElementProcessor.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","19;30;33;34;36;42"
"./core/src/com/google/inject/internal/PrivateElementProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./core/src/com/google/inject/internal/ProviderMethod.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","174;175"
"./core/src/com/google/inject/internal/ProviderMethod.java","409e0f578b620c38f6c8626dee78783219d2956e","2014-05-10 14:34:16","Sam Berlin","Try to use cglibs FastClass to invoke @Provides methods, it's faster!","20;27;40;49;50;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;88;89;94;95;104;105;146;148;149;156;157;158;159;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251"
"./core/src/com/google/inject/internal/ProviderMethod.java","29ce12be89584ca1ad671408ecbe0f6c343f9382","2014-03-10 16:52:01","Sam Berlin","Add an SPI for @Provides methods (using the extensions SPI) so that users can do more analysis (with the enclosing instance, method, etc..).","27;29;30;31;32;33;34;46;47;48;86;87;88;89;128;129;130;131;132;133;134;135;136"
"./core/src/com/google/inject/internal/ProviderMethod.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;27;31"
"./core/src/com/google/inject/internal/ProviderMethod.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25;26;27"
"./core/src/com/google/inject/internal/ProviderMethod.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","109;110"
"./core/src/com/google/inject/internal/ProviderMethod.java","672d074534943987bab5629cac5662a8e07f8bcb","2010-12-16 14:46:42","sberlin","implement hashcode when implementing equals.","25;131;132;133;134;135;136;137;138"
"./core/src/com/google/inject/internal/ProviderMethod.java","7691f9ebdc39ea951f497b3950f87a4c18a3fd38","2010-12-16 02:34:54","sberlin","require ProviderMethod instance to be equal also, per jessewilson review.","25;123;124;125;126"
"./core/src/com/google/inject/internal/ProviderMethod.java","1068a4a4187309f05a54c3900251ccd897625feb","2010-12-16 01:38:08","sberlin","allow duplicate @Provides methods to be deduplicated also.","25;120;121;122;123;124;125;126;127;128"
"./core/src/com/google/inject/internal/ProviderMethod.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","76be88e8140f77a25824f5deb67bb13b8e5dabc6","2014-07-01 20:56:13","Sam Berlin","Detect overrides of @Provides method and add an error for each one.","21;24;38;39;78;87;90;91;92;93;94;95;96;97;98;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","53a5936f55056dc695c35e6e16233c5b49780ded","2014-05-23 22:19:12","Sam Berlin","Ignore synthetic bridge methods during provider method lookup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67854418","84;85;92;93;94;95;96;97;98;99;100;101;102;103"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","409e0f578b620c38f6c8626dee78783219d2956e","2014-05-10 14:34:16","Sam Berlin","Try to use cglibs FastClass to invoke @Provides methods, it's faster!","126;127"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;29;30;31;35"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26;27;28;29;30"
"./core/src/com/google/inject/internal/ProviderMethodsModule.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","19;20;32;43;44;45;63;64"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","55;56;60;61;62"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","19;20;38;39;40;41;42;57;59;60;61;62;63;64;65"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","33;38;39"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","33;38;39"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","26;27;31;37;38;39;40;43;55;56"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","20"
"./core/src/com/google/inject/internal/BoundProviderFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65"
"./core/src/com/google/inject/internal/ListenerBindingProcessor.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./core/src/com/google/inject/internal/BindingProcessor.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","56;57;58;106;107;109;110;111;112;113"
"./core/src/com/google/inject/internal/BindingProcessor.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","90;91;93;94"
"./core/src/com/google/inject/internal/BindingProcessor.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","75;76"
"./core/src/com/google/inject/internal/BindingProcessor.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","70;85;100;107;108;111;112;119;123;124;127;128;136;153;158;163;168"
"./core/src/com/google/inject/internal/BindingProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","34"
"./core/src/com/google/inject/internal/BindingProcessor.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","88;89;102;103"
"./core/src/com/google/inject/internal/BindingProcessor.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","104;105;106;117;118;119"
"./core/src/com/google/inject/internal/BindingProcessor.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","103;104;115;116"
"./core/src/com/google/inject/internal/BindingProcessor.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","103;104;115;116"
"./core/src/com/google/inject/internal/BindingProcessor.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","103;104;105;115;116;117;118"
"./core/src/com/google/inject/internal/BindingProcessor.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","19;22;24;25;27;28;29;30;31;34;42;43;45;47;49;50;51;52;53;54;55;59;60;61;62;64;65;66;67;68;63;64;65;71;72;73;74;75;76;77;79;84;98;112;116;117;125;132;133;141;142;143;144;145;146;147;148;149;150;151;152;156;157;158;159;160;161;162;163;164;165;166;167;168;169;156;157;158;159;160;161;162;163;164;165;166;167;168;174;175;176;177;178;179;172;173;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276"
"./core/src/com/google/inject/internal/BindingProcessor.java","920731718b6f3505cdfeefeabd789539603de18a","2011-03-11 00:03:01","sberlin","fix issue 614 -- admittedly not the prettiest solution, but it works.","58;59;60;66;67;68;69;96;97;98;99;107;108;111;112;120;121;124;125;133;134;137;138;145;146;149;150;160;161;164;165;171;172;173;174;175;176;177;190;191;194;195;199;200;204;205;217;218;222;223;224;225;226;227"
"./core/src/com/google/inject/internal/BindingProcessor.java","0d8b52f2099648805ec1e8aff9399b76856ad1d4","2011-02-21 21:06:40","sberlin","issue 608 - child can rebind a parent binding if it was just-in-time.","253;254;256;257;266;267;268;269;270;271"
"./core/src/com/google/inject/internal/BindingProcessor.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","267;268"
"./core/src/com/google/inject/internal/BindingProcessor.java","fc46e1a98e70d22e5674a4aa42ede2fdede6a25a","2010-12-15 05:38:37","limpbizkit@gmail.com","Fix warnings in core.","298;299"
"./core/src/com/google/inject/internal/BindingProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314"
"./core/src/com/google/inject/internal/InheritingState.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","59;60;66;158;159;160;161;162;163"
"./core/src/com/google/inject/internal/InheritingState.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","59;60;66;157;158;159;160;161;162"
"./core/src/com/google/inject/internal/InheritingState.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","59;60;66;158;159;160;161;162;163"
"./core/src/com/google/inject/internal/InheritingState.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","22;30;52;53;85;86;87;88;89;90;93;94;175;176;177;178;179;180"
"./core/src/com/google/inject/internal/InheritingState.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;28;29;30;31;32;36"
"./core/src/com/google/inject/internal/InheritingState.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28;29;30"
"./core/src/com/google/inject/internal/InheritingState.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","27;28;54;55;56;129;130;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151"
"./core/src/com/google/inject/internal/InheritingState.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","34;147;148;149;150"
"./core/src/com/google/inject/internal/InheritingState.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","137;138;139;140;141;142;149;150;151;152"
"./core/src/com/google/inject/internal/InheritingState.java","9c28d5b5242600f2d64be3bca5fee79fbc084753","2010-11-19 02:39:46","sberlin","revert State & InheritingState back to using Iterable & Set.","87;88"
"./core/src/com/google/inject/internal/InheritingState.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","27;47;48;87;88;92;93;94;95;98;99;101;102;104;105"
"./core/src/com/google/inject/internal/InheritingState.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152"
"./core/src/com/google/inject/internal/ConstructionProxy.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/internal/ConstructionProxy.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/internal/ConstructionProxy.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","25;54;55"
"./core/src/com/google/inject/internal/ConstructionProxy.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57"
"./core/src/com/google/inject/internal/Initializables.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/internal/TypeConverterBindingProcessor.java","31d8fbf9934778160de52837ef311f0d26efbbf8","2013-12-09 19:26:19","Sam Berlin","Fix issue 723 -- minor optimizations to TypeConverterBindingProcessor. Description in the bug describes this best: TypeConverterBindingProcessor has two responsibilities: 1) prepare built-in type converters for primitives, enums, classes, etc. and 2) process TypeConverter bindings and register them with the containing injector.","44;45;46;47;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;68;69;79;80;81;103;104;105;108;109;110;128;129;135;136;137;138;139;142;143;144;145;146;147;157;158;159"
"./core/src/com/google/inject/internal/TypeConverterBindingProcessor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;27"
"./core/src/com/google/inject/internal/TypeConverterBindingProcessor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;114;115;172;173;174;175;176;177;178;179;180;181;182;183"
"./core/src/com/google/inject/internal/TypeConverterBindingProcessor.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","164;165;169;170;171;172"
"./core/src/com/google/inject/internal/TypeConverterBindingProcessor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172"
"./core/src/com/google/inject/internal/FactoryProxy.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;22;63;64"
"./core/src/com/google/inject/internal/FactoryProxy.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","54;55;57;58;59"
"./core/src/com/google/inject/internal/FactoryProxy.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","28;29"
"./core/src/com/google/inject/internal/FactoryProxy.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63"
"./core/src/com/google/inject/internal/PrivateElementsImpl.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","33;68;69;70"
"./core/src/com/google/inject/internal/PrivateElementsImpl.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","33;69;70;71"
"./core/src/com/google/inject/internal/PrivateElementsImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;32;33;34;35;36;37;38;42"
"./core/src/com/google/inject/internal/PrivateElementsImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;133;134"
"./core/src/com/google/inject/internal/PrivateElementsImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138"
"./core/src/com/google/inject/internal/UniqueAnnotations.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;25"
"./core/src/com/google/inject/internal/UniqueAnnotations.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./core/src/com/google/inject/internal/ExposedBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25;30"
"./core/src/com/google/inject/internal/ExposedBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25;53;54"
"./core/src/com/google/inject/internal/ExposedBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","33;40;41;46;47;53;54;70;71;72;73;107;108"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;21;92;93;94;95;96;97;98;99"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25;26;96;97"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","fc46e1a98e70d22e5674a4aa42ede2fdede6a25a","2010-12-15 05:38:37","limpbizkit@gmail.com","Fix warnings in core.","56;59;60;61"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","6d8ab0b649afffc5ae35eb832bfbaa3d95cc6c87","2010-11-03 02:23:23","sberlin","never call hashcode on the underlying binding instances.  continue to call equals as lazily as possible.","117;118"
"./core/src/com/google/inject/internal/ProviderInstanceBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119"
"./core/src/com/google/inject/internal/ExposureBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;24"
"./core/src/com/google/inject/internal/ExposureBuilder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23"
"./core/src/com/google/inject/internal/ExposureBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./core/src/com/google/inject/internal/WeakKeySet.java","628ec00157c3ebcee8eb01537fed11663a45129b","2014-05-03 04:40:36","Sam Berlin","Make WeakKeySet less susceptible to programming errors by making the backingMap key a concrete type. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65307015","44;45;46;47;48;49;50;51;76;77;81;82;92;93;94;95;102;103;104;105;108;109;115;116;122;123;128;129;133;134;135;136;137;138;139;140;141;142;143;145;146;149;150;151;152;158;159;155;156;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201"
"./core/src/com/google/inject/internal/WeakKeySet.java","f5349cd25c1338473c3cc11f18f389fef3882753","2014-05-03 04:38:26","Sam Berlin","Use the correct key to check for blacklisting of multibound elements. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64831090","81;127;128;133;134"
"./core/src/com/google/inject/internal/WeakKeySet.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","19;20;21;22;23;24;25;26;28;33;40;41;45;46;47;48;49;50;51;52;53;54;55;56;59;60;61;62;63;64;65;66;67;68;69;70;71;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;110;111;107;108;109;110;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;128;132;133;134;135;136;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184"
"./core/src/com/google/inject/internal/WeakKeySet.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","19;20;21;22;23;24;25;26;28;33;40;41;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;82;83;84;85;86;87;88;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;110;111;58;59;60;61;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;79;83;84;85;86;87;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135"
"./core/src/com/google/inject/internal/WeakKeySet.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","19;20;21;22;23;24;25;26;28;33;40;41;45;46;47;48;49;50;51;52;53;54;55;56;59;60;61;62;63;64;65;66;67;68;69;70;71;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;110;111;107;108;109;110;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;128;132;133;134;135;136;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184"
"./core/src/com/google/inject/internal/WeakKeySet.java","4ab2a909972c14715e3adcbe9e9acd2c1c403935","2014-04-01 22:04:07","Christian Edward Gruber","Memoize Key#toString() to reduce allocations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63557612","34;35;36;37;38;39"
"./core/src/com/google/inject/internal/WeakKeySet.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22"
"./core/src/com/google/inject/internal/WeakKeySet.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/src/com/google/inject/internal/WeakKeySet.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","21;22;25;41;42;48;49;50;51;52;53;54;55;56;57;58;59;60;67;68"
"./core/src/com/google/inject/internal/WeakKeySet.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","20;21;22;23;24;38;39;41;42;44;45;47;48;51;52;55;56;57;58;59;60"
"./core/src/com/google/inject/internal/WeakKeySet.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./core/src/com/google/inject/internal/State.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","108;109;168;169;171;172"
"./core/src/com/google/inject/internal/State.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","108;109;168;169;171;172"
"./core/src/com/google/inject/internal/State.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","108;109;168;169;171;172"
"./core/src/com/google/inject/internal/State.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","27;61;62;66;67;138;139;140;142;143"
"./core/src/com/google/inject/internal/State.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;26;27;28;32"
"./core/src/com/google/inject/internal/State.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28"
"./core/src/com/google/inject/internal/State.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","26;98;99;100;101;102;103;104;105;160;161;162;163"
"./core/src/com/google/inject/internal/State.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","31;104;105;165;166"
"./core/src/com/google/inject/internal/State.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","96;97;104;105;106;107;155;156;163;164;165"
"./core/src/com/google/inject/internal/State.java","9c28d5b5242600f2d64be3bca5fee79fbc084753","2010-11-19 02:39:46","sberlin","revert State & InheritingState back to using Iterable & Set.","74;75;76;77;134;135"
"./core/src/com/google/inject/internal/State.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","26;65;66;70;71;76;77;78;79;127;128;131;132;136;137"
"./core/src/com/google/inject/internal/State.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168"
"./core/src/com/google/inject/internal/InstanceBindingImpl.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;21;89;90;91;92;93;94;95;96"
"./core/src/com/google/inject/internal/InstanceBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;25;32"
"./core/src/com/google/inject/internal/InstanceBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25;26;91;92"
"./core/src/com/google/inject/internal/InstanceBindingImpl.java","6d8ab0b649afffc5ae35eb832bfbaa3d95cc6c87","2010-11-03 02:23:23","sberlin","never call hashcode on the underlying binding instances.  continue to call equals as lazily as possible.","113;114"
"./core/src/com/google/inject/internal/InstanceBindingImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115"
"./core/src/com/google/inject/internal/UntargettedBindingProcessor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/src/com/google/inject/internal/UntargettedBindingProcessor.java","07170cc3f59f08954c97e19f2d3cf165d3a8601a","2011-03-11 03:02:39","sberlin","remove phases from BindingProcessor, refactor so that two different classes do the two different bits, with an abstract superclass managing the shared pieces.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./core/src/com/google/inject/internal/ContextualCallable.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./core/src/com/google/inject/internal/RehashableKeys.java","4ab2a909972c14715e3adcbe9e9acd2c1c403935","2014-04-01 22:04:07","Christian Edward Gruber","Memoize Key#toString() to reduce allocations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63557612","17;18;19;20;28;29"
"./core/src/com/google/inject/internal/RehashableKeys.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/src/com/google/inject/internal/ErrorHandler.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","21;33;34;37;38"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","33;40;41;42;48;49;50"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","36;37;38;39;40;46;48;49;50;51;52;53;54"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","19;35;36;38;39"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","19;36;37;38;39;40"
"./core/src/com/google/inject/internal/InternalFactoryToInitializableAdapter.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./core/src/com/google/inject/internal/ConstantFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;39;40"
"./core/src/com/google/inject/internal/ConstantFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./core/src/com/google/inject/internal/InternalFactory.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./core/src/com/google/inject/internal/BindingBuilder.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","100;101;102;103"
"./core/src/com/google/inject/internal/BindingBuilder.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","44;45;160;170;171;172;173"
"./core/src/com/google/inject/internal/BindingBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;29;30;34"
"./core/src/com/google/inject/internal/BindingBuilder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","26;27;28;29"
"./core/src/com/google/inject/internal/BindingBuilder.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178"
"./core/src/com/google/inject/Singleton.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23"
"./core/src/com/google/inject/Singleton.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./core/src/com/google/inject/PrivateModule.java","be1bbda4ec75f1dd0da42698722386540d36f453","2013-12-06 22:06:12","Sam Berlin","Fix issue 748 -- add a protected method in PrivateModule for binding provision listeners.  Patch provided by Stuart McCulloch, thanks! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57764090","27;297;298;299;300;301;302;303;304"
"./core/src/com/google/inject/PrivateModule.java","f74ee672186bffc687b2accb911344a7021e7ecf","2011-10-18 20:43:18","Sam Berlin","Better errors when using binder(), etc. outside of configure().","113;114;122;123;131;132;140;148;149;156;157;164;165;172;173;180;181;188;189;196;197;204;205;212;213;220;221;228;229;228;229;236;237;244;245;252;253;260;261;265;266;273;274;281;282;289;290;294;295"
"./core/src/com/google/inject/PrivateModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;30"
"./core/src/com/google/inject/PrivateModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24"
"./core/src/com/google/inject/PrivateModule.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293"
"./core/src/com/google/inject/name/Names.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/src/com/google/inject/name/Names.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./core/src/com/google/inject/name/package-info.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./core/src/com/google/inject/name/NamedImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/src/com/google/inject/name/NamedImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/src/com/google/inject/name/NamedImpl.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58"
"./core/src/com/google/inject/name/Named.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;25"
"./core/src/com/google/inject/name/Named.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","8743a0bb0fb49f30117c846880a7df2e7b36657e","2013-09-21 00:30:27","Christian Edward Gruber","Convert from MapMaker to CacheBuilder.  Change mostly from Stewart McCulloch mcculls@gmail.com modulo internal build issues, a few tweaks and dealing with some test flakage in a functional test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=52590552","41;251;254;255;259;260;261;262;263;264;265;266;267;268;269;270;274;275"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;28;29;30;31;32;33;41;42;43"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","87;88"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","87;88"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","1c6ff880b9a83a833c6fc5fb4fc0e3a15bfb1f80","2010-11-18 03:59:56","sberlin","fix issue 508 -- consider method return type when deciding whether to bridge.  patch contributed by stuart.","29;59;60;61;62;63;64;65;66;67;68;69;95;96;97;98;101;102;156;159;160;172;173;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","a102c17638ec586de3d6930c8ef794c751d157d6","2010-11-09 05:35:13","sberlin","make sure $$EnhancerByGuice$$ & $$FastClassByGuice$$ stay named that way and don't become $$$EnhancerByGuice$$ & $$$FastClassByGuice$$ after jarjar renames the cglib classes.","68;69;70;71;72;73;74;75;76"
"./core/test/com/googlecode/guice/BytecodeGenTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262"
"./core/test/com/googlecode/guice/OSGiContainerTest.java","3236b100a95b739577dfcd117c24615370a1d0af","2014-02-13 18:37:24","Christian Edward Gruber","Replace guava 11 with 16 and extract Guava as a separate dependency.","61;75;91;92;93;94;95;96;155"
"./core/test/com/googlecode/guice/OSGiContainerTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;27;28;29;30;30;31;32;33;34;35;36;37;39;40"
"./core/test/com/googlecode/guice/OSGiContainerTest.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","56;58;69;71;76;81;89;90;91;92;93;142;144"
"./core/test/com/googlecode/guice/OSGiContainerTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141"
"./core/test/com/googlecode/guice/Jsr330Test.java","013039198244a5cd106de0a6e20e66839117ef49","2013-08-09 18:10:15","Christian Edward Gruber","Doing a cleanup before we can make having @javax.inject.Inject on an abstract method a compile error. I am suppressing the error for the test case that intentionally tests this error. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50571932","451;452;453;454"
"./core/test/com/googlecode/guice/Jsr330Test.java","4352fa034ab6dd0c7ce117a07620426ddb00a50d","2013-08-09 18:09:53","Christian Edward Gruber","Added suppression to @javax.inject.Inject on a final field test case so we can make it a compiler error ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50571127","445;446;447;448"
"./core/test/com/googlecode/guice/Jsr330Test.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23;37;38;41;44;50"
"./core/test/com/googlecode/guice/Jsr330Test.java","16f8b0fdf6f1993f6d5d714d86fd455065301474","2010-12-09 14:18:42","sberlin","fix issue 578, Providers.guicify loses injection points from the delegate.","21;22;32;33;38;39;40;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330"
"./core/test/com/googlecode/guice/Jsr330Test.java","a523ea5e25e18b348097f587a7f150b987f440b3","2010-12-09 03:00:02","sberlin","rm jsr330, move the one method into Providers.","30;31;32;261;262;267;268"
"./core/test/com/googlecode/guice/Jsr330Test.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406"
"./core/test/com/googlecode/guice/bundle/OSGiTestActivator.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;25;26;27;28;29;28;29;30;31;32;33;34;35;36"
"./core/test/com/googlecode/guice/bundle/OSGiTestActivator.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","25;26;470;471;472;473"
"./core/test/com/googlecode/guice/bundle/OSGiTestActivator.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513"
"./core/test/com/googlecode/guice/GuiceTck.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;25;26;39;40;41;42"
"./core/test/com/googlecode/guice/GuiceTck.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/test/com/googlecode/guice/PackageVisibilityTestModule.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21"
"./core/test/com/google/inject/util/TypesTest.java","ee9a8f34f061cd15c091943903fdf8c6e173523a","2011-11-09 23:44:24","Sam Berlin","Fix TypesTest to use an actual parameterized array.  Necessary because JDK7 got a little smarter in its getActualTypeArguments method where it returns a Class if the array type isn't generic, and GenericArrayType only if it was actually generic.","49;50;57;58;61;63;65;70;71;74;76;159;160;161;162;163;164;165;166;171;172;175;176;177;178;182;183"
"./core/test/com/google/inject/util/TypesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","23;24;27;28;29;30;31;32;33;40;41"
"./core/test/com/google/inject/util/TypesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211"
"./core/test/com/google/inject/util/NoopOverrideTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32"
"./core/test/com/google/inject/util/ProvidersTest.java","4754a22f265ad638d5484d12219515bd663272d0","2014-05-03 04:40:05","Sam Berlin","Add equals/hashCode to Providers.guicify(...) results. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65072672","19;25;26;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109"
"./core/test/com/google/inject/util/ProvidersTest.java","14e2703cd15b0ac745a0df80d25800692d8c727e","2014-05-03 04:39:35","Sam Berlin","Implement hashCode and equals on type returned by Providers.of(...). There doesn't seem to be any reason *not* to provide these methods, and it means downstream code that does","19;42;43;44;45;46;47;48;49;50;51;52"
"./core/test/com/google/inject/util/ProvidersTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/test/com/google/inject/util/ProvidersTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/test/com/google/inject/util/OverrideModuleTest.java","ebe9f053ab2431f8f22f6d892cffadef4b10479c","2013-12-06 22:08:25","Sam Berlin","Re-committed the rolled back CL, after fixing internal projects.","40;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680"
"./core/test/com/google/inject/util/OverrideModuleTest.java","a4c16e8b45261e23e1c35d5fdce9b57357b16d1f","2013-12-06 22:06:40","Sam Berlin","Rolled back commit -- broke some internal projects.","40;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679"
"./core/test/com/google/inject/util/OverrideModuleTest.java","9b268e4467753f31eb6dfeb4001e76e32b01f5a3","2013-12-06 22:04:48","Sam Berlin","Pass the correct stage to Modules.override, so currentStage() works. Fixes issue 784 -- patch thanks to Tavian Barnes. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57755697","40;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680"
"./core/test/com/google/inject/util/OverrideModuleTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661"
"./core/test/com/google/inject/GenericInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;24;30"
"./core/test/com/google/inject/GenericInjectionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22"
"./core/test/com/google/inject/GenericInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185"
"./core/test/com/google/inject/ModuleTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/test/com/google/inject/MembersInjectorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;23;24;28;29"
"./core/test/com/google/inject/MembersInjectorTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284"
"./core/test/com/google/inject/TypeConversionTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","21;182;183;273;274;275;281;282;284;285;291;292;294;295;337;338;343;344;363;364;369;370;434;435;440;441;447;448;465;466"
"./core/test/com/google/inject/TypeConversionTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","19;77;78;93;94;124;125;161;162;163;164;165;166;167;168;169;170;171;174;175;177;178;183;184;185;186;187;188;189;190;191;192;195;196;216;217;237;238;254;255;274;275;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;323;324;326;327;328;329;330;331;332;334;335;339;340;341;342;343;344;345;347;348;349;350;351;352;353;357;358;359;360;361;363;364;366;367;369;371;372;376;377;378;379;380;381;382;384;385;386;387;389;390;391;387;388;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;416;417;419;420;421;422;423;424;425;426;427;428;429;430;431;433;434;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;480;481"
"./core/test/com/google/inject/TypeConversionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;27;28;29;30;34;35;36"
"./core/test/com/google/inject/TypeConversionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./core/test/com/google/inject/TypeConversionTest.java","9cdfe3a047011b6f78d84b189602d238bac2945a","2011-03-02 13:53:17","sberlin","issue 610 - let requireExplicitBindings still allow TypeConverters to create ConvertedConstantBindings.","118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150"
"./core/test/com/google/inject/TypeConversionTest.java","b2f1760648f0231cec447d837ba4651d75bbf315","2010-11-19 02:33:32","sberlin","issue 436 -- add Injector.getTypeConverters, and expand ConvertedConstantBinding to expose the TypeConverter for it.  patch graciously provided by Stuart, thanks!","22;24;214;215;216;217;218;219;220;221"
"./core/test/com/google/inject/TypeConversionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374"
"./core/test/com/google/inject/ParentInjectorTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;48;49;50;51"
"./core/test/com/google/inject/ParentInjectorTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","119;120;141;142;149;150;179;180;221;222;242;243;270;271;279;280;294;295;301;302;320;321"
"./core/test/com/google/inject/ParentInjectorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;28;29;30;31;33;36"
"./core/test/com/google/inject/ParentInjectorTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./core/test/com/google/inject/ParentInjectorTest.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","20;58;59;60;61;62;63"
"./core/test/com/google/inject/ParentInjectorTest.java","b281953cbb22a77f858ca44d057c9448e3d49a28","2011-02-21 21:09:26","sberlin","test for issue 608.","21;61;62;63;64;65;66;67;68;69;70;71;72"
"./core/test/com/google/inject/ParentInjectorTest.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","55;56;57;58"
"./core/test/com/google/inject/ParentInjectorTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310"
"./core/test/com/google/inject/ScopesTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","21;205;206;282;283;304;305;333;334;337;338"
"./core/test/com/google/inject/ScopesTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","19;50;51;126;127;139;140;195;196;249;250;263;264;265;266;267;268;269;270;271;272;273;276;277;278;279;280;284;285;286;287;288;289;293;294;295;296;297;298;299;300;301;302;303;306;307;308;309;310;314;315;316;317;318;322;323;324;325;326;327;328;329;330;331;332;333;335;336;337;338;341;342;343;344;345;346;350;351;352;353;355;356;357;363;364;474;475;511;512;520;521;522;566;567;574;575;576;614;615;622;623;624;666;667;673;674;675"
"./core/test/com/google/inject/ScopesTest.java","33736ecd7a00d7fa3292bee6c1329b8edee670cc","2013-09-18 17:59:00","Christian Edward Gruber","Because error-prone treats more than one scope annotation on a class as a compile-time error, existing builds that upgrade to error prone will fail.  To support that, given that these are tests of the run-time version of the failure, add a supporession to the usages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51282197 MOE_MIGRATED_REVID=51282207","416;417;418;419"
"./core/test/com/google/inject/ScopesTest.java","66094fb9923bb4d1cf109be8915bac4679083169","2012-01-13 23:21:27","Sam Berlin","Add isEagerSingleton.","364;365;366;367;368;369;374;375;376;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683"
"./core/test/com/google/inject/ScopesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;26;31;32;33;37;44"
"./core/test/com/google/inject/ScopesTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/test/com/google/inject/ScopesTest.java","09ab5f9e6a1d81bb6d4d196b009492f959ca5ceb","2010-10-25 00:41:10","sberlin","issue 477 - fix Scopes.isSingleton to navigate through exposed private elements.","26;463;474;475;476;477;478;479;480;499;510;519;528;529;530;531;532;533;534;550;558;567;568;569;570;571;572"
"./core/test/com/google/inject/ScopesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577"
"./core/test/com/google/inject/CircularDependencyTest.java","05bf8e59221197d8e1b8b04bace4ff5cc34e7336","2011-09-27 15:37:30","guice.mirrorbot@gmail.com","Add Scopes.isCircularProxy, for use by Scope implementations.  The basic problem is that somewhere along the line, Guice is breaking the type-safety of <T> in the scope(Key<T>, Provider<T>) method.  This happens when <T> is involved in a circular dependency, and the ConstructionContext creates a circular proxy for a given 'expectedType' of <T> (the type in the parameter where it's being injected).  Expected type is a superclass or superinterface of <T>, not a subclass or subinterface, so if a Scope caches the result of Key<T> -> Provider<T>.get(), and then tries to reuse it, it's possible that we return something that isn't compatible with <T>.  This results in either a ClassCastException (if cglib is involved) or IllegalArgumentException (java reflection) when trying to construct the object, because the parameters don't match the arguments.","20;21;22;23;27;28;29;32;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597"
"./core/test/com/google/inject/CircularDependencyTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;25;26;27"
"./core/test/com/google/inject/CircularDependencyTest.java","d5737a60194ed44bfd8ae7948f9ca7806785d2dd","2011-05-02 18:03:35","sberlin","fix @ProvidedBy circular dependencies.","91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;231;232;233;234;327;328;329;330"
"./core/test/com/google/inject/CircularDependencyTest.java","c94f4506c70ea41068ed9c5a00ddf6711eb7357f","2011-05-02 13:30:37","sberlin","assert that ProviderInternalFactory doesn't think circular dependencies exist when the providers are in different PrivateModules, temporarily remove check for @ProvidedBy due to other things that need fixing first.","48;49;59;60;64;65;66;67;68;69;70;71;72;73;74;75;76;77;83;84;86;87;88;89;90;91;92;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;152;184;185;186;187;188;241;242;243;244;339;340;341;342;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516"
"./core/test/com/google/inject/CircularDependencyTest.java","425d099754a30565152d166d13ec1e951ff19410","2011-05-02 00:28:59","sberlin","fix provider circular dependency detection to use the Key it is creating, not the Key it is fulfulling, to catch errors sooner.","19;20;21;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441"
"./core/test/com/google/inject/CircularDependencyTest.java","e6ce1886f5f8f700cea00bafefd093ccbbe8addf","2011-04-30 15:38:05","sberlin","fix issue 626 -- properly handle circular proxies between providers (either failing or proxying), prevents StackOverflowErrors.","24;28;29;30;31;32;33;34;35;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;67;68;69;70;71;72;73;76;77;78;79;80;81;84;85;86;88;93;94;95;100;101;102;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;131;135;136;137;142;143;144;150;151;152;153;154;155;156;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;211;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;349;351;352;353;354;355;356;358;359;360;361;362;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;408"
"./core/test/com/google/inject/CircularDependencyTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","109;110;111;112;114;118;119"
"./core/test/com/google/inject/CircularDependencyTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231"
"./core/test/com/google/inject/ProvisionExceptionsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;27;28;29;30"
"./core/test/com/google/inject/ProvisionExceptionsTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/ProvisionExceptionsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178"
"./core/test/com/google/inject/spi/ModuleSourceTest.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125"
"./core/test/com/google/inject/spi/ElementsTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","1293;1294"
"./core/test/com/google/inject/spi/ElementsTest.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","374;375;376;377;378;379;380;381;382;383;384;385;386;387;392;393;407;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458"
"./core/test/com/google/inject/spi/ElementsTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","21;22;91;92;93;94;95;113;114;602;603;919;920;921;922;942;943;946;947;949;950;952;953;982;983;1009;1010;1036;1037;1064;1065;1091;1092;1220;1236;1237;1238;1239;1242;1244;1245"
"./core/test/com/google/inject/spi/ElementsTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","23;79;80"
"./core/test/com/google/inject/spi/ElementsTest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","23;1232;1233;1234;1235;1236;1237"
"./core/test/com/google/inject/spi/ElementsTest.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","942;943;947;948"
"./core/test/com/google/inject/spi/ElementsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;23;24;25;26;43;44;45;46;52;53;54;58;68"
"./core/test/com/google/inject/spi/ElementsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","38;39;40;41;42;43"
"./core/test/com/google/inject/spi/ElementsTest.java","ede7731ed9764c081460c19c9fec3b1159d43264","2010-10-25 02:52:08","sberlin","issue 496 -- ConstantBindingBuilder was missing to(byte), forgot to commit test.","192;273;274;275;276;277;278;279;280;281"
"./core/test/com/google/inject/spi/ElementsTest.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","1130;1132"
"./core/test/com/google/inject/spi/ElementsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;870;871;872;873;874;875;876;877;878;879;880;881;882;883;884;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910;911;912;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939;940;941;942;943;944;945;946;947;948;949;950;951;952;953;954;955;956;957;958;959;960;961;962;963;964;965;966;967;968;969;970;971;972;973;974;975;976;977;978;979;980;981;982;983;984;985;986;987;988;989;990;991;992;993;994;995;996;997;998;999;1000;1001;1002;1003;1004;1005;1006;1007;1008;1009;1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;1030;1031;1032;1033;1034;1035;1036;1037;1038;1039;1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;1120;1121;1122;1123;1124;1125;1126;1127;1128;1129;1130;1131;1132;1133;1134;1135;1136;1137;1138;1139;1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;1160;1161;1162;1163;1164;1165;1166;1167;1168;1169;1170;1171;1172;1173;1174;1175;1176;1177;1178;1179;1180;1181;1182;1183;1184;1185;1186;1187;1188;1189;1190;1191;1192;1193;1194;1195;1196;1197;1198;1199;1200;1201;1202;1203;1204;1205;1206;1207;1208;1209;1210;1211;1212;1213;1214;1215;1216;1217;1218;1219;1220;1221;1222;1223;1224;1225;1226;1227;1228;1229;1230;1231;1232;1233;1234;1235;1236;1237;1238;1239;1240;1241;1242;1243;1244;1245;1246;1247;1248;1249;1250;1251;1252;1253;1254;1255;1256;1257;1258;1259;1260;1261;1262"
"./core/test/com/google/inject/spi/FailingBindingScopingVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;24;25"
"./core/test/com/google/inject/spi/FailingBindingScopingVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/test/com/google/inject/spi/FailingElementVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","76be88e8140f77a25824f5deb67bb13b8e5dabc6","2014-07-01 20:56:13","Sam Berlin","Detect overrides of @Provides method and add an error for each one.","48;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;638;639;640;641;643;644;645;646;647;648;649;650;651;654;655;656;657;658;659;660;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;693;694;695;696;697;698;699;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;745;746;747;748;749;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;813;814;815;816;817;818;821;822;823;824;825;826;827;828;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","37;360;361"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","53a5936f55056dc695c35e6e16233c5b49780ded","2014-05-23 22:19:12","Sam Berlin","Ignore synthetic bridge methods during provider method lookup. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=67854418","646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","409e0f578b620c38f6c8626dee78783219d2956e","2014-05-10 14:34:16","Sam Berlin","Try to use cglibs FastClass to invoke @Provides methods, it's faster!","36;37;49;361;362;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","29ce12be89584ca1ad671408ecbe0f6c343f9382","2014-03-10 16:52:01","Sam Berlin","Add an SPI for @Provides methods (using the extensions SPI) so that users can do more analysis (with the enclosing instance, method, etc..).","26;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","33;356;357;360"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","189;190;232;233;249;250;269;270;287;288;314;315;365;366"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;23;24;25;36;37;43;44;45;48;55;56"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","32;33;34;35"
"./core/test/com/google/inject/spi/ProviderMethodsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404"
"./core/test/com/google/inject/spi/ElementApplyToTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","26"
"./core/test/com/google/inject/spi/ElementApplyToTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./core/test/com/google/inject/spi/BindingTargetVisitorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/test/com/google/inject/spi/BindingTargetVisitorTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36"
"./core/test/com/google/inject/spi/ToolStageInjectorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;7;8;9;14;15;16;17;18;19;20"
"./core/test/com/google/inject/spi/ToolStageInjectorTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/spi/ToolStageInjectorTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165"
"./core/test/com/google/inject/spi/InjectionPointTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","36;43;46;75;76;77;78;99;100;123;124;136;137"
"./core/test/com/google/inject/spi/InjectionPointTest.java","4daa205dc4fe1d339f91155dde65f3941cbd144c","2014-05-03 04:44:06","Sam Berlin","Ignore synthetic/bridge methods when determining if a method should be injected.  This broke injections for different reasons before & after java8, but the fix is the same for both.","30;43;46;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;314;315;316;317;318;319;320;321;322;323;324;343;344;345;346;347;348;349;350;351;355;356;357;358;360;361;362;363;364;365;366;367;368;369;370;371;372;373"
"./core/test/com/google/inject/spi/InjectionPointTest.java","404ffc3f56b224236653a4491efe1dcde1064bb7","2011-09-09 21:21:12","guice.mirrorbot@gmail.com","Changing callers of deprecated methods ImmutableSet.of(E[]) and ImmutableSortedSet.of(E[]) to use .copyOf() (inlining the deprecated methods).","279;280"
"./core/test/com/google/inject/spi/InjectionPointTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;24;25;26;32;33;34;35;37;38;39;40;41;42;46;47;48"
"./core/test/com/google/inject/spi/InjectionPointTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","27;28;29;30;31;32"
"./core/test/com/google/inject/spi/InjectionPointTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309"
"./core/test/com/google/inject/spi/HasDependenciesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27;28;29;30;33;34"
"./core/test/com/google/inject/spi/HasDependenciesTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26;27;28"
"./core/test/com/google/inject/spi/HasDependenciesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98"
"./core/test/com/google/inject/spi/FailingTargetVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./core/test/com/google/inject/spi/FailingTargetVisitor.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26"
"./core/test/com/google/inject/spi/ModuleRewriterTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;29;31;32;35"
"./core/test/com/google/inject/spi/ModuleRewriterTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29"
"./core/test/com/google/inject/spi/ModuleRewriterTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","414;415"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","121;122;362;363"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;21;412;413;416;417;418;419;422"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","82;83;114;115;140;141;169;170;201;202;228;229;251;252;273;274;385;386;397;398;409;410;411;412;413;414;415;416"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;23;24;35;36;38;39;40;41;48;49;50"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","32;33;34;35"
"./core/test/com/google/inject/spi/SpiBindingsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448"
"./core/test/com/google/inject/spi/InjectorSpiTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;14;15"
"./core/test/com/google/inject/spi/InjectorSpiTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/spi/InjectorSpiTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74"
"./core/test/com/google/inject/spi/ElementSourceTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","3;29;30;31;32;33;43;44;45;51;53;60;62;63;64;65;66;67;68;69;70;71;72;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;103;125"
"./core/test/com/google/inject/spi/ElementSourceTest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","28;29;30;31;32;47;48;49;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;74;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201"
"./core/test/com/google/inject/spi/ElementSourceTest.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159"
"./core/test/com/google/inject/AllTests.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","23;110"
"./core/test/com/google/inject/AllTests.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","23;109"
"./core/test/com/google/inject/AllTests.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","23;110"
"./core/test/com/google/inject/AllTests.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","40"
"./core/test/com/google/inject/AllTests.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","21;98"
"./core/test/com/google/inject/AllTests.java","605bd086d3ecc4290ddfa4cf89fd840d22d1894c","2013-08-09 18:04:00","Christian Edward Gruber","Updates the internals of an Element's source to keep track of the Modules that installed it, as well as the complete stack trace leading to the binding. The data is not yet exposed in Element.getSource(), but will be exposed in a future CL.","28;34;130;131"
"./core/test/com/google/inject/AllTests.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","39;96"
"./core/test/com/google/inject/AllTests.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;23;39;41;42;43;47;48"
"./core/test/com/google/inject/AllTests.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;24;102;103;105;141"
"./core/test/com/google/inject/AllTests.java","86142556d360048671dc129f7b0c316f542473af","2011-06-25 05:05:23","sberlin","refactor removeSuppressedTests out of AllTests, to remove the circular dependency between it & StrictContainerTestSuite.","44;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172"
"./core/test/com/google/inject/AllTests.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","93"
"./core/test/com/google/inject/AllTests.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","25;140;141"
"./core/test/com/google/inject/AllTests.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174"
"./core/test/com/google/inject/DuplicateBindingsTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","19;20;88;89;90;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162"
"./core/test/com/google/inject/DuplicateBindingsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;24;26;27;28;29;30;39;40;41;42;43;44"
"./core/test/com/google/inject/DuplicateBindingsTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/DuplicateBindingsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/test/com/google/inject/DuplicateBindingsTest.java","7691f9ebdc39ea951f497b3950f87a4c18a3fd38","2010-12-16 02:34:54","sberlin","require ProviderMethod instance to be equal also, per jessewilson review.","83;84;85;86;87;88;89;90;91;92;93;94;204;205;206;207;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;429;431;432;433;434;435;436"
"./core/test/com/google/inject/DuplicateBindingsTest.java","1068a4a4187309f05a54c3900251ccd897625feb","2010-12-16 01:38:08","sberlin","allow duplicate @Provides methods to be deduplicated also.","24;69;79;80;81;82;191;192;193;194;195;197;198;366;367;368;369;397;398;399;400"
"./core/test/com/google/inject/DuplicateBindingsTest.java","6d8ab0b649afffc5ae35eb832bfbaa3d95cc6c87","2010-11-03 02:23:23","sberlin","never call hashcode on the underlying binding instances.  continue to call equals as lazily as possible.","23;24;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521"
"./core/test/com/google/inject/DuplicateBindingsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422"
"./core/test/com/google/inject/PrivateModuleTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","21;125;126;199;200;201;202;222;223;248;249;454;455"
"./core/test/com/google/inject/PrivateModuleTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","19;44;45;49;50;57;58;78;79;98;99;116;117;130;131;133;134;146;147;179;180;182;183;190;191;206;207;212;213;233;234;239;240;258;259;263;264;275;276;280;281;291;292;299;300;328;329;339;340;357;358;368;369;394;395;405;406;438;439;468;470;471;488;490;513;514;515;522;523;524;530;531;532;546;547;548"
"./core/test/com/google/inject/PrivateModuleTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;24;29;32;33;34;35"
"./core/test/com/google/inject/PrivateModuleTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26"
"./core/test/com/google/inject/PrivateModuleTest.java","cc17f1438ed7beb10c042ddbe60fb3d8a3265147","2011-02-27 00:02:03","sberlin","significantly improve error reporting for binding a key already bound in a child injector or private module.  include all sources in the error msg (since it can be in many sibling private modules or child injectors), including whether or not it as a JIT binding.","32;33;464;465;466;467;468;469;470;471;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;513;514;515;516;517;518;519;520;521;523;524;529;530;531;532;533;534;535;536;537;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560"
"./core/test/com/google/inject/PrivateModuleTest.java","45ca7f66156b947c7b9c45a71ad48be9a0bcda08","2011-02-20 00:05:28","sberlin","issue 345 - better error message for private modules.  show the source of a child binding instead of just saying its in a child injector.  also give a hint that you may have wanted to expose the binding.","20;21;22;23;24;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482"
"./core/test/com/google/inject/PrivateModuleTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449"
"./core/test/com/google/inject/TypeLiteralTest.java","de4cc320c98b800f81703b8a186e08c478fab74c","2011-09-09 21:20:09","guice.mirrorbot@gmail.com","Changing callers of deprecated method ImmutableList.of(E[]) to call ImmutableList.copyOf(E[]) instead (inlining the deprecated method.","159;160;174;175;190;191"
"./core/test/com/google/inject/TypeLiteralTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;24;25;26;31"
"./core/test/com/google/inject/TypeLiteralTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/test/com/google/inject/TypeLiteralTest.java","5d5941f9c5a882ac98a3312bd411bde00a1f425f","2010-11-25 02:06:49","sberlin","rm documentation that a TypeLiteral with wildcard character (such as List<? extends CharSequence>) doesn't work, add a test that asserts it does work.","64;66;69;72"
"./core/test/com/google/inject/TypeLiteralTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191"
"./core/test/com/google/inject/TypeLiteralInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;23;24;25;28;29"
"./core/test/com/google/inject/TypeLiteralInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108"
"./core/test/com/google/inject/RequestInjectionTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;132;133"
"./core/test/com/google/inject/RequestInjectionTest.java","6b7e7187bd074d3f2df9b04e17fa01e7592f295c","2011-10-16 22:36:01","guice.mirrorbot@gmail.com","Fix a very obscure bug where more than one InitializableReference of the same identity could result in an NPE during injector creation if the one that got ejected from the Map was requested for injection from another InitializableReference.","22;23;24;25;41;52;68;84;102;117;138;154;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233"
"./core/test/com/google/inject/RequestInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;25;26"
"./core/test/com/google/inject/RequestInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183"
"./core/test/com/google/inject/Asserts.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","95;96;97;98"
"./core/test/com/google/inject/Asserts.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;21;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87"
"./core/test/com/google/inject/Asserts.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","24;25;26;27;28;45;46;47;48;49;50;51;52;53;54;55;56;57;58"
"./core/test/com/google/inject/Asserts.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;24;25;32;33;34;35"
"./core/test/com/google/inject/Asserts.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112"
"./core/test/com/google/inject/BinderTestSuite.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","38;39;351;352;359;360"
"./core/test/com/google/inject/BinderTestSuite.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;24;25;26;29;30;32;34;35;36;37;38;39;40;42;47;48;49;54;55"
"./core/test/com/google/inject/BinderTestSuite.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./core/test/com/google/inject/BinderTestSuite.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766"
"./core/test/com/google/inject/matcher/MatcherTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","30;33;34;35;41;46"
"./core/test/com/google/inject/matcher/MatcherTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174"
"./core/test/com/google/inject/SuperclassTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./core/test/com/google/inject/ModulesTest.java","a9228269b4d6e7b74a6354f179babe723c00f387","2013-11-13 07:06:04","Christian Edward Gruber","Make named classes for anonymous Modules so they appear prettier (and useful) in error messages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=54796862","52;53;54;57;58;61;62;63;65;67;68;69;70;71;72"
"./core/test/com/google/inject/ModulesTest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","19;20;58;59;60;61;62;63;64;65;66;67"
"./core/test/com/google/inject/ModulesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;24;25"
"./core/test/com/google/inject/ModulesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./core/test/com/google/inject/EagerSingletonTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93"
"./core/test/com/google/inject/OptionalBindingTest.java","a5b2b1fc374c9d5945fa3d9b101b591dc88710ab","2014-04-10 23:17:11","Sam Berlin","Suppress compiler errors reported by an error-prone checker ([]) for tests.","258;259;260"
"./core/test/com/google/inject/OptionalBindingTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;24"
"./core/test/com/google/inject/OptionalBindingTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293"
"./core/test/com/google/inject/InjectorTest.java","ee443bce9731bb8da1eb60202f68de4c4c298698","2011-09-09 21:19:11","guice.mirrorbot@gmail.com","Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.","218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238"
"./core/test/com/google/inject/InjectorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;25;28;35;40"
"./core/test/com/google/inject/InjectorTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388"
"./core/test/com/google/inject/BindingTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","24;77;78;79;80"
"./core/test/com/google/inject/BindingTest.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","373;374;375"
"./core/test/com/google/inject/BindingTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;25;26;30;31;32;33;34;35;36;37;43;44;45;46;47"
"./core/test/com/google/inject/BindingTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/test/com/google/inject/BindingTest.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","36;39;280;303"
"./core/test/com/google/inject/BindingTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498"
"./core/test/com/google/inject/JitBindingsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;24;25"
"./core/test/com/google/inject/JitBindingsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24"
"./core/test/com/google/inject/JitBindingsTest.java","9cdfe3a047011b6f78d84b189602d238bac2945a","2011-03-02 13:53:17","sberlin","issue 610 - let requireExplicitBindings still allow TypeConverters to create ConvertedConstantBindings.","44;45;46;47;48;49;326;327;337;338;427;428;429;430;431;432;433;434;435;436;437;438;439;440;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603"
"./core/test/com/google/inject/JitBindingsTest.java","ea27c01951aec20a880d410c57d1e5e1204fcb84","2010-12-14 14:08:21","sberlin","review comments from jesse.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16"
"./core/test/com/google/inject/JitBindingsTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","4;5;6;14;15;29;30;33;36;37;43;44;48;49;52;57;58;64;65;69;70;73;76;77;83;84;88;89;92;97;98;104;105;109;110;113;116;117;123;124;128;129;132;137;138;144;145;150;151;154;158;159;148;149;152;155;156;161;162;167;168;169;170;171;172;173;179;180;183;187;188;196;197;198;199;200;201;202;211;212;215;219;220;227;228;231;234;235;237;238;242;243;246;249;250;252;253;257;258;261;264;265;267;268;272;273;274;275;276;277;279;280;284;285;286;287;290;293;294;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;347;340;345;349;350;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;374;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;410;411;413;414;418;419;422;428;429;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;456;457;458;459;461;465;466;467;470;471;472;473;475;480;481;482;494;495;496;500;501;507;508;514;515;516;520;521;522;523;525;526;527;534;535"
"./core/test/com/google/inject/JitBindingsTest.java","f712ffddfa3237a84bd457ebb999bfa0951cd422","2010-10-29 12:00:27","sberlin","make sure MembersInjector dependencies don't blow up on requireExplicitBindings.","326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344"
"./core/test/com/google/inject/JitBindingsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421"
"./core/test/com/google/inject/BindingAnnotationTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;61;62;63;91;92;93;110;111;112"
"./core/test/com/google/inject/BindingAnnotationTest.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/test/com/google/inject/BindingAnnotationTest.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","32;33;34;36;39;40;44;45;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;100;104;105;111;112;116;117;118;119;120;121;122;123;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145"
"./core/test/com/google/inject/BindingAnnotationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;23;26;27;28"
"./core/test/com/google/inject/BindingAnnotationTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91"
"./core/test/com/google/inject/LoggerInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","4;6;7;10;11"
"./core/test/com/google/inject/LoggerInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70"
"./core/test/com/google/inject/ErrorHandlingTest.java","33736ecd7a00d7fa3292bee6c1329b8edee670cc","2013-09-18 17:59:00","Christian Edward Gruber","Because error-prone treats more than one scope annotation on a class as a compile-time error, existing builds that upgrade to error prone will fail.  To support that, given that these are tests of the run-time version of the failure, add a supporession to the usages. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51282197 MOE_MIGRATED_REVID=51282207","103;104;105;106"
"./core/test/com/google/inject/ErrorHandlingTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;26"
"./core/test/com/google/inject/ErrorHandlingTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146"
"./core/test/com/google/inject/TypeLiteralTypeResolutionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;28;29;30;31;32;33;46"
"./core/test/com/google/inject/TypeLiteralTypeResolutionTest.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","318;319"
"./core/test/com/google/inject/TypeLiteralTypeResolutionTest.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","318;319"
"./core/test/com/google/inject/TypeLiteralTypeResolutionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./core/test/com/google/inject/TypeLiteralTypeResolutionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328"
"./core/test/com/google/inject/MethodInterceptionTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","221;222;231;232"
"./core/test/com/google/inject/MethodInterceptionTest.java","e91540ea9c03104069b90d40d5d1080dc84ba9d6","2013-12-11 23:41:21","Sam Berlin","Fixes issue 652.  Allow method interceptors to capture the method & call it later from a different context.  Patch by Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=58040591","37;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368"
"./core/test/com/google/inject/MethodInterceptionTest.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","316;317;318;319;320;321;322;323;324;325;326;327;328"
"./core/test/com/google/inject/MethodInterceptionTest.java","2823a381af4bde3c616c6542a6e2933d931ba76e","2012-02-27 02:24:52","Sam Berlin","Fix issue 643 using a slightly modified version of the patch provided by Stuart.","82;83;91;92;96;97;98;99;100;101;102;103;104;105;106"
"./core/test/com/google/inject/MethodInterceptionTest.java","88ee52dec9920c95e2f0ed3c43e625872c5d1fd4","2012-02-27 02:22:30","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","82;83;91;92;96;97;98;99;100;101;102;103;104;105;106"
"./core/test/com/google/inject/MethodInterceptionTest.java","1c9b92a5d8699e93df11c222566f797919db3f97","2012-01-21 17:55:00","Sam Berlin","Fix issue 643 using a slightly modified version of the patch provided by Stuart.","82;83;91;92;96;97;98;99;100;101;102;103;104;105;106"
"./core/test/com/google/inject/MethodInterceptionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27;29;30;31;32;33;34;40;41;42;43"
"./core/test/com/google/inject/MethodInterceptionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;23;24;25;26"
"./core/test/com/google/inject/MethodInterceptionTest.java","be2505a424c177c372f7c8a38afbc0cba5cf4c24","2011-04-21 18:17:15","sberlin","specify that interceptors are called in the order they are listed in bindInterceptor(Matcher, Matcher, Interceptor...).  add a test that guarantees it.","22;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301"
"./core/test/com/google/inject/MethodInterceptionTest.java","d4ec8b091b2210ec196922b8b103722a61157d46","2011-04-20 16:57:24","sberlin","update to asm-3.3.1, update to new cglib that fixes a bug with bridge methods, add test that verifies the fix works.  (previously it worked within Eclipse but not javac because eclipse's compiler wrote out bridge methods differently.)","22;32;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267"
"./core/test/com/google/inject/MethodInterceptionTest.java","1e5fc1daab8364f1d16614e9013135a115e66e2c","2011-02-28 17:49:54","sberlin","fix typo, make test not loop forever.","175;176"
"./core/test/com/google/inject/MethodInterceptionTest.java","6e4e4973a87dfbfbba0b3c03b299eacb9b8696bd","2011-02-28 15:08:01","sberlin","update stack trace pruning (for AOP-internal methods & generated methods) to include causes.","174;175;176;177;184;232;233"
"./core/test/com/google/inject/MethodInterceptionTest.java","82d0fdbec0cb93ff770dab55931029f4140db54e","2011-01-18 19:41:12","sberlin","rework method interception so that methods that aren't intercepted don't go through cglib, reducing the number of stack frames in most method calls.  this has a slight side effect that additional proxy classes are generated for a single class if (and only if) the intercepted methods change.  if the intercepted methods remain the same, then the proxy classes will continue to be shared (so things like assistedinject will not blow up the heap).","26;54;55;56;57;58;59;68;69;75;76;77;78;79;80;82;83;86;87;91;92;93;94;95;98;99;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;217;218;220;224;228"
"./core/test/com/google/inject/MethodInterceptionTest.java","e0f541287d1dcbdd5c52c471b357b6ac7d72d152","2011-01-15 07:06:25","limpbizkit@gmail.com","Remove AOP boilerplate from user visible stack traces.","40;41;46;47;49;50;54;55;61;62;75;76;128;129;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;188;189;190"
"./core/test/com/google/inject/MethodInterceptionTest.java","b02627d4f5706bf29788387e8d96a7a1bcc38f1f","2010-10-25 04:56:00","sberlin","issue 407 -- better error messaging for failed interception.  previously exploded with a ComputationException, now uses a ConfigurationException with a good msg.","21;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;166;167"
"./core/test/com/google/inject/MethodInterceptionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144"
"./core/test/com/google/inject/ProviderInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;23"
"./core/test/com/google/inject/ProviderInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185"
"./core/test/com/google/inject/SuiteUtils.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;25;26;27"
"./core/test/com/google/inject/SuiteUtils.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/SuiteUtils.java","86142556d360048671dc129f7b0c316f542473af","2011-06-25 05:05:23","sberlin","refactor removeSuppressedTests out of AllTests, to remove the circular dependency between it & StrictContainerTestSuite.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47"
"./core/test/com/google/inject/NullableInjectionPointTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","4;126;127"
"./core/test/com/google/inject/NullableInjectionPointTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","5;6;13;14"
"./core/test/com/google/inject/NullableInjectionPointTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","5;12;13;239;240;241;242;243"
"./core/test/com/google/inject/NullableInjectionPointTest.java","7f6067d38877588c51473029fdef1994b61a9a1d","2010-10-29 03:01:12","sberlin","Update test to make sure custom @Nullable annotations work, in addition to c.g.i.i.util.Nullable.","5;6;7;8;9;10;11;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;143;164;185;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247"
"./core/test/com/google/inject/NullableInjectionPointTest.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","4;5;6;7"
"./core/test/com/google/inject/NullableInjectionPointTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194"
"./core/test/com/google/inject/BindingOrderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;29"
"./core/test/com/google/inject/BindingOrderTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96"
"./core/test/com/google/inject/ProvisionExceptionTest.java","a5b2b1fc374c9d5945fa3d9b101b591dc88710ab","2014-04-10 23:17:11","Sam Berlin","Suppress compiler errors reported by an error-prone checker ([]) for tests.","298;299;300"
"./core/test/com/google/inject/ProvisionExceptionTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;98;99;100;141;142;143"
"./core/test/com/google/inject/ProvisionExceptionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;26;28;29;32;33;34;35"
"./core/test/com/google/inject/ProvisionExceptionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344"
"./core/test/com/google/inject/ProvisionListenerTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","590;591"
"./core/test/com/google/inject/ProvisionListenerTest.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","698;699;700;701;702;703;704;705;706;707;708;709;710"
"./core/test/com/google/inject/ProvisionListenerTest.java","be1bbda4ec75f1dd0da42698722386540d36f453","2013-12-06 22:06:12","Sam Berlin","Fix issue 748 -- add a protected method in PrivateModule for binding provision listeners.  Patch provided by Stuart McCulloch, thanks! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57764090","47"
"./core/test/com/google/inject/ProvisionListenerTest.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./core/test/com/google/inject/ProvisionListenerTest.java","2cc8ce904aff3d46a55cb6b886e975516a923524","2013-05-16 17:53:11","Christian Edward Gruber","Clear context during provision.  Fixes http://code.google.com/p/google-guice/issues/detail?id=743","40;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696"
"./core/test/com/google/inject/ProvisionListenerTest.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","24;31;33;38;251;252;260;261;262;263;264;348;349;350;387;388;389;390;391;392;393;394;395;398;399;400;401;402;403;404;487;488;490;491;517;518;519;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639"
"./core/test/com/google/inject/ProvisionListenerTest.java","d51292d5a4a788b1275eb9ad55cf612e68640bbf","2012-02-27 02:23:19","Sam Berlin","Change ProvisionListener to expose Binding instead of Key, and change bindListener to use a Matcher for Binding instead of Key.  This is a backwards incompatible change, but we haven't released yet, so it's worth doing.","25;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;371;372;374;375;425;426;430;431;432;433;434;435;436;437;438;451;452;552;553"
"./core/test/com/google/inject/ProvisionListenerTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;24;25;26;27;28;31;32;33;34;35"
"./core/test/com/google/inject/ProvisionListenerTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/ProvisionListenerTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;28;29;30;31"
"./core/test/com/google/inject/ProvisionListenerTest.java","ba75f3563a179ddd3de14cfed6ba663e9e298032","2011-06-12 21:54:43","sberlin","issue 631 -- expose dependency hierarchy in ProvisionListener.","24;33;319;320;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529"
"./core/test/com/google/inject/ProvisionListenerTest.java","132a5db7c643b8f367eb5f09024cf13ea37c9831","2011-06-05 18:32:05","sberlin","issue 78 - provision interception.  this only lets you listen to provisions (both before & after provisioning occurs), it does not let you change the return value of the provision.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353"
"./core/test/com/google/inject/SerializationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;28;29"
"./core/test/com/google/inject/SerializationTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61"
"./core/test/com/google/inject/KeyTest.java","b0aeeda0b5639a0553f0444e85926e4119cf16e0","2013-09-18 17:58:05","Christian Edward Gruber","Remove loophole for making non-canonical Keys. This makes the behaviour of Key.get(new TypeLiteral<T>() {}) and new Key<T>() {} the same. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=51109122","194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222"
"./core/test/com/google/inject/KeyTest.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248"
"./core/test/com/google/inject/KeyTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;27;28;29;33;40"
"./core/test/com/google/inject/KeyTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203"
"./core/test/com/google/inject/PerformanceComparison.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;25;32;33;34;35"
"./core/test/com/google/inject/PerformanceComparison.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296"
"./core/test/com/google/inject/TypeListenerTest.java","35023b810b1b769daa2ca191ddb4cfcea33f077f","2013-12-06 22:08:01","Sam Berlin","Fix issue 779 -- deduplicate listeners & interceptors.  Using a slightly modified patch from Tavian Barnes, thanks Tavian! ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798796","633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675"
"./core/test/com/google/inject/TypeListenerTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","21;198;199;204;205;220;221;232;233;299;300"
"./core/test/com/google/inject/TypeListenerTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","19;86;87;97;98;115;116;158;159;178;179;180;181;182;183;184;185;186;187;188;193;194;195;196;197;203;208;214;215;242;243;289;290;316;317;319;376;377;414;415;447;448;450;483;484;536;537;554;555;609;610"
"./core/test/com/google/inject/TypeListenerTest.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","599;600;601;613;614"
"./core/test/com/google/inject/TypeListenerTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;23;28;29;30;35;36;37;41"
"./core/test/com/google/inject/TypeListenerTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./core/test/com/google/inject/TypeListenerTest.java","b7a4174d866abba845221aab958d97d4c18e77b3","2011-02-20 00:51:27","sberlin","rm printStackTrace.","608"
"./core/test/com/google/inject/TypeListenerTest.java","159cd8647b9b9d662aaf8c1a21a8fe40a70e99b5","2011-02-20 00:50:36","sberlin","validate that issue 432 is not a problem anymore.","601;608;613;614;615"
"./core/test/com/google/inject/TypeListenerTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","26d0006317e4056343cbb490adcc055addb0c002","2014-07-01 20:55:03","Sam Berlin","Change the line number test to generate a class with javax.inject.Inject rather than c.g.inject.Inject. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=70023941","25;32;33"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","20;50;51;79;80;129;130"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;28;29;32;33"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","bd7a14b0b5830a06f48337a3f02af308300abefd","2011-02-24 14:49:01","sberlin","make sure tests can run in on dist code, and no_aop can still build.","28;29;30;31;50;51;52;53;54;78;79;80;81;82;83;87;88;89;90;91;92;93;95;96;98;99;101;102;104;105;106;107;108;109;110;140"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","c17c5a9b58d1d0ac0cf77dba0f5b5011a445c610","2011-02-14 01:01:01","sberlin","issue 574 - don't freak out on generated classes when trying to get line numbers.","24;26;28;29;30;31;82;83;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","ac4cdbe137274fd83a7e8e7100653f261618eb94","2010-10-21 22:05:58","mcculls","Issue 561: fix no_aop build by munging away all aop-related references","32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47"
"./core/test/com/google/inject/internal/util/LineNumbersTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62"
"./core/test/com/google/inject/internal/UniqueAnnotationsTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./core/test/com/google/inject/internal/RehashableKeysTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","79;80;81;82;83;84;88;89;95;96;97;98;99;100"
"./core/test/com/google/inject/internal/RehashableKeysTest.java","4ab2a909972c14715e3adcbe9e9acd2c1c403935","2014-04-01 22:04:07","Christian Edward Gruber","Memoize Key#toString() to reduce allocations. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63557612","72;81;87;95;127;128;129;130;131"
"./core/test/com/google/inject/internal/RehashableKeysTest.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132"
"./core/test/com/google/inject/internal/WeakKeySetTest.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578"
"./core/test/com/google/inject/internal/WeakKeySetTest.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578"
"./core/test/com/google/inject/internal/WeakKeySetTest.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578"
"./core/test/com/google/inject/internal/ProxyFactoryTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;26;28;29;30;31;32;33;38;39;40"
"./core/test/com/google/inject/internal/ProxyFactoryTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26"
"./core/test/com/google/inject/internal/ProxyFactoryTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206"
"./core/test/com/google/inject/internal/MoreTypesTest.java","978ed86a76b3c47e8247f6691586b994bcf13dbc","2013-05-16 14:49:41","Christian Edward Gruber","Fix a == vs .equals() bug in MoreTypes.","23;48;49;50;51;52"
"./core/test/com/google/inject/internal/MoreTypesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;22;25"
"./core/test/com/google/inject/internal/MoreTypesTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./core/test/com/google/inject/internal/MoreTypesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./core/test/com/google/inject/example/ClientServiceWithFactories.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91"
"./core/test/com/google/inject/example/ClientServiceWithDependencyInjection.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95"
"./core/test/com/google/inject/example/JndiProvider.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./core/test/com/google/inject/example/JndiProvider.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./core/test/com/google/inject/example/ClientServiceWithGuice.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27"
"./core/test/com/google/inject/example/ClientServiceWithGuice.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89"
"./core/test/com/google/inject/example/ClientServiceWithGuiceDefaults.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25"
"./core/test/com/google/inject/example/ClientServiceWithGuiceDefaults.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85"
"./core/test/com/google/inject/example/JndiProviderClient.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26"
"./core/test/com/google/inject/example/JndiProviderClient.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./core/test/com/google/inject/BinderTest.java","0e896db46024dc7596302f8622276d1c7df02c6b","2013-12-11 23:40:58","Sam Berlin","A Message should have only one source but as it is used in Errors, currently it can have multiple sources. The Message objects is returned from two public methods(Elements#getElements() and Errors#getMessages()) that make any changes in its method declarations difficult. As the first step, I am going to remove all calls to the Message constructor that receives multiple sources from []. So, the only calls will be from Errors that I will deal with separately. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57979416","25;450;451"
"./core/test/com/google/inject/BinderTest.java","ba5acdf7cf1eef418cfdb463991ff76e7f3ded28","2013-10-05 21:05:39","Christian Edward Gruber","Allow turning off stack trace collection in Guice.","22;23;104;105;106;107;108;109;110;111;112;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;141;142;175;176;279;280;333;334;357;358;475;476;509;510;514;515;519;520;524;525;529;530;534;535;539;540;544;545;549;550;554;555;559;560"
"./core/test/com/google/inject/BinderTest.java","2e39ef748a1c4e4dcab506ccfcdb14ca6e01c9c6","2013-10-05 21:04:53","Christian Edward Gruber","Print out the modules that led to a binding during error reporting, but only if there's >1 module (otherwise it's just noise).  The format is Some normal messaging about the fact that something terrible happened at <the normal source> (via modules: A -> B -> C)","19;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;314;315;316;317;318;319;320;321;325;326;327;328;329;330;466;467;468;469;470;471;472;475;476;477;478;479;488;489;490;491;492;497;498;499;501;502;503;505;506;507;509;510;511;513;514;515;517;518;519;521;522;523;525;526;527;529;530;531;533;534;535;536;537;538;539"
"./core/test/com/google/inject/BinderTest.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","459;475"
"./core/test/com/google/inject/BinderTest.java","efa4e9f24a309c38c1356fd43eb76fcbca8d975a","2011-09-13 17:41:32","guice.mirrorbot@gmail.com","Fix a bug in the way failed JIT bindings are cleaned up.  Because we removed bindings from the jitBindings Map, it was possible for an Injector to try and recreate the failed JIT binding.  Normally we want this behavior.. but in the case of a circular failed JIT binding, it can lead to a ComputationException from ComputingConcurrentHashMap, because we attempt to create two ConstructorInjectors for the same InjectionPoint recursively.","50;54;55;57;91;117;239;255;271;364;399;413;430;448"
"./core/test/com/google/inject/BinderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;29;30;31;40"
"./core/test/com/google/inject/BinderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;26"
"./core/test/com/google/inject/BinderTest.java","920731718b6f3505cdfeefeabd789539603de18a","2011-03-11 00:03:01","sberlin","fix issue 614 -- admittedly not the prettiest solution, but it works.","273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523"
"./core/test/com/google/inject/BinderTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448"
"./core/test/com/google/inject/ImplicitBindingTest.java","efa4e9f24a309c38c1356fd43eb76fcbca8d975a","2011-09-13 17:41:32","guice.mirrorbot@gmail.com","Fix a bug in the way failed JIT bindings are cleaned up.  Because we removed bindings from the jitBindings Map, it was possible for an Injector to try and recreate the failed JIT binding.  Normally we want this behavior.. but in the case of a circular failed JIT binding, it can lead to a ComputationException from ComputingConcurrentHashMap, because we attempt to create two ConstructorInjectors for the same InjectionPoint recursively.","22;78;163;164;165;166;167;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346"
"./core/test/com/google/inject/ImplicitBindingTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;24;27;28"
"./core/test/com/google/inject/ImplicitBindingTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./core/test/com/google/inject/ImplicitBindingTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285"
"./core/test/com/google/inject/ReflectionTest.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","21;22;46;47;48;60;61;62;77;78;79"
"./core/test/com/google/inject/ReflectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;25;26"
"./core/test/com/google/inject/ReflectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80"
"./core/test/com/google/inject/BoundProviderTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102"
"./core/test/com/google/inject/RequireAtInjectOnConstructorsTest.java","c756777526309dc6c9ff2b5df80a8f811d390c09","2012-05-31 23:54:04","Sam Berlin","Add Binder.requireAtInjectOnConstructors, to force Guice to require @Inject annotations on constructors.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202"
"./core/test/com/google/inject/BoundInstanceInjectionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;25;26;27;28;31;32;33"
"./core/test/com/google/inject/BoundInstanceInjectionTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116"
"./core/test/com/google/inject/IntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22"
"./core/test/com/google/inject/IntegrationTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./core/test/com/google/inject/name/NamesTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;23;24;25;29;30;31;32;36"
"./core/test/com/google/inject/name/NamesTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","26;27"
"./core/test/com/google/inject/name/NamesTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109"
"./core/test/com/google/inject/name/NamedEquivalanceTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;25;26;31;32;33;34;35;36"
"./core/test/com/google/inject/name/NamedEquivalanceTest.java","74d714c1e72bb60706ed9df4d1982971c88c10aa","2010-10-21 19:10:16","mcculls","Issue 552: (step 1) move core code to its own subdirectory","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258"
"./extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","29;124;125"
"./extensions/grapher/src/com/google/inject/grapher/DefaultNodeCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130"
"./extensions/grapher/src/com/google/inject/grapher/NameFactory.java","2473de5035f6c7064d362175b5de37a0ee829572","2009-02-04 04:59:10","phopkins","Improves Grapher's display of names:  - Instances are now rendered with their #toString() if they're not the    default Object implementation.  - String instances are displayed as string literals.  - ProviderMethods are rendered as a method signature.  - Instance sources are now just rendered as the file name and line number.","32;33"
"./extensions/grapher/src/com/google/inject/grapher/NameFactory.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","21;23;26;28;35;40;41;47;48;58;59;63;64;68;69;70;71;72;73;74;78;79;83;84;88;89;93;94;98;99;100;101;102"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;34"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","67;68;92;93"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","67;68;92;93"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","20;21;22;23"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","03b81a6b931a06c7697e422b218e3734a7f262cc","2009-03-18 05:34:39","limpbizkit","Early draft of InjectionListeners.","58;59;63;64;68;69;74;75;79;80;84;85;89;90;94;95;99;100"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;22;23;34"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","b52a7fd41a6cb67298dcdd2792afb46e0202505a","2008-12-31 02:19:32","phopkins","Fixes HasDependency instance cases in the Grapher","28;49;50;51;52;59;60;61;62;63;64;69;70;74;75;73;74;85;86"
"./extensions/grapher/src/com/google/inject/grapher/TransitiveDependencyVisitor.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105"
"./extensions/grapher/src/com/google/inject/grapher/ProviderAliasCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./extensions/grapher/src/com/google/inject/grapher/AbstractInjectorGrapher.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224"
"./extensions/grapher/src/com/google/inject/grapher/DefaultEdgeCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;20;26"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactory.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/CompassPoint.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/NodeShape.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","22;34;35;45;46;50;51;55;56;113;114;115;116;117;118;119;120"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;23;24"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","19;20;21;22;23;24"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21;22;23;24;25"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizNode.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/NodeStyle.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","20;31;32;37;38;45;46;51;52;76;77"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","19;20"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizEdge.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/PortIdFactoryImpl.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/ArrowType.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/Graphviz.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/EdgeStyle.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java","647b24f7f1b56174c141f6e7bb91dd8dcf117373","2014-04-10 23:18:26","Sam Berlin","Fix external issue 755.  Grapher config was wrong. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64724255","119;120"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java","ad6584a0561687394054936e86ae544ea1d57584","2013-05-16 14:56:20","Christian Edward Gruber","Fix issue 663: Grapher is producing corrupt graphs","252;253;268;269"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizGrapher.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","20;21;22;23;24;25;27;28;29;31;34;35;36;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65"
"./extensions/grapher/src/com/google/inject/grapher/graphviz/GraphvizModule.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./extensions/grapher/src/com/google/inject/grapher/NodeCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/src/com/google/inject/grapher/Alias.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/grapher/src/com/google/inject/grapher/AliasCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/grapher/src/com/google/inject/grapher/RootKeySetCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;20;21;22;25;28;29;31;34;35;36;37;38;39;40;41;42;43;44;45;49;50;51;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;109;110;111;112;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;25;27"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","77b81781c7623a40501f92521a29077109cd38f7","2011-02-16 14:18:38","sberlin","issue 602 - allow grapher to be rooted at keys.  contributed by bojan, thanks!","40;41;42;43;44;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","24;25"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;25;27"
"./extensions/grapher/src/com/google/inject/grapher/InjectorGrapher.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150"
"./extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;20;22;23;24;29;30;32;33;34;35;36;37;38;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64"
"./extensions/grapher/src/com/google/inject/grapher/InterfaceNode.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./extensions/grapher/src/com/google/inject/grapher/EdgeCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31"
"./extensions/grapher/src/com/google/inject/grapher/DefaultRootKeySetCreator.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;20;21;23;26;27;28;29;30;35;36;37;38;39;40;41;43;44;45;47;48;49;50;51;52;53;54;55;57;58;59;60;61;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97"
"./extensions/grapher/src/com/google/inject/grapher/ImplementationNode.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./extensions/grapher/src/com/google/inject/grapher/NodeId.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77"
"./extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;23;24;25;26;29;30;31;32;33;34;35;36;37;38;40;41;43;44;45;46;47;48;49;50;51;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83"
"./extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;47;48"
"./extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","19;20"
"./extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20"
"./extensions/grapher/src/com/google/inject/grapher/DependencyEdge.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","2bb4771a1835b8a145c857b63bb41ae56e5e6767","2013-09-18 17:56:54","Christian Edward Gruber","Exposes ElementSource at getSource() methods. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50645247","25;102;103;104"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;27"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;121;122"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","21;22;23;24;26;27"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21;22;23;24;31;32;33;34;35;36;37"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","2473de5035f6c7064d362175b5de37a0ee829572","2009-02-04 04:59:10","phopkins","Improves Grapher's display of names:  - Instances are now rendered with their #toString() if they're not the    default Object implementation.  - String instances are displayed as string literals.  - ProviderMethods are rendered as a method signature.  - Instance sources are now just rendered as the file name and line number.","23;25;26;29;30;73;74;75;76;77;78;79;80;81;82;83;84;87;88;89;90;91;93;94;95;96;97;98;99;100;102;103;104;105;106;107;108;109;113;114;115;116;117;118;119;120;121;122;123;124;125;126"
"./extensions/grapher/src/com/google/inject/grapher/ShortNameFactory.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83"
"./extensions/grapher/src/com/google/inject/grapher/Edge.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63"
"./extensions/grapher/src/com/google/inject/grapher/Node.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69"
"./extensions/grapher/src/com/google/inject/grapher/BindingEdge.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","19;20;22;23;24;27;28;30;31;35;36;39;40;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84"
"./extensions/grapher/src/com/google/inject/grapher/BindingEdge.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./extensions/grapher/src/com/google/inject/grapher/InstanceNode.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./extensions/grapher/test/com/google/inject/grapher/AllTests.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","29;30"
"./extensions/grapher/test/com/google/inject/grapher/AllTests.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/grapher/test/com/google/inject/grapher/AbstractInjectorGrapherTest.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","163;164;165;166;167;168;169"
"./extensions/grapher/test/com/google/inject/grapher/AbstractInjectorGrapherTest.java","45ef01760942b9575a6094effeb4eb034db9a113","2012-01-13 23:22:35","Sam Berlin","Cleanup a few things: 1) Remove invalid annotation. 2) Update to Guava 11.0.1, from r9. 3) Remove some unused files. 4) Forcibly keep Throwables, since servlet uses it but core doesn't (so jarjar was wiping it). 5) Disable failing Multibinder test.","29;43;44"
"./extensions/grapher/test/com/google/inject/grapher/AbstractInjectorGrapherTest.java","b2f558228f0b812a38a0c2407baf5826b452cb2c","2012-01-13 23:20:50","Sam Berlin","Add ServletScopes.isRequestScoped.","29;44"
"./extensions/grapher/test/com/google/inject/grapher/AbstractInjectorGrapherTest.java","8a539da6824f7e2c43a7dd47df608ec50bf5c987","2011-12-23 10:19:41","Stuart McCulloch","Remove @MediumTest annotation since it is not available on the build classpath","29;43"
"./extensions/grapher/test/com/google/inject/grapher/AbstractInjectorGrapherTest.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;28;38;39;40;43"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","27;28"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","27;28"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","03b81a6b931a06c7697e422b218e3734a7f262cc","2009-03-18 05:34:39","limpbizkit","Early draft of InjectionListeners.","59;60;68;69;76;77;85;86;95;96;103;104;111;112;120;121"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;27;28;38;41"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","b52a7fd41a6cb67298dcdd2792afb46e0202505a","2008-12-31 02:19:32","phopkins","Fixes HasDependency instance cases in the Grapher","86;87;88;89;90;91;92;93;94;95;118;119;160;161;162;169;170;171;172;173;208;209;210;211;212;213;214"
"./extensions/grapher/test/com/google/inject/grapher/TransitiveDependencyVisitorTest.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200"
"./extensions/grapher/test/com/google/inject/grapher/demo/DanceParty.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/demo/PrivateTestModule.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/grapher/test/com/google/inject/grapher/demo/BackToTheFutureModule.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./extensions/grapher/test/com/google/inject/grapher/demo/Nuclear.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Nuclear.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/Inventor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Inventor.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/PlutoniumProvider.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Lightning.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./extensions/grapher/test/com/google/inject/grapher/demo/DeLorian.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","27"
"./extensions/grapher/test/com/google/inject/grapher/demo/DeLorian.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/Plutonium.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/demo/DocBrown.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./extensions/grapher/test/com/google/inject/grapher/demo/PinballParts.java","b52a7fd41a6cb67298dcdd2792afb46e0202505a","2008-12-31 02:19:32","phopkins","Fixes HasDependency instance cases in the Grapher","19;20;21;22;23;24;25;26;27"
"./extensions/grapher/test/com/google/inject/grapher/demo/PinballParts.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/demo/Driver.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Driver.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/Used.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Used.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/DancePartyImpl.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25"
"./extensions/grapher/test/com/google/inject/grapher/demo/AssistedInjectModule.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","20;21;31;32;33;34;35"
"./extensions/grapher/test/com/google/inject/grapher/demo/AssistedInjectModule.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/grapher/test/com/google/inject/grapher/demo/MartyMcFly.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/demo/DancePartyFactory.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26"
"./extensions/grapher/test/com/google/inject/grapher/demo/InjectorGrapherDemo.java","b71955639ab617e0a4115b1439c8b9982227a018","2011-07-22 21:14:53","sberlin","Refactoring of guice-grapher - makes it possible to inject non-scoped graphers - fixes http://code.google.com/p/google-guice/issues/detail?id=489 (in the sense that the exposed node is graphed, it still doesn't follow private bindings) - simplifies implementation classes: - aliasing, node creating and edge creating are done as three independent steps - implementation classes will get aliased nodes so they don't need to worry about aliasing - edges are always created after the nodes they link - removes boilerplate code to build node and edge factories","22;23;24;26;39;40;43;44;45;46;47;48;49;50;51;52;53;54"
"./extensions/grapher/test/com/google/inject/grapher/demo/InjectorGrapherDemo.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","39;40"
"./extensions/grapher/test/com/google/inject/grapher/demo/InjectorGrapherDemo.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","39;40"
"./extensions/grapher/test/com/google/inject/grapher/demo/InjectorGrapherDemo.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52"
"./extensions/grapher/test/com/google/inject/grapher/demo/EnergySourceProvider.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32"
"./extensions/grapher/test/com/google/inject/grapher/demo/MultibinderModule.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/grapher/test/com/google/inject/grapher/demo/EnergySource.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22"
"./extensions/grapher/test/com/google/inject/grapher/demo/Person.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/demo/Renewable.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;27;28"
"./extensions/grapher/test/com/google/inject/grapher/demo/Renewable.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30"
"./extensions/grapher/test/com/google/inject/grapher/demo/FluxCapacitor.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","160;161"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","35;36;42;43"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","30;31"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","03b81a6b931a06c7697e422b218e3734a7f262cc","2009-03-18 05:34:39","limpbizkit","Early draft of InjectionListeners.","159;160"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","2473de5035f6c7064d362175b5de37a0ee829572","2009-02-04 04:59:10","phopkins","Improves Grapher's display of names:  - Instances are now rendered with their #toString() if they're not the    default Object implementation.  - String instances are displayed as string literals.  - ProviderMethods are rendered as a method signature.  - Instance sources are now just rendered as the file name and line number.","21;23;24;27;29;30;32;33;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;120;121;122;123;126;127;128;129;132;133;134;135;136;137;138;139;140;141;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188"
"./extensions/grapher/test/com/google/inject/grapher/ShortNameFactoryTest.java","aff72e051a38af75e8a6bce59d1a9a4b760d914b","2008-12-30 21:55:49","phopkins","Adds Graphviz-based grapher extension","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109"
"./extensions/jmx/src/com/google/inject/tools/jmx/ManagedBindingMBean.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./extensions/jmx/src/com/google/inject/tools/jmx/Manager.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","80;81;82"
"./extensions/jmx/src/com/google/inject/tools/jmx/Manager.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","24;27"
"./extensions/jmx/src/com/google/inject/tools/jmx/Manager.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113"
"./extensions/jmx/src/com/google/inject/tools/jmx/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","18;19"
"./extensions/jmx/src/com/google/inject/tools/jmx/package-info.java","484f75f87f526b692f74afdef0e34d2bc6937f0c","2009-05-19 18:18:03","limpbizkit","Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.","18;19"
"./extensions/jmx/src/com/google/inject/tools/jmx/package-info.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/jmx/src/com/google/inject/tools/jmx/ManagedBinding.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./extensions/jmx/test/com/google/inject/tools/jmx/JmxTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;28"
"./extensions/jmx/test/com/google/inject/tools/jmx/JmxTest.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61"
"./extensions/jndi/src/com/google/inject/jndi/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","18;19"
"./extensions/jndi/src/com/google/inject/jndi/package-info.java","484f75f87f526b692f74afdef0e34d2bc6937f0c","2009-05-19 18:18:03","limpbizkit","Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.","18;19"
"./extensions/jndi/src/com/google/inject/jndi/package-info.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./extensions/jndi/src/com/google/inject/jndi/JndiIntegration.java","e05f254deb2c8d6d1a2ce1a8a63488ccab8dde1a","2009-05-19 00:58:48","limpbizkit","Moving JNDI and JMX out to extensions/","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./extensions/testlib/src/com/google/inject/testing/fieldbinder/Bind.java","c7ae433fc9d5bb20115d693743fd2535fd707c4f","2014-04-10 23:17:37","Sam Berlin","Add BoundFieldModule to automatically bind @Bind annotated fields to their values, reducing test boilerplate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64668801","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java","332041c67c569a417f128846924a40ea0a7f1a2a","2014-07-01 20:51:26","Sam Berlin","Various style cleanups to BoundFieldModule & test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68018366","246;247;248;360;361;362;363"
"./extensions/testlib/src/com/google/inject/testing/fieldbinder/BoundFieldModule.java","c7ae433fc9d5bb20115d693743fd2535fd707c4f","2014-04-10 23:17:37","Sam Berlin","Add BoundFieldModule to automatically bind @Bind annotated fields to their values, reducing test boilerplate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64668801","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363"
"./extensions/testlib/test/com/google/inject/testing/fieldbinder/BoundFieldModuleTest.java","332041c67c569a417f128846924a40ea0a7f1a2a","2014-07-01 20:51:26","Sam Berlin","Various style cleanups to BoundFieldModule & test. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=68018366","126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;648;649"
"./extensions/testlib/test/com/google/inject/testing/fieldbinder/BoundFieldModuleTest.java","c7ae433fc9d5bb20115d693743fd2535fd707c4f","2014-04-10 23:17:37","Sam Berlin","Add BoundFieldModule to automatically bind @Bind annotated fields to their values, reducing test boilerplate. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64668801","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","132;133"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","79;80;82;83;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;27;33;34;35;36;37;38"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","32;33"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethod.java","ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d","2010-11-27 01:56:53","sberlin@gmail.com","add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","35;37;38;39"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProvider.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","f9a3d2db00d29aa3de03da606b1eaeb640947731","2014-05-03 04:43:39","Sam Berlin","Skip synthetic/bridge methods when validating CheckedProvider interfaces, otherwise java8 breaks validation by adding a synthetic bridge default method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66122172","21;22;27;36;37;394;395;396;397;398;399;400;401;402;403;404;414;415;488;489;490;491;492;493;494"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","8b7aaecd6164bf576c66dedad8c1988a10396341","2012-05-27 17:42:13","Sam Berlin","Update ThrowingProviderBinder to have a better exception in case of ProvisionExceptions from more than one dependency.","225;226;227;228;229;230;272;273;274;275"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","15dbe7831cdb409f54180a89bfea4d3ce69c4983","2012-05-27 17:40:27","Sam Berlin","Change AssertionError to use the whole ProvisionException as a cause, so we can see exactly what goes wrong when nothing should go wrong.","225;226"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","e6abeff86010a4456e8b4b2adc800bbffaa13ff7","2012-05-27 17:39:59","Sam Berlin","Change the new ThrowingProviderBinder.providing to look for @ThrowingInject instead of @Inject.","191;192;193;194;195;196;197;198;199;200;201;202;207;208;209"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","25;29;30;35;36;42;75;76;77;78;79;80;81;85;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;127;128;129;130;131;132;133;159;160;162;163;169;170;172;173;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;30;32;33;34"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26;28;29;30;31;32;33"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d","2010-11-27 01:56:53","sberlin@gmail.com","add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.","92;93;103;104;108;109;110;111;126;127;128;129;156;157;158;159;160;161;171;174;178;179;227;387;388;389"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","27;29;33;34;43;47;48;61;62;87;88;92;93;94;95;98;99;104;105;110;111;118;119;123;124;128;129;130;131;163;164;168;169;196;199;200;201;202;203;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;245;246;250;251;252;253;254;255;256;260;266;267;272;273;288;291;292;296;355;356;358;359;381;382;383"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","81;82;83;84;85"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","ee446ca42d2918e8bfee95df2415b6178721347a","2010-10-24 21:36:39","sberlin","update ThrowingProvider to support an @ThrowingProvides annotation, much like @Provides.  update the internals of the class to give more explicit error messaging & use bind.addError instead of throwing exceptions.  added lots & lots of tests.","21;38;42;43;44;45;51;52;53;54;55;56;57;58;59;60;61;62;63;76;77;78;79;80;81;82;83;95;96;97;102;103;105;106;107;108;109;110;111;112;113;140;141;142;143;144;145;146;147;148;149;151;152;153;154;158;159;161;162;179;208;209;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;244;245;248;249;250;251;252;253;254;255;256;257;258;259;260;262;263;264;265;266;267;268;269;270;271;272;273;274;275;279;280;281;282;283;284;288;289;290;291;292;293;294;295;296;297;298;299;300;302;303;304;305;306;307;311;312;313;314;315;318;319;320;321;322"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","5ac45a8b2a4624e89e8632fe6771457996c14f77","2010-10-16 21:38:22","sberlin","update ThrowingProviders to implement HasDependencies and use getProvider instead of injecting the Injector.","20;21;28;29;30;37;111;112;114;115;116;117;118;119;120;125;126;129;134;135;136;137;139;140;141;142;144;146;149;150;148;149;150;151"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","26;27"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;26"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","4994bf6a8e9986ca9013a908c340f019084be30f","2008-12-27 02:54:59","limpbizkit","Mikeward's Javadoc fixes. Mike read through all of our Javadoc (thank you!) and found a few typos and simplifications","38;39"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","49f67c0f62bc1748dd32e1d86616085231e974e7","2008-06-10 20:56:17","limpbizkit","Fixing owner types so they're no longer missing in ThrowingProviderBinder. Also adding the necessary precondition checks so that we always include 'em when necessary.","19;20;21;22;23;24;25;26;29;30;31;33;34;35;36;37;38;39;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","1601ae5cc3d7931d4ce4b78e0b493acdd6132ff1","2008-06-03 22:21:04","kevinb9n","Adopt latest google collections snapshot (partially); some style cleanup","21;23;63;64;65;66;96;97"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","e39d8d86616199a22df068a06202366a57fe30fd","2008-03-26 07:19:25","limpbizkit","Unifying unique annotations, used for creating unique keys","22;25;26;28;86;87;97;98;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","0197f9d60dc57722f990a3c00fd9a99b9640c0f2","2008-03-26 07:09:15","limpbizkit","Fixing a bug in the unique annotation in throwingproviderbinder","19;20;21;22;23;24;25;26;29;33;34;35;36;37;38;39;40;244;245;246;247;248;249;250;254;255;256;257;258;259;260;261;262;263;264;265;266;270;271;272;273;274"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","0c43f22e70bae44bbae09544abc3b322677ac82d","2007-12-19 01:38:16","limpbizkit","Javadoc and build file fixes for extensions.","39;40;41;42;43;44;48;49"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingProviderBinder.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/ThrowingInject.java","e6abeff86010a4456e8b4b2adc800bbffaa13ff7","2012-05-27 17:39:59","Sam Berlin","Change the new ThrowingProviderBinder.providing to look for @ThrowingInject instead of @Inject.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java","e6abeff86010a4456e8b4b2adc800bbffaa13ff7","2012-05-27 17:39:59","Sam Berlin","Change the new ThrowingProviderBinder.providing to look for @ThrowingInject instead of @Inject.","7;8;9;10;11;12;13;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvideUtils.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23;24;25"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java","ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d","2010-11-27 01:56:53","sberlin@gmail.com","add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.","26;27;28;29;30;31;32;33;34;35"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvides.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderWithDependencies.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","19;20"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java","484f75f87f526b692f74afdef0e34d2bc6937f0c","2009-05-19 18:18:03","limpbizkit","Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.","18;19;20"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/package-info.java","0c43f22e70bae44bbae09544abc3b322677ac82d","2007-12-19 01:38:16","limpbizkit","Javadoc and build file fixes for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","78;79;80"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;31;32;33;37"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","27;28;29;30;31;32"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProviderMethodsModule.java","ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d","2010-11-27 01:56:53","sberlin@gmail.com","add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java","6716a71b495e25fb6c499c03ad2d919bedf2ec50","2010-11-19 02:47:30","sberlin","a few more @sinces.","34;35"
"./extensions/throwingproviders/src/com/google/inject/throwingproviders/CheckedProvider.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/TestScope.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;27"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/TestScope.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;24;31;32;33;34;41;42;47;48"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31;32;33;34;35"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/ThrowingProviderTest.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderMethodsModuleTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build",""
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderMethodsModuleTest.java","4d93ce63450f6e58c44b0a8ef2143593fc08df86","2010-11-27 02:05:40","sberlin@gmail.com","fix license.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderMethodsModuleTest.java","ba8a4cdebee559cd1b6ad4af2ef9f7f0d82d085d","2010-11-27 01:56:53","sberlin@gmail.com","add more tests for @CheckedProvides methods, fix bug exposed with @Exposed methods, cleanup class names & javadoc.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","f9a3d2db00d29aa3de03da606b1eaeb640947731","2014-05-03 04:43:39","Sam Berlin","Skip synthetic/bridge methods when validating CheckedProvider interfaces, otherwise java8 breaks validation by adding a synthetic bridge default method. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=66122172","749;750"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","8b7aaecd6164bf576c66dedad8c1988a10396341","2012-05-27 17:42:13","Sam Berlin","Update ThrowingProviderBinder to have a better exception in case of ProvisionExceptions from more than one dependency.","23;31;32;33;34;35;48;49;50;51;1396;1397;1398;1399;1400;1401;1402;1403;1404;1405;1406;1407;1408;1409;1410;1411;1412;1413;1414;1415;1416;1417;1418;1419;1420;1421;1422;1423;1424;1425;1426;1427;1428;1429;1430;1431;1432;1433;1434;1435;1436;1437;1438;1439;1440;1441;1442;1443;1444;1445"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","e6abeff86010a4456e8b4b2adc800bbffaa13ff7","2012-05-27 17:39:59","Sam Berlin","Change the new ThrowingProviderBinder.providing to look for @ThrowingInject instead of @Inject.","571;572;621;651;806;807;815;816;817;818;819;820;871;928;987;1042;1125;1347;1348;1359;1360;1361;1362;1363;1364;1365;1366;1367;1368;1369;1370;1371;1372;1373;1374;1375;1376;1377;1378;1379;1380;1381;1382;1383;1384;1385"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","8557c775d526e603fa6f2de0fa4f3d840459083e","2012-03-01 19:21:26","Sam Berlin","Add a new method to ThrowingProviderBinder: providing(Class) or providing(TypeLiteral). This instructs ThrowingProviderBinder to create a proxy implementation of the CheckedProvider interface and delegate it to the constructor of the class in question.  As a bonus, the class it constructs fully participates in Guice AOP.","45;54;58;59;60;61;62;63;64;65;66;67;68;69;70;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;89;90;95;96;97;98;101;102;107;108;109;110;111;112;113;114;115;116;117;125;126;127;128;130;131;132;133;136;152;153;154;155;156;157;158;159;160;161;162;163;164;165;167;168;169;170;171;173;174;175;176;179;180;184;185;186;187;189;190;191;192;195;202;212;213;214;215;217;220;221;226;227;231;232;233;234;236;242;243;249;250;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;289;290;293;294;297;298;299;300;302;303;304;305;307;315;326;327;330;333;334;340;341;344;345;350;353;354;363;370;371;384;387;388;400;407;408;423;426;427;440;447;448;461;468;469;475;476;484;485;486;487;488;489;490;497;502;503;509;510;512;513;514;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;568;569;570;571;572;573;574;575;576;577;578;579;580;581;590;591;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;704;709;710;721;740;743;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;781;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;816;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;872;879;880;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910;918;919;920;921;922;923;924;925;926;927;928;931;938;939;953;954;955;956;957;958;959;960;961;962;963;964;965;966;967;968;969;970;971;972;973;974;975;976;977;978;979;980;981;982;983;986;993;994;999;1000;1001;1002;1009;1010;1011;1012;1013;1014;1015;1016;1017;1018;1019;1020;1021;1022;1023;1024;1025;1026;1027;1028;1029;1030;1031;1032;1033;1034;1035;1036;1037;1038;1044;1079;1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;1110;1111;1112;1113;1114;1115;1116;1117;1118;1119;1120;1121;1122;1123;1124;1125;1126;1130;1151;1174;1196;1218;1223;1224;1240;1294;1319;1320;1321;1322;1323;1324;1325;1326;1327;1328;1329;1330;1331;1332;1333;1334;1335;1336;1337;1338;1339;1340;1341;1342;1343;1344;1345;1346;1347;1348;1349;1350;1351;1352;1353;1354;1355;1356;1357;1358;1359;1360;1361;1362;1363;1364;1365;1366;1367;1368;1369;1370;1371;1372;1373"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;24;32;33;34;35;39;40;50;51"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","29;30;31;32;33;34;35;36"
"./extensions/throwingproviders/test/com/google/inject/throwingproviders/CheckedProviderTest.java","488284d6de260e31d14dcd80d8ef7df7a4fb2c22","2010-11-17 14:27:41","sberlin","deprecated ThrowingProvider in favor of CheckedProvider, which lets you specify more than one exception type.  remove tentative @ThrowingProvides in favor of @CheckedProvides.  add tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;870;871;872;873;874;875;876;877;878;879"
"./extensions/servlet/src/com/google/inject/servlet/ServletUtils.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","19;20;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBinding.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./extensions/servlet/src/com/google/inject/servlet/RequestParameters.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;22;25"
"./extensions/servlet/src/com/google/inject/servlet/RequestParameters.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","19;20;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBinding.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./extensions/servlet/src/com/google/inject/servlet/ScopingException.java","9111f48d5ac9df0504bd0eb702a15eb49383a3dd","2013-05-15 20:16:23","Christian Edward Gruber","Add a ISE exception subclass for scoping exceptions and document when it will be thrown for all the various methods in ServletScopes.java","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28"
"./extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22"
"./extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","42;43"
"./extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","42;43"
"./extensions/servlet/src/com/google/inject/servlet/GuiceServletContextListener.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;43;44"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","34;35;36;37"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","9ae3c2d66b23c157c090154b8b9bca839969ef30","2010-09-26 22:02:00","sberlin","add toString impls to each servletmodule binding.","23;24;42;43;44;45;46;47;48;49"
"./extensions/servlet/src/com/google/inject/servlet/InstanceFilterBindingImpl.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./extensions/servlet/src/com/google/inject/servlet/RequestScoped.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/servlet/src/com/google/inject/servlet/RequestScoped.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;26;27;28"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;25;44;45"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","35;36;37;38"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","9ae3c2d66b23c157c090154b8b9bca839969ef30","2010-09-26 22:02:00","sberlin","add toString impls to each servletmodule binding.","24;43;44;45;46;47;48;49;50;51"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBindingImpl.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","19;20;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBinding.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","4a4d8257ed41d8e2be03fd59a6c9dcf00c2379de","2014-05-10 14:34:44","Sam Berlin","Block when transferring request scope instead of checking owners & throwing exceptions.  This lets users delete hacky spin loops.","247;248;249;250;251;252;253;254;255;256;257;258;259;364;365;366;367;368;369;370;371;372;373;374;375;381"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","c33e73ccd3ca611c26ba823b8fa73fe116dcc926","2014-03-10 16:50:34","Sam Berlin","Improve OutOfScopeException so that it tells you which key it was trying to get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62699406","106;107;147;148;152;153;220;221;222"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","883fe035ae3be076486f2d16b8b8216266f1ad6c","2014-03-10 16:49:05","Sam Berlin","Make ServletScopes#scopeRequest slightly more efficient for larger seed maps. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=61542674","22;330;331;332;333;334;335;336;338;339"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","72460885d36e9a09ff351c0976cb85d6639487c0","2013-12-06 22:05:17","Sam Berlin","Fix typo, alertnative -> alternative.  (Issue 777.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57755721","55;56"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","5e5e2f552430c3b6e352ef43395b20af8688a90e","2013-12-06 22:04:18","Sam Berlin","Don't unnecessarily invoke Key#toString() when running in non-HTTP based RequestScope. Key#toString() is not memoized (unlike hashCode) and these allocations end up being consistently visible in our garbage sampling. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=56861670","68;80;81;91;92;111;331;332;363;364"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","9111f48d5ac9df0504bd0eb702a15eb49383a3dd","2013-05-15 20:16:23","Christian Edward Gruber","Add a ISE exception subclass for scoping exceptions and document when it will be thrown for all the various methods in ServletScopes.java","197;198;199;227;228;251;252;253;310;311;312;336;337;339;340;369;370;382;383;384;385;386;387"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","7dc62e5869d6d14744cc717b4a3d02e30fa22f66","2012-05-27 17:39:27","Sam Berlin","Add a new transferRequest method to ServletScopes which propagates all existing scoped objects.   Allows servlet engines to detach & reattach threads (while waiting for a request to receive results from RPCs).","29;30;31;33;57;58;59;60;78;79;80;81;83;84;92;93;223;224;226;227;228;230;231;232;233;234;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;280;281;282;283;284;286;287;288;289;290;291;292;293;294;319;320;323;324;331;332;333;334;335;336;337;338;339;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","04cdfd9c98f6291d57d295767863f0226a6f97b3","2012-01-17 16:29:38","Sam Berlin","Remove duplicate code & instead delegate to Scopes.isScoped method.","257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","b2f558228f0b812a38a0c2407baf5826b452cb2c","2012-01-13 23:20:50","Sam Berlin","Add ServletScopes.isRequestScoped.","22;23;29;30;31;33;56;57;58;59;60;61;62;63;250;251;252;253;254;255;256;257;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","05bf8e59221197d8e1b8b04bace4ff5cc34e7336","2011-09-27 15:37:30","guice.mirrorbot@gmail.com","Add Scopes.isCircularProxy, for use by Scope implementations.  The basic problem is that somewhere along the line, Guice is breaking the type-safety of <T> in the scope(Key<T>, Provider<T>) method.  This happens when <T> is involved in a circular dependency, and the ConstructionContext creates a circular proxy for a given 'expectedType' of <T> (the type in the parameter where it's being injected).  Expected type is a superclass or superinterface of <T>, not a subclass or subinterface, so if a Scope caches the result of Key<T> -> Provider<T>.get(), and then tries to reuse it, it's possible that we return something that isn't compatible with <T>.  This results in either a ClassCastException (if cglib is involved) or IllegalArgumentException (java reflection) when trying to construct the object, because the parameters don't match the arguments.","26;80;84;111;114;119;126;150;153;157;164"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","20;31;43;44;45;46;47;48;56;57;88;89;90;91;92;93;94;95;96;97;98;99;100;202;203;211;212"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26;27;30"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","54;55"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","54;55"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","b886ce30c72408d8ed953d2bd525607e8f317b12","2010-12-01 02:59:06","sberlin","rm ServletScopes.nullObject -- use a null value in the map to seed a key with null.","160;161;162;163;223;224;225;226;260;261;262;263;264;265;266;267;268;269;270"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","21967867cdfe6dbafabdac79bc3cd5c08e359626","2010-11-24 14:52:33","sberlin","allow scopeRequest/continueRequest to seed with a null value, and also type-check the values immediately.","159;160;161;178;179;180;223;224;225;237;238;239;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","163;164;222"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","b8d257487b130e10b4649a73680a9c1649f67a5d","2010-09-20 18:41:51","dhanji","Comment wording changed.","50;51;52;53"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","0693a15423ec35824472a79b98983c3113c4da36","2010-09-20 18:25:29","dhanji","Support for custom request scopes overloaded onto the @RequestScoped annotation.","23;24;25;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;79;164;165;166;167;168;169;170;171;172;173;175;176;177;178;179;180;184;185;186;187;191;195;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","1848a29d323bd4d47581ae92b7551f4f236a3883","2010-09-13 22:18:14","dhanji","Early support for thread-continuation of servlet request.","20;23;24;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155"
"./extensions/servlet/src/com/google/inject/servlet/ServletScopes.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","1db3e7924216995afc2e042515938b5c93a7416a","2012-05-27 17:43:31","Sam Berlin","Follow-up cleanup CL, removing an unnecessary parameter and strengthening typing.","77;78;112;113;115;116"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","997ae129e4a8d6792878ee272688424c577e085a","2012-05-27 17:42:56","Sam Berlin","Reduce stack size and simplify control flow in FilterChainInvocation.","26;49;70;71;77;78;79;80;81;82;83;84;85;109;110;111;112;113;114;115;116;117;118;119;120;121;122"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","21"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","9afcdd8a24ee225e21c461144b524b3fc55c4033","2011-10-31 20:34:04","Sam Berlin","Prune all the billions of c.g.i.servlet.Filter{ChainInvocation,Definition}.doFilter elements from the stack traces.","18;19;20;21;22;24;25;47;48;49;50;51;58;59;92;93;94;95;96;97;98;99;100;101;102;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","24;25;59;60;61;62;63;64;65;70;78;79;80"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19"
"./extensions/servlet/src/com/google/inject/servlet/FilterChainInvocation.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70"
"./extensions/servlet/src/com/google/inject/servlet/ScopingOnly.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36"
"./extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java","e5ed5b4fee89bbbe446346f63c52c842c709f733","2013-05-15 23:45:21","Christian Edward Gruber","Add an @Inject constructor to DefaultFilterPipeline so services which depend upon it can be used with Modules.requireAtInjectOnConstructorsModule()","20;34;35;36"
"./extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","18;19;32"
"./extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21"
"./extensions/servlet/src/com/google/inject/servlet/DefaultFilterPipeline.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","234;235;236;240;241;242"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","f1abba38c7f531ec808182579b9d0456b1a00a63","2014-04-10 23:18:51","Sam Berlin","On second thought, according to the javadocs @ http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html#getPathInfo() .. this is probably more correct, and still better than what it was before. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64726165","220;221"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","c35ebc2ce88fa26e1e36fd1eb806c2206ea98f00","2014-04-10 23:18:01","Sam Berlin","Fix external issue 372 -- only scrub the pathInfo if the servletPath actually began it (not if it just happens to be longer than the servlet path). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64723867","208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;229;230"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","98;99;174;175"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","44;199;201;202;204;205;212;213;214;215;216;217;226;227;229;230;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;20;24;35;45;46"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","223;224"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","223;224"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","171;172;173;174;175;192"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","82;83;89;90"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","97adab5a1c13e595fb833f3364c60ef972e3fe0d","2010-10-21 12:35:46","dhanji","Tentative fix for string index out of bounds exception in issue #560","205;206;207;208;209;210"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","287355590aa8ad2d87f8ebfac3a0710e3b442c27","2010-10-17 01:31:25","sberlin","flip the order of the type parameters in ProviderWithExtensionVisitor to match the order in the BindingTargetVisitor.","74;75"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","22;23;24;25;50;51;56;57;59;60;64;65;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95"
"./extensions/servlet/src/com/google/inject/servlet/ServletDefinition.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","17;18;19;24;25;26"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","30"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java","e511cf4323be20829e6aa3d2bfbd4de621bbc6f7","2010-09-18 21:47:34","sberlin","remove unused imports.","17;18;22"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleTargetVisitor.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","26;27;32;33;36;37;41;42;54;55;56;57;58;59"
"./extensions/servlet/src/com/google/inject/servlet/AbstractServletModuleBinding.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","c33e73ccd3ca611c26ba823b8fa73fe116dcc926","2014-03-10 16:50:34","Sam Berlin","Improve OutOfScopeException so that it tells you which key it was trying to get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62699406","23;106;107;111;112;116;117"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","2804e19f307e9c23bdd3260b7a3eda1f3d45567f","2012-05-31 23:54:44","Sam Berlin","Add explicit @Inject.","22;55;56"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","97;98;99;100"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","0b26f78c3b954ae792e48adb3af49c12c4c4c717","2011-09-09 21:22:45","guice.mirrorbot@gmail.com","Make ServletModule work with requireExplicitBinding().","94"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","86;87"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","86;87"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","e133f5fecf00b72552b06d3187a8c4526a65bc34","2011-05-23 22:08:31","isaac.q.shum","Make the @RequestParameteters Map derive its values from the existing ServletRequest binding. This makes it easier to construct a seedMap for use with ServletScopes (one only needs to seed the request and response to override the map as well).","18;19;20;25;28;36;37;38;108;109;110;111;112;113;114"
"./extensions/servlet/src/com/google/inject/servlet/InternalServletModule.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121"
"./extensions/servlet/src/com/google/inject/servlet/SessionScoped.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/servlet/src/com/google/inject/servlet/SessionScoped.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java","0e9a2c50ddc5ea99c2a5c99591990122e9db91d3","2010-11-13 14:30:03","sberlin","add @since tag.","25"
"./extensions/servlet/src/com/google/inject/servlet/ServletModuleBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","18;20;21;37;38;39;40;41;42;43;44;45;46;47;48;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;55;56;57;58;59;60;61;62;63;64;87;88;89;92;93;94;95;96;97;98;99;100;101;102;109;110"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;22;23;25;30"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21;22;23"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","99ca2d6dfd9c1f10bc48a0bb4e635144298a6006","2010-08-22 23:08:21","sberlin","update parameter names to reflect what they are.","104;105;106;107;111;112;113;114;118;119;124;125;130;131;134;135"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","20;56;60;61;62;63;64;110;111;113;114;115;119;120;127;128"
"./extensions/servlet/src/com/google/inject/servlet/ServletsModuleBuilder.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternType.java","269f2f69279d2cc4c3859e9dd0c08cb5f24bcc86","2014-05-03 04:38:57","Sam Berlin","Fix issue 379 -- strip the query off the URI when checking to see if the pattern matches.  (We don't need to strip the fragment off because fragments aren't sent to servers.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996893","40;41;42;43;44;45;46;47;48;78;125;126"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternType.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/UriPatternType.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","23;24"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternType.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","24;25;28;29;94;95;96;97;131;132;133;134"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternType.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128"
"./extensions/servlet/src/com/google/inject/servlet/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","19;20"
"./extensions/servlet/src/com/google/inject/servlet/package-info.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","4a4d8257ed41d8e2be03fd59a6c9dcf00c2379de","2014-05-10 14:34:44","Sam Berlin","Block when transferring request scope instead of checking owners & throwing exceptions.  This lets users delete hacky spin loops.","19;177;197;198;199;200;201;202;203;204;205;211"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","c33e73ccd3ca611c26ba823b8fa73fe116dcc926","2014-03-10 16:50:34","Sam Berlin","Improve OutOfScopeException so that it tells you which key it was trying to get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62699406","22;24;147;148;149;150;153;154;155;156;159;160;161;162;169;170;173;174;175;176"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","7dc62e5869d6d14744cc717b4a3d02e30fa22f66","2012-05-27 17:39:27","Sam Berlin","Add a new transferRequest method to ServletScopes which propagates all existing scoped objects.   Allows servlet engines to detach & reattach threads (while waiting for a request to receive results from RPCs).","19;20;26;115;116;117;118;119;120;123;124;131;133;134;137;138;139;140;141;142;143;144;145;146;147;176;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","fbbb52dcc92e964b95f389684e87b363f6499173","2011-10-16 23:33:52","guice.mirrorbot@gmail.com","fix issue 636, GuiceFilter should keep a strong ref to its logger.","81;82;99;100"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","67;68;69;81;82;83;84;85;86;87;88;89;114;115;116;191;192;199;200;207;208;209;210;211"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","b405e0417151915b98c3d2033adb9770336a7bbb","2011-10-16 22:34:21","guice.mirrorbot@gmail.com","Fix flaky service test.  The whole AsyncService thing probably should just be rm'd, but fixing the test for now.","82;83;89;90"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","fb66c4219616e45fd19a8ccb5e93130d77ef96a3","2011-10-16 15:55:38","sberlin","fix issue 636, GuiceFilter should keep a strong ref to its logger.","82;83;91;92"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","99;106;107;111;112;113;114;115;116;118;119;120;123;129;130;131;132;139;140;151;152;156;157;158;159;164;165;166;167"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;25"
"./extensions/servlet/src/com/google/inject/servlet/GuiceFilter.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","38;39"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","38;39"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","41;42;43"
"./extensions/servlet/src/com/google/inject/servlet/UriPatternMatcher.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","3b02622e856e845f9bc5353a494b5ccc75dec40c","2014-05-21 03:35:11","Dhanji R. Prasanna","Snapshot cookies in continuing request to prevent mutation side effects","41;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;144;145"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","882330dad166a44b2498c7c13dcab61d853cecdd","2013-05-16 01:59:34","Christian Edward Gruber","HttpServletRequest#getCookies() can return null; checks that in ContinuingHttpServletRequest.","71;72;73"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;25"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","69;70"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","69;70"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./extensions/servlet/src/com/google/inject/servlet/ContinuingHttpServletRequest.java","1848a29d323bd4d47581ae92b7551f4f236a3883","2010-09-13 22:18:14","dhanji","Early support for thread-continuation of servlet request.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","48;49;50;51;58;59"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","f74ee672186bffc687b2accb911344a7021e7ecf","2011-10-18 20:43:18","Sam Berlin","Better errors when using binder(), etc. outside of configure().","238;239;240;241;242;243;244;245;246;247;248;249;255;256;257;264;265;266;273;274;275;282;283;284"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;24;25;27"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;24;25;241;242;249;250;257;258;265;266"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","845fc0e940e320cd177ed4a4f3543c58d6b19283","2010-11-11 13:15:15","sberlin","fix @since version.","272;273"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","286;290;302;306"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","2a031c02780b7742090aea2830b421b84867e2ff","2010-09-26 22:04:09","sberlin","fix issue 544 -- allow ServletModules to be reused w/o reconstructing new ones.  also fixes a bug where a ServletModule that contained only filters would have run each filter twice if the module was being reused (or three times if it was being used a third time, etc..).  thanks to mathiue.carbou for pointing out the problem.","19;20;44;45;46;47;48;56;57;58;59;233;234;235;236"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","99ca2d6dfd9c1f10bc48a0bb4e635144298a6006","2010-08-22 23:08:21","sberlin","update parameter names to reflect what they are.","276;277;278;279;280;281;290;291;292;293;294;295"
"./extensions/servlet/src/com/google/inject/servlet/ServletModule.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294"
"./extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;24;27;28;29"
"./extensions/servlet/src/com/google/inject/servlet/FilterPipeline.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","20;79;80;81;101;102;103"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","142;143;145;146;147;148;149;150;155;156;157;158;159;160;163"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;20;21;27;28;29;30;31;35"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","115;116"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","115;116"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26;27;28;29;30"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","21;48;49;50;51;69;70;71;72;73;74;75"
"./extensions/servlet/src/com/google/inject/servlet/ManagedServletPipeline.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","90;91;155;156;157"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","1db3e7924216995afc2e042515938b5c93a7416a","2012-05-27 17:43:31","Sam Berlin","Follow-up cleanup CL, removing an unnecessary parameter and strengthening typing.","37;38;153;154;155;157"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","997ae129e4a8d6792878ee272688424c577e085a","2012-05-27 17:42:56","Sam Berlin","Reduce stack size and simplify control flow in FilterChainInvocation.","26;155;156;157;158;159;165;166;167;168;170;171;172"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;22;33"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","159;160;161"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","78;79;85;86"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","287355590aa8ad2d87f8ebfac3a0710e3b442c27","2010-10-17 01:31:25","sberlin","flip the order of the type parameters in ProviderWithExtensionVisitor to match the order in the BindingTargetVisitor.","70;71"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","22;23;24;25;46;47;52;53;55;59;60;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90"
"./extensions/servlet/src/com/google/inject/servlet/FilterDefinition.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","19;96;97;164;165"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","85;86"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","140;141;147"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;20;27;28;29;30;34"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25;26;27;28;29"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","21;57;58;59;60;79;80;81;82;83;84;85"
"./extensions/servlet/src/com/google/inject/servlet/ManagedFilterPipeline.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;26;27;28"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;25;44;45"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","35;36;37;38"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","9ae3c2d66b23c157c090154b8b9bca839969ef30","2010-09-26 22:02:00","sberlin","add toString impls to each servletmodule binding.","24;43;44;45;46;47;48;49;50;51"
"./extensions/servlet/src/com/google/inject/servlet/LinkedFilterBindingImpl.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","18;19;20;35;36;37;38;39;40;41;42;43;44;45;46;48;49;50;51;52;53;54;55;56;51;52;53;54;55;56;57;58;59;60;89;90;98;99"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;21;23;27"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","20;21"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","99ca2d6dfd9c1f10bc48a0bb4e635144298a6006","2010-08-22 23:08:21","sberlin","update parameter names to reflect what they are.","94;95;98;99;103;104;105;106;110;111;116;117;122;123;126;127"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","20;48;49;50;51;52;102;103;105;106;107;111;112;119;120"
"./extensions/servlet/src/com/google/inject/servlet/FiltersModuleBuilder.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;25;26"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;43;44"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","34;35;36;37"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","9ae3c2d66b23c157c090154b8b9bca839969ef30","2010-09-26 22:02:00","sberlin","add toString impls to each servletmodule binding.","23;24;42;43;44;45;46;47;48;49;50"
"./extensions/servlet/src/com/google/inject/servlet/InstanceServletBindingImpl.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java","71fe73ed4c6bcccbc6b71be1061435300b195c2f","2010-11-13 14:28:14","sberlin","issue 570 & issue 569 -- share a hierarchy for servlet module bindings, expose a method to see if the binding will match against a URI.","19;20;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45"
"./extensions/servlet/src/com/google/inject/servlet/LinkedServletBinding.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./extensions/servlet/test/com/google/inject/servlet/MultiModuleDispatchIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;7;13;14;15;16;17;20;24"
"./extensions/servlet/test/com/google/inject/servlet/MultiModuleDispatchIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","75;76;79;80;81"
"./extensions/servlet/test/com/google/inject/servlet/MultiModuleDispatchIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108"
"./extensions/servlet/test/com/google/inject/servlet/ServletPipelineRequestDispatcherTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","29;114;115;116;184;185;186;256;257;258"
"./extensions/servlet/test/com/google/inject/servlet/ServletPipelineRequestDispatcherTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;27;28;29;30;36;37;38;42;43;50;56;57;58;59;60;61;62;63;64;65"
"./extensions/servlet/test/com/google/inject/servlet/ServletPipelineRequestDispatcherTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25;26;27;28;29"
"./extensions/servlet/test/com/google/inject/servlet/ServletPipelineRequestDispatcherTest.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","22;28;29;68;69;100;101;102;103;105;106;107;109;110;111;112;113;114;115;116;132;133;171;172;173;174;176;177;178;180;181;182;183;184;185;186;187;216;217;244;245;246;247;249;250;251;253;254;255;256;257;258;259;260"
"./extensions/servlet/test/com/google/inject/servlet/ServletPipelineRequestDispatcherTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273"
"./extensions/servlet/test/com/google/inject/servlet/InvalidScopeBindingTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;6;8;9;10;11;15;16"
"./extensions/servlet/test/com/google/inject/servlet/InvalidScopeBindingTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","10;31;72;73;74;79;80;81;82;89;90;119;120;121;137;138;180;181;182;197;198;200;201;235;236;237;270;271;272"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","9;32;61;62;63;64;65;66;67;68;69;70;71;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","1db3e7924216995afc2e042515938b5c93a7416a","2012-05-27 17:43:31","Sam Berlin","Follow-up cleanup CL, removing an unnecessary parameter and strengthening typing.","131;132;194;195"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","997ae129e4a8d6792878ee272688424c577e085a","2012-05-27 17:42:56","Sam Berlin","Reduce stack size and simplify control flow in FilterChainInvocation.","131;132;133;135;136;194;195;196;198;199"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","122;123;124;133;134;135;136;137;156;158;159;160;161;181;182;183;193;194;195;196;211;214;215;221;222;227;228;229;230;237;238;239;240"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;7;8;9;10;14;15;17;18;19;24;31;32;33;34;35;36"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","6;7;8;9"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","109;110;111;112;113;169;170;171;172;173"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","72;73;115;116;172;173"
"./extensions/servlet/test/com/google/inject/servlet/FilterDefinitionTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242"
"./extensions/servlet/test/com/google/inject/servlet/AllTests.java","269f2f69279d2cc4c3859e9dd0c08cb5f24bcc86","2014-05-03 04:38:57","Sam Berlin","Fix issue 379 -- strip the query off the URI when checking to see if the pattern matches.  (We don't need to strip the fragment off because fragments aren't sent to servers.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996893","56;57"
"./extensions/servlet/test/com/google/inject/servlet/AllTests.java","882330dad166a44b2498c7c13dcab61d853cecdd","2013-05-16 01:59:34","Christian Edward Gruber","HttpServletRequest#getCookies() can return null; checks that in ContinuingHttpServletRequest.","44"
"./extensions/servlet/test/com/google/inject/servlet/AllTests.java","2a031c02780b7742090aea2830b421b84867e2ff","2010-09-26 22:04:09","sberlin","fix issue 544 -- allow ServletModules to be reused w/o reconstructing new ones.  also fixes a bug where a ServletModule that contained only filters would have run each filter twice if the module was being reused (or three times if it was being used a third time, etc..).  thanks to mathiue.carbou for pointing out the problem.","37"
"./extensions/servlet/test/com/google/inject/servlet/AllTests.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","51;52;53"
"./extensions/servlet/test/com/google/inject/servlet/AllTests.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","0c69c36ff97fa83887e75ba567745a5919d4b6ed","2014-05-22 16:03:07","Dhanji R. Prasanna","Fix for build break from servlets patch","19;132;176"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;32;33;34;35;36;44;52;53;54;55;56;61"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","25;26;27;28"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","121;122;123;124;125;163;164;165;166;167;168"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","0693a15423ec35824472a79b98983c3113c4da36","2010-09-20 18:25:29","dhanji","Support for custom request scopes overloaded onto the @RequestScoped annotation.","22;26;35;44;46;56;57;58;84;86;87;88;89;96;97;98;99;100;106;107;140;141;143;144;145;146;151;152;160;161;162;163;164;165;166;167;168;169;170;173;175;173;174;175;180;181;182;183;189;190;193;194;195;196;197;198;199;207;214;215;216"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","10925e44f80f335423f128b107ec176b7436a20b","2010-09-14 19:16:37","dhanji","sberlin review for the previous CL.","46;111;127;159;175;176"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingRequestIntegrationTest.java","7ebe5f6510e887a3f7d5569dd42874266ede1333","2010-09-14 15:45:55","dhanji","More tests for the continuing request idiom.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203"
"./extensions/servlet/test/com/google/inject/servlet/ServletDispatchIntegrationTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","179;180"
"./extensions/servlet/test/com/google/inject/servlet/ServletDispatchIntegrationTest.java","269f2f69279d2cc4c3859e9dd0c08cb5f24bcc86","2014-05-03 04:38:57","Sam Berlin","Fix issue 379 -- strip the query off the URI when checking to see if the pattern matches.  (We don't need to strip the fragment off because fragments aren't sent to servers.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996893","268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343"
"./extensions/servlet/test/com/google/inject/servlet/ServletDispatchIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;29;30;31;33;44;45;46;47;48;49;50"
"./extensions/servlet/test/com/google/inject/servlet/ServletDispatchIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","84;85;88;89;90;131;132;135;136;137;242;243;246;247;248"
"./extensions/servlet/test/com/google/inject/servlet/ServletDispatchIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256"
"./extensions/servlet/test/com/google/inject/servlet/VarargsFilterDispatchIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;7;13;14;15;16;17;20;24"
"./extensions/servlet/test/com/google/inject/servlet/VarargsFilterDispatchIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","65;66;69;70;71;104;105;108;109;110;144;145;148;149;150"
"./extensions/servlet/test/com/google/inject/servlet/VarargsFilterDispatchIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171"
"./extensions/servlet/test/com/google/inject/servlet/FilterPipelineTest.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","101;102;115;116;120;121"
"./extensions/servlet/test/com/google/inject/servlet/FilterPipelineTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;11;12;13;14;15;16;18;27"
"./extensions/servlet/test/com/google/inject/servlet/FilterPipelineTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","73;74;77;78;79"
"./extensions/servlet/test/com/google/inject/servlet/FilterPipelineTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121"
"./extensions/servlet/test/com/google/inject/servlet/ServletScopesTest.java","b2f558228f0b812a38a0c2407baf5826b452cb2c","2012-01-13 23:20:50","Sam Berlin","Add ServletScopes.isRequestScoped.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","26;101;102;103;197;198;199;292;293;294"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","f1abba38c7f531ec808182579b9d0456b1a00a63","2014-04-10 23:18:51","Sam Berlin","On second thought, according to the javadocs @ http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html#getPathInfo() .. this is probably more correct, and still better than what it was before. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64726165","129;130"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","c35ebc2ce88fa26e1e36fd1eb806c2206ea98f00","2014-04-10 23:18:01","Sam Berlin","Fix external issue 372 -- only scrub the pathInfo if the servletPath actually began it (not if it just happens to be longer than the servlet path). ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64723867","127;128;129;130"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;27;31;32;34;35;36;39;44;45;46;47;48;49;50;51"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;25"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","97;98;190;191;286;287"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionPathsTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296"
"./extensions/servlet/test/com/google/inject/servlet/DummyFilterImpl.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/servlet/test/com/google/inject/servlet/DummyFilterImpl.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./extensions/servlet/test/com/google/inject/servlet/ServletModuleTest.java","8d883444d53d0ce8072490bc2d056ee87f9f547a","2014-05-27 21:23:20","Dhanji R. Prasanna","Test for issue #571","37;38;39;40;41;42;43;44;45;46;47"
"./extensions/servlet/test/com/google/inject/servlet/ServletModuleTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;27;31;32;33;34"
"./extensions/servlet/test/com/google/inject/servlet/ServletModuleTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/test/com/google/inject/servlet/ServletModuleTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","26;27"
"./extensions/servlet/test/com/google/inject/servlet/ServletModuleTest.java","2a031c02780b7742090aea2830b421b84867e2ff","2010-09-26 22:04:09","sberlin","fix issue 544 -- allow ServletModules to be reused w/o reconstructing new ones.  also fixes a bug where a ServletModule that contained only filters would have run each filter twice if the module was being reused (or three times if it was being used a third time, etc..).  thanks to mathiue.carbou for pointing out the problem.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93"
"./extensions/servlet/test/com/google/inject/servlet/DummyServlet.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19"
"./extensions/servlet/test/com/google/inject/servlet/DummyServlet.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","66;67;68"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","0b26f78c3b954ae792e48adb3af49c12c4c4c717","2011-09-09 21:22:45","guice.mirrorbot@gmail.com","Make ServletModule work with requireExplicitBinding().","65;66;67"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;27;28;43;44;45;46;47;48;49;50;51;52"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","38;39;40;41;42;43;44;142;143"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","a5c13e219224f7c2cbede4b1c787bbd95e62e276","2010-11-13 14:28:44","sberlin","simplify servlet SPI test.","75;76;81;82;87;88;93;94;107;108;109;110;111;112;113;114;115"
"./extensions/servlet/test/com/google/inject/servlet/ServletSpiVisitor.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","26;85;86;87"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","25;35;37;44;45;71;72;73;74;75;76;77;78;79;80;81;82;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;31;32;33;34;35;39;44;45;46;47;48;49"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","23;24;25;26"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","76;77"
"./extensions/servlet/test/com/google/inject/servlet/ServletDefinitionTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103"
"./extensions/servlet/test/com/google/inject/servlet/UriPatternTypeTest.java","269f2f69279d2cc4c3859e9dd0c08cb5f24bcc86","2014-05-03 04:38:57","Sam Berlin","Fix issue 379 -- strip the query off the URI when checking to see if the pattern matches.  (We don't need to strip the fragment off because fragments aren't sent to servers.) ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=64996893","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59"
"./extensions/servlet/test/com/google/inject/servlet/ScopeRequestIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;29;30;34;35;41;43;48"
"./extensions/servlet/test/com/google/inject/servlet/ScopeRequestIntegrationTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","27;28;29;30"
"./extensions/servlet/test/com/google/inject/servlet/ScopeRequestIntegrationTest.java","b886ce30c72408d8ed953d2bd525607e8f317b12","2010-12-01 02:59:06","sberlin","rm ServletScopes.nullObject -- use a null value in the map to seed a key with null.","123;124;129;130;131;132;133"
"./extensions/servlet/test/com/google/inject/servlet/ScopeRequestIntegrationTest.java","21967867cdfe6dbafabdac79bc3cd5c08e359626","2010-11-24 14:52:33","sberlin","allow scopeRequest/continueRequest to seed with a null value, and also type-check the values immediately.","23;25;28;31;33;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;162;163;164;165;166;167;168;169"
"./extensions/servlet/test/com/google/inject/servlet/ScopeRequestIntegrationTest.java","0693a15423ec35824472a79b98983c3113c4da36","2010-09-20 18:25:29","dhanji","Support for custom request scopes overloaded onto the @RequestScoped annotation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111"
"./extensions/servlet/test/com/google/inject/servlet/ContextPathTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;24;25;26;27;28;29;30;31;32;33;46;47;48;49;50;51;52;53;54;55;56;57"
"./extensions/servlet/test/com/google/inject/servlet/ContextPathTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293"
"./extensions/servlet/test/com/google/inject/servlet/ServletTestUtils.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","14;15;16;32;33;39;40;41;42;43;44;45;46;47;48"
"./extensions/servlet/test/com/google/inject/servlet/ServletTestUtils.java","9afcdd8a24ee225e21c461144b524b3fc55c4033","2011-10-31 20:34:04","Sam Berlin","Prune all the billions of c.g.i.servlet.Filter{ChainInvocation,Definition}.doFilter elements from the stack traces.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110"
"./extensions/servlet/test/com/google/inject/servlet/EdslTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;29;30"
"./extensions/servlet/test/com/google/inject/servlet/EdslTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","18;21;36;37;38;39;40;41;42;43;44;49;50"
"./extensions/servlet/test/com/google/inject/servlet/EdslTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101"
"./extensions/servlet/test/com/google/inject/servlet/VarargsServletDispatchIntegrationTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","210;211"
"./extensions/servlet/test/com/google/inject/servlet/VarargsServletDispatchIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;28;29;30;32;42;43;44;45;46"
"./extensions/servlet/test/com/google/inject/servlet/VarargsServletDispatchIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","78;79;82;83;84;118;119;122;123;124;161;162;165;166;167"
"./extensions/servlet/test/com/google/inject/servlet/VarargsServletDispatchIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221"
"./extensions/servlet/test/com/google/inject/servlet/FilterDispatchIntegrationTest.java","fee2d237bd4d6f89ed510861a25d4f3eafa8f1d1","2011-10-31 20:35:33","Sam Berlin","Ensure servlets & filters are processed in the correct order in all scenarios. Fix so that code like:","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;21;38;43;44;218;219;239;252;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;366;367"
"./extensions/servlet/test/com/google/inject/servlet/FilterDispatchIntegrationTest.java","9afcdd8a24ee225e21c461144b524b3fc55c4033","2011-10-31 20:34:04","Sam Berlin","Prune all the billions of c.g.i.servlet.Filter{ChainInvocation,Definition}.doFilter elements from the stack traces.","4;25;26;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322"
"./extensions/servlet/test/com/google/inject/servlet/FilterDispatchIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;11;12;13;14;15;16;20;30;31;32;33;34;35;36"
"./extensions/servlet/test/com/google/inject/servlet/FilterDispatchIntegrationTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","75;76;77;81;82;83;131;132;135;136;137;172;173;176;177;178"
"./extensions/servlet/test/com/google/inject/servlet/FilterDispatchIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227"
"./extensions/servlet/test/com/google/inject/servlet/ExtensionSpiTest.java","0b26f78c3b954ae792e48adb3af49c12c4c4c717","2011-09-09 21:22:45","guice.mirrorbot@gmail.com","Make ServletModule work with requireExplicitBinding().","145;146;191;192;193"
"./extensions/servlet/test/com/google/inject/servlet/ExtensionSpiTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;24;25;26;27;28;33;34;40;41;42;43;44"
"./extensions/servlet/test/com/google/inject/servlet/ExtensionSpiTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/servlet/test/com/google/inject/servlet/ExtensionSpiTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","31;32;33;34"
"./extensions/servlet/test/com/google/inject/servlet/ExtensionSpiTest.java","b4b7f7209570bd75352eb322825ae79392f03978","2010-08-22 18:48:23","sberlin","issue 524 part 2 -- add an SPI to the servlet extension to be able to introspect on its bindings.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","c33e73ccd3ca611c26ba823b8fa73fe116dcc926","2014-03-10 16:50:34","Sam Berlin","Improve OutOfScopeException so that it tells you which key it was trying to get. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=62699406","19;39;40;41;42;43;77;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;224;225;381;382;383"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","9afcdd8a24ee225e21c461144b524b3fc55c4033","2011-10-31 20:34:04","Sam Berlin","Prune all the billions of c.g.i.servlet.Filter{ChainInvocation,Definition}.doFilter elements from the stack traces.","20;21;22;29;38;47;48;49;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","8c92236afd1f02f7ac574bb3df8d92c301067240","2011-10-16 22:35:11","guice.mirrorbot@gmail.com","Allow creation of a GuiceFilter that scopes, but does not dispatch to ServletModule-bound servlets / filters.","374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","e09d8bf14bab27501df1d19462a0542912022f94","2011-09-27 15:36:19","guice.mirrorbot@gmail.com","Replace the Request/Response Context after each ServletModule-registered Filter.  This fixes problems where wrapped request/response classes weren't passed to subsequent filters or servlets in the chain.","27;33;36;37;51;53;57;61;88;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;392;393;394;395;456;457;458;459;466;467"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","ab8f0c607e2c708c2c0bc5a48afc97967aca4ad1","2011-09-09 21:23:42","guice.mirrorbot@gmail.com","Clean up ServletTest: use a fake request impl instead of EasyMock.","25;26;27;28;29;30;32;34;52;78;79;80;81;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;96;97;98;104;110;113;114;115;116;117;118;119;120;121;122;123;120;121;124;131;134;135;136;137;138;139;140;141;142;143;150;151;145;146;149;156;159;160;161;162;163;164;165;166;167;168;169;170;171;172;166;167;170;177;180;181;182;183;184;185;186;187;188;189;190;191;192;199;200;191;192;195;202;203;206;207;208;209;210;211;212;213;214;213;214;217;222;223;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;304;306"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","32;39"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","38;39"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","5b73df60a81f9317d5e0122b7ff99496615b3d90","2011-06-05 19:11:21","sberlin","rm @Override to maintain source compatibility.","106;107"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","e133f5fecf00b72552b06d3187a8c4526a65bc34","2011-05-23 22:08:31","isaac.q.shum","Make the @RequestParameteters Map derive its values from the existing ServletRequest binding. This makes it easier to construct a seedMap for use with ServletScopes (one only needs to seed the request and response to override the map as well).","19;21;22;23;24;25;26;27;28;29;30;31;32;33;40;41;43;44;45;48;49;50;52;58;64;66;67;68;69;70;71;72;78;79;80;81;82;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;148;222;258"
"./extensions/servlet/test/com/google/inject/servlet/ServletTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305"
"./extensions/servlet/test/com/google/inject/servlet/InjectedFilterPipelineTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;6;7;8;9;10;11;16;17;18;20;29;30;31;32;33;34;35;36;37;38"
"./extensions/servlet/test/com/google/inject/servlet/InjectedFilterPipelineTest.java","4e10dabd5f8aafed91bb849c850e57d89c9911b0","2011-03-24 13:43:25","sberlin","issue 418 - make sure servlet extension works with context paths.  thanks to Henning for provided the patches.","88;89;92;93;94;127;128;131;132;133"
"./extensions/servlet/test/com/google/inject/servlet/InjectedFilterPipelineTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingHttpServletRequestTest.java","f39b8fdfc5b8d2c1502ac4bfc9601b633284ee07","2014-05-21 20:30:59","Dhanji R. Prasanna","Review comments","26;27;33;34;35;36;48;49;73;74;75;76;77;92;93;97;98"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingHttpServletRequestTest.java","3b02622e856e845f9bc5353a494b5ccc75dec40c","2014-05-21 03:35:11","Dhanji R. Prasanna","Snapshot cookies in continuing request to prevent mutation side effects","18;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99"
"./extensions/servlet/test/com/google/inject/servlet/ContinuingHttpServletRequestTest.java","882330dad166a44b2498c7c13dcab61d853cecdd","2013-05-16 01:59:34","Christian Edward Gruber","HttpServletRequest#getCookies() can return null; checks that in ContinuingHttpServletRequest.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58"
"./extensions/servlet/test/com/google/inject/servlet/MultipleServletInjectorsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;20;21;22;23;24;26;27;28;29;30;31;32;33;34"
"./extensions/servlet/test/com/google/inject/servlet/MultipleServletInjectorsTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111"
"./extensions/servlet/test/com/google/inject/servlet/TransferRequestIntegrationTest.java","4a4d8257ed41d8e2be03fd59a6c9dcf00c2379de","2014-05-10 14:34:44","Sam Berlin","Block when transferring request scope instead of checking owners & throwing exceptions.  This lets users delete hacky spin loops.","30;34;35;92;93;100;101;102;103;104;105"
"./extensions/servlet/test/com/google/inject/servlet/TransferRequestIntegrationTest.java","7dc62e5869d6d14744cc717b4a3d02e30fa22f66","2012-05-27 17:39:27","Sam Berlin","Add a new transferRequest method to ServletScopes which propagates all existing scoped objects.   Allows servlet engines to detach & reattach threads (while waiting for a request to receive results from RPCs).","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122"
"./extensions/servlet/test/com/google/inject/servlet/ServletUtilsTest.java","389cb718a70cd11fdf9c336209246ebcfe944755","2012-05-27 17:44:06","Sam Berlin","Fixed exception in contextpath string manipulation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58"
"./extensions/service/src/com/google/inject/service/CompositeService.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;20;21;24;26;27;28;29"
"./extensions/service/src/com/google/inject/service/CompositeService.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24;25;26;27;28"
"./extensions/service/src/com/google/inject/service/CompositeService.java","4ccf2a3077e701e089cc8d26c831ec493319b37a","2010-09-16 05:38:18","dhanji","Minor cleanups, removing some debug stuff that snuck into the previous commit.","107;111;113"
"./extensions/service/src/com/google/inject/service/CompositeService.java","65888c01862049c0f7744cf4dfac371ce780fb24","2010-09-16 05:32:53","dhanji","Service API extension initial checkin. Support for basic start/stop lifecycle and parallelizing service startup. Needs more integration tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125"
"./extensions/service/src/com/google/inject/service/Service.java","65888c01862049c0f7744cf4dfac371ce780fb24","2010-09-16 05:32:53","dhanji","Service API extension initial checkin. Support for basic start/stop lifecycle and parallelizing service startup. Needs more integration tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67"
"./extensions/service/src/com/google/inject/service/AsyncService.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","20;36;37;38;39;40;41;42;48;49;73;74"
"./extensions/service/src/com/google/inject/service/AsyncService.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/service/src/com/google/inject/service/AsyncService.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20"
"./extensions/service/src/com/google/inject/service/AsyncService.java","4ccf2a3077e701e089cc8d26c831ec493319b37a","2010-09-16 05:38:18","dhanji","Minor cleanups, removing some debug stuff that snuck into the previous commit.","21;56;57;63;64;65;66;81;82;83;84;90;91;92;93;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119"
"./extensions/service/src/com/google/inject/service/AsyncService.java","65888c01862049c0f7744cf4dfac371ce780fb24","2010-09-16 05:32:53","dhanji","Service API extension initial checkin. Support for basic start/stop lifecycle and parallelizing service startup. Needs more integration tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131"
"./extensions/service/test/com/google/inject/service/SingleServiceIntegrationTest.java","b405e0417151915b98c3d2033adb9770336a7bbb","2011-10-16 22:34:21","guice.mirrorbot@gmail.com","Fix flaky service test.  The whole AsyncService thing probably should just be rm'd, but fixing the test for now.","10;21;22;42;43;44;45;47;48;49;50;51"
"./extensions/service/test/com/google/inject/service/SingleServiceIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","3;4;5;13;18"
"./extensions/service/test/com/google/inject/service/SingleServiceIntegrationTest.java","2ee4f18ea8cd06d0adf45e0c7c771a7806c8195a","2010-09-16 05:53:17","dhanji","Fixed a small bug in the async service multi-threaded test.","20;21;22;25;26;27;29;30;34;35;36;38;39;44;45;46;49;50;53;54;55"
"./extensions/service/test/com/google/inject/service/SingleServiceIntegrationTest.java","65888c01862049c0f7744cf4dfac371ce780fb24","2010-09-16 05:32:53","dhanji","Service API extension initial checkin. Support for basic start/stop lifecycle and parallelizing service startup. Needs more integration tests.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./extensions/struts2/src/com/google/inject/struts2/GuiceObjectFactory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","26;33"
"./extensions/struts2/src/com/google/inject/struts2/GuiceObjectFactory.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245"
"./extensions/struts2/src/com/google/inject/struts2/GuiceObjectFactory.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245"
"./extensions/struts2/src/com/google/inject/struts2/GuiceObjectFactory.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245"
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;31;31;32;33;34;35;36;37;38"
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","0aecc68d7249454545e6729b1f9e1d6735dbc0e5","2011-06-30 20:41:17","sberlin","Re-add a space into the args.",""
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","5a886aad54201f4c607616a76cd37d06e7aad209","2011-06-30 20:40:10","sberlin","Minor whitespace tweaks again.",""
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","cf09ab94a983755c987f923cb8477411939f0bb7","2010-12-09 03:14:07","sberlin","put generics back in Struts2Factory.","100;101"
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","c1d48f805da2110074ae21c255671cfde51ee6da","2010-12-09 02:55:58","sberlin","cleanup struts2 examples/code.","100;101"
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","81a0c602ca592234db6fa778809ed3e74a2f2f80","2010-12-02 23:50:16","sberlin@gmail.com","re-add struts2 to build.xml & pom.xml, cleanup compile.","48;49"
"./extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java","95d0418e28f35c24f065c85ca4cfa1534e6ba4e5","2010-12-02 23:23:17","sberlin@gmail.com","changes to the struts2 plugin, by Ben McCann.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230"
"./extensions/struts2/src/com/google/inject/struts2/Struts2GuicePluginModule.java","95d0418e28f35c24f065c85ca4cfa1534e6ba4e5","2010-12-02 23:23:17","sberlin@gmail.com","changes to the struts2 plugin, by Ben McCann.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./extensions/struts2/test/com/google/inject/struts2/Struts2FactoryTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;24;29;30;31;32"
"./extensions/struts2/test/com/google/inject/struts2/Struts2FactoryTest.java","5a886aad54201f4c607616a76cd37d06e7aad209","2011-06-30 20:40:10","sberlin","Minor whitespace tweaks again.",""
"./extensions/struts2/test/com/google/inject/struts2/Struts2FactoryTest.java","95d0418e28f35c24f065c85ca4cfa1534e6ba4e5","2010-12-02 23:23:17","sberlin@gmail.com","changes to the struts2 plugin, by Ben McCann.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85"
"./extensions/struts2/example/src/com/google/inject/struts2/example/ExampleListener.java","95d0418e28f35c24f065c85ca4cfa1534e6ba4e5","2010-12-02 23:23:17","sberlin@gmail.com","changes to the struts2 plugin, by Ben McCann.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51"
"./extensions/struts2/example/src/com/google/inject/struts2/example/ServiceImpl.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6;7;8"
"./extensions/struts2/example/src/com/google/inject/struts2/example/ServiceImpl.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6;7;8"
"./extensions/struts2/example/src/com/google/inject/struts2/example/ServiceImpl.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Counter.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Counter.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Counter.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Main.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Main.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Main.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Service.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Service.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Service.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Count.java","12c1a0a5fe7c2399cfffdb74a95493120a85c267","2010-12-02 23:09:27","sberlin@gmail.com","Pull back struts2 extension code in preperation for changes to make it better.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Count.java","fcb2b1b9ffc18f79a2203d7088dd55614378e59f","2010-11-23 01:39:31","sberlin","discontinue the struts2 extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53"
"./extensions/struts2/example/src/com/google/inject/struts2/example/Count.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53"
"./extensions/mini/src/com/google/inject/mini/MiniGuice.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","135;136;164;165;192;193;210;211;258;259;303;304"
"./extensions/mini/src/com/google/inject/mini/MiniGuice.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","35"
"./extensions/mini/src/com/google/inject/mini/MiniGuice.java","71548951a4e4ff431148937b207f18bee8e0e732","2010-09-15 22:30:59","limpbizkit@gmail.com","Fix singletons to be eager as intended.","263"
"./extensions/mini/src/com/google/inject/mini/MiniGuice.java","24f5f134bbb7f25055503590e6f9eb4d1b86c5f8","2010-09-13 07:25:39","limpbizkit@gmail.com","Remove support for com.google.inject annotations from miniguice. Relying on JSR-330 classes only is simpler, and aligned with the goals for the project.","18;35;48;49;83;84;101;102;109;110;115;116;149;163;164;165;170;171;173;174;175;178;179;180;181;183;184;188;189;190;191;192;193;194;197;201;202;209;210;211;217;222;223;224;229;230;231;257;258;259;291;292;293;294;295;301;302;303;344;345;346;347;348;349;350;351;352;353"
"./extensions/mini/src/com/google/inject/mini/MiniGuice.java","70248eafa90cd70a68b293763e53f6aec656e73c","2010-09-11 08:46:08","limpbizkit@gmail.com","MiniGuice, a proof of concept.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378"
"./extensions/mini/test/com/google/inject/mini/MiniGuiceTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;24;29"
"./extensions/mini/test/com/google/inject/mini/MiniGuiceTest.java","71548951a4e4ff431148937b207f18bee8e0e732","2010-09-15 22:30:59","limpbizkit@gmail.com","Fix singletons to be eager as intended.","19;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253"
"./extensions/mini/test/com/google/inject/mini/MiniGuiceTest.java","24f5f134bbb7f25055503590e6f9eb4d1b86c5f8","2010-09-13 07:25:39","limpbizkit@gmail.com","Remove support for com.google.inject annotations from miniguice. Relying on JSR-330 classes only is simpler, and aligned with the goals for the project.","18;19;21;23;25;26;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223"
"./extensions/mini/test/com/google/inject/mini/MiniGuiceTest.java","70248eafa90cd70a68b293763e53f6aec656e73c","2010-09-11 08:46:08","limpbizkit@gmail.com","MiniGuice, a proof of concept.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","394;395;396;397;398;399;400;401"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","249;250;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","0e896db46024dc7596302f8622276d1c7df02c6b","2013-12-11 23:40:58","Sam Berlin","A Message should have only one source but as it is used in Errors, currently it can have multiple sources. The Message objects is returned from two public methods(Elements#getElements() and Errors#getMessages()) that make any changes in its method declarations difficult. As the first step, I am going to remove all calls to the Message constructor that receives multiple sources from []. So, the only calls will be from Errors that I will deal with separately. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57979416","494;495"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","227;228;229;260;261;287;288;369;370;379;380;381;387;388"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","3d3a9fa2eba286d8408ea933a28a0dcce6d7f7d1","2013-08-09 18:07:07","Christian Edward Gruber","Give more information when duplicate elements are found in a multibound set.","19;20;21;25;26;27;28;29;30;31;32;50;51;52;53;54;55;56;330;331;335;336;337;338;339;341;342;343;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","51829aa27bf05c2c84b6ca90225c61c55c675056","2013-08-09 18:05:27","Christian Edward Gruber","Automated g4 rollback of changelist 50265868.","19;20;21;28;29;31;34;326;327;331;332;333;334;335;337;338;339;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","28c75b267faec7cdc710747bed9ac5f6a3c0c50b","2013-08-09 18:05:05","Christian Edward Gruber","Give more information when duplicate elements are found in a multibound set. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50265868","19;20;21;28;29;31;34;331;332;336;337;338;339;340;342;343;344;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","21a19670ce07439d616a7a38a9907560eaa6a25d","2012-01-21 16:06:49","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","19;22;23;24;25;26;27;28;53;54;55;56;57;58;59;267;282;283;315;316;317"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","c2bee817056d21696eb269287edeb110da90ff24","2011-11-09 23:47:57","Sam Berlin","Fix issue 667, cleanup javadoc for Multibinder","75;76;77;78"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;36;37;38;39;40;44"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","31;32;33;34;35;36"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","183"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","6542fdb264fdcb205af3318f430228cffb191290","2010-10-25 03:47:17","sberlin","issue 553 -- add a mention in the javadoc of MapBinder & Multibinder that the Set & Map are unmodifiable.","85;86;87"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","287355590aa8ad2d87f8ebfac3a0710e3b442c27","2010-10-17 01:31:25","sberlin","flip the order of the type parameters in ProviderWithExtensionVisitor to match the order in the BindingTargetVisitor.","331;332"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","27;36;40;41;217;218;227;228;229;230;286;287;290;294;295;300;321;322;323;324;330;331;332;333;334;335;336;337;338;339;340;345;346;347;348;349;350;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","aab9eba90f6aa02ad3b87b6746d0cb6a82fe5b23","2010-09-18 15:11:27","sberlin","if dependencies aren't calculated for Multibinder yet, return a dependency on Injector.class instead of null.","337;338;339;342"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","f47f05e6fd774a54461105caadeb72dff6ba31a0","2010-09-16 03:29:29","sberlin","style cleanups from jessewilson review.",""
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","32;33;34;35;36;37;39"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","680c8b527ea94df6161aa9a61f00563338221e64","2010-06-11 19:11:13","sberlin","fixes issue 490 -- sets using marker annotations don't work properly all the time.","30;107;108;128;129;150;151;231;232;233;236;238;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","8bc8387f63053ac03b609277093a06019c7b18b3","2010-04-26 02:12:22","sberlin","issue 297 -- allow Multibinder's dependencies to be retrieved in Stage.TOOL.  also added a failing test for MapBinder & Modules.override (analog to existing failing test in MultibinderTest).","38;263;264"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","0e23eb0505fcf0b4e7c53c26c1ecdb6a18362d2a","2009-10-12 16:17:34","limpbizkit","tidy up multibindings doc to specify ordering unsuppress a passing test","68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","0efcc6c784a0466ce88f30b70d651476bd7fa5ee","2009-07-07 20:13:32","netdpb","Added mutlimap support to MapBinder.","158;159;166;167;239;345"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","136dd75b214b44ee605b08bdd70111d9f3cb41fa","2009-06-24 01:31:31","limpbizkit","Fixin' a doc typo","334;335"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","398017ae4ed96750fa54dc9ce59dc2f974dcf541","2009-06-23 06:30:37","limpbizkit","New API: Multibinder.permitDuplicates() and MapBinder.permitDuplicates()","19;34;164;165;166;167;168;169;170;171;172;211;220;221;222;229;239;240;241;242;243;269;273;274;275;276;294;295;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21;30;31;32"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","b8a655214c52cdd8012733577ec3b65281c8be66","2009-01-25 23:26:38","dhanji","Multilbinder now uses findBindingsByType. Should improve startup performance.","42;237;238;239;241;242;243;244"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","21;33;34;39;195;196;197;207;236;237;238;241;242;245;249;282;283;284;285"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","cfa95ae7f134ffadbdb454dbb731bd9093c6e162","2008-11-30 19:52:02","limpbizkit","New type safety for multibindings... I changed the methods to take TypeLiteral<T>s and Class<T>s rather than unsafe Type objects.","91;92;93;94;96;97;103;104;105;106;108;109;110;111;112;113;114;115;116;117;118;124;125;126;127;129;130;131;132;133;134;135;136;137;138;139;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;193;194;195;197;198;205;206;220;224;225;245;246;293;294;295;296"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","b1f42f5df9c4cd8e157a28c24c4e8eb627a7f052","2008-11-26 07:44:53","limpbizkit","Removing the obsolete PrivateModules extension; PrivateModules are now folded-in to core Guice.","31;279;280"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","19;20;21;22;25;31;188;189;196;197;229;230;235;236;237;238;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","6663d02af7c384ce351a76928d1b6c929224b582","2008-06-19 07:57:55","limpbizkit","Axing SourceProviders and SourceProvider in favour of Binder.withSource and Binder.skipSources","30;87;88;89;95;98;99;104;107;108;117;120;121;195;196;197"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","9532e6267f55105992301add5accfb5c62fdeed8","2008-06-18 08:20:54","limpbizkit","Eliminated static from SourceProviders. The new mechanism to specify the source of a binding is like this:   Binder myBinder = binder.withSource(source);","19;20;21;22;24;25;26;27;28;29;30;31;32;33;34;35;36;39;40;41;42;43;44;45;87;88;89;90;91;92;98;99;109;110;121;122;187;188;189;190;197;198;199;200;202;203;204;229;230;231;232;237;238;239;240;241;242;243;244;245;246"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","3beaaaff52598e849659281fed35dc29a221fac4","2008-06-10 06:37:12","limpbizkit","Making Types public for issue 123.","20;22;115;116"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","1601ae5cc3d7931d4ce4b78e0b493acdd6132ff1","2008-06-03 22:21:04","kevinb9n","Adopt latest google collections snapshot (partially); some style cleanup","21;24;167;168;169;170;171;172;173;174"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","eab76471fbc2118a3c07d103d4b5548e153ed9e7","2008-05-26 19:45:12","limpbizkit","A bunch of polish fixes for 2.0:","22;23;115;116"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","d6967b937274e0e1dab28a196d7aab647c5cc6a4","2008-05-16 15:28:51","limpbizkit","More testcases for multibindings, including some fairly specific tests for toString() on the Binder API","23;75;76;77"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","e97e15b186baa9fc874eabdf5d293d3f47acebfc","2008-05-16 14:53:49","limpbizkit","Checking in dpb's MapBinder code. This code is a dramatic improvement over the previous rev of MapBinder","27;150;178;179;180;181;183;184;189;190;191;195;196;205;206;209;210;211;234;235;236;237;238;239;240;241;244;245"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","c913489bebe76fb0b6b430010c69b66164b52b4d","2008-05-13 07:23:53","limpbizkit","Whoops - missed a hashCode problem","248;249"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","c75363acf0118de3123ef5e90cd0682562ea2d79","2008-05-13 07:16:26","limpbizkit","Checking in David Baker's MapBinder implementation.","25;26;149;150;152;153;180;182;183;184;185;186;192;193;202;203;212;213;216;217;218;244;245;246;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","83b510c924832d38df1a3030e69863098432fffb","2008-05-01 20:35:02","limpbizkit","Fixes from David P Baker's review.","83;84;85;94;95;96;97;106;107;108;109;114;115;116;117;118;119;154;156;158;159;161;162;166;167;170;171;172;173;174;175;176;177;178;179;180;181;182;183;177;178;179;180;181;182;183;184;185;186;238;239"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","7c533acbed7ce9c051e847a290dd2060915e91aa","2008-05-01 14:17:53","limpbizkit","There was a pretty horrible bug in Multibinder where collections were checked for annotation but not element type.","220;221;222;248;249;251;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","084e49fb2dad7b5c0ec8ca3367247f5d7163caa6","2008-05-01 10:01:47","limpbizkit","Multibinder needs to be public!","82;83;92;93;103;104"
"./extensions/multibindings/src/com/google/inject/multibindings/Multibinder.java","5019270849439d3aa58bc086a4514d7471716a35","2008-05-01 09:55:02","limpbizkit","New multibindings extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibinderBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27;28"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibinderBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/multibindings/src/com/google/inject/multibindings/MultibinderBinding.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","33"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibinderBinding.java","589e44872b23417df569cc0783a82f64d83fa46b","2010-10-05 03:41:40","sberlin","convert {@literal<} to &lt;","31;32;44;45;46;47;55;56;57;58"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibinderBinding.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","25;26;27;43;44;45;46;47;48;49"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/multibindings/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","27"
"./extensions/multibindings/src/com/google/inject/multibindings/MultibindingsTargetVisitor.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinderBinding.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;28;29;30"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinderBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinderBinding.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","41"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinderBinding.java","589e44872b23417df569cc0783a82f64d83fa46b","2010-10-05 03:41:40","sberlin","convert {@literal<} to &lt;","31;32;33;34;35;36;37;38;43;44;52;53;54;55;61;62;63;64;74;75;76;77"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinderBinding.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98"
"./extensions/multibindings/src/com/google/inject/multibindings/OptionalBinderBinding.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75"
"./extensions/multibindings/src/com/google/inject/multibindings/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","19;20"
"./extensions/multibindings/src/com/google/inject/multibindings/package-info.java","484f75f87f526b692f74afdef0e34d2bc6937f0c","2009-05-19 18:18:03","limpbizkit","Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.","18;19;20"
"./extensions/multibindings/src/com/google/inject/multibindings/package-info.java","5019270849439d3aa58bc086a4514d7471716a35","2008-05-01 09:55:02","limpbizkit","New multibindings extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","41;42;43"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","28;29;30;31;32;33;34"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","21a19670ce07439d616a7a38a9907560eaa6a25d","2012-01-21 16:06:49","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","35;36;37;38;39;40;43"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;25"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","e97e15b186baa9fc874eabdf5d293d3f47acebfc","2008-05-16 14:53:49","limpbizkit","Checking in dpb's MapBinder code. This code is a dramatic improvement over the previous rev of MapBinder","34;35;36;37;38"
"./extensions/multibindings/src/com/google/inject/multibindings/Element.java","c75363acf0118de3123ef5e90cd0682562ea2d79","2008-05-13 07:16:26","limpbizkit","Checking in David Baker's MapBinder implementation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","d1d7ef3de7f3aadc177f311c8ceb06887180a5b1","2014-04-01 22:10:51","Christian Edward Gruber","Fix MapBinder's duplicate key error message so that more than one binding with the same source gets listed twice.  This was causing a problem with the tests that turned stack traces off, because the two different bindings line numbers were both changed to "Unknown Source", so it collapsed them into a single item.","28;33;37;60;409;410;411;412;769;770;771;772;773;774;775;776;777;778"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","32;35;37;38;45;47;51;320;341;342;343;344;345;346;366;367;369;370;410;411;418;419;420;421;422;423;424;425;426;427;429;430;431;514;515;516;517;518;519;541;542;546;547;548;549;550;551;552;668;669;670;680;681;682;683;684;685;686;687"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","8859456e7c13e83341641fafc8e6f79651161b0f","2014-03-10 17:58:41","Sam Berlin","Update MapBinder so it fails on duplicate bindings with a more descriptive error message, including all the keys that had duplicates and where the duplicate bindings were bound.  Example error message that has 'a' bound twice and 'b' bound twice:","28;34;35;36;45;310;311;385;388;389;390;391;392;393;394;395;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","3338a48b6abb9a0641dc3c2c169bb59b9960dc15","2013-12-06 22:07:34","Sam Berlin","Fix issue 734 -- MapBinder doesn't allow injection of Map<K, javax.inject.Provider<V>>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798745","25;216;217;218;219;220;221;222;223;224;309;329;369;370;371;372;402;403;404;405;406;407;408;481"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","19;20;597;598;606;607;608;609;610;611;612;613;614;636;637;640;641;642;643;645;646;647"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","25;26;27;28;29;30;31;32;37;49;50;51;52;53;54;55;56;338;339;340;341;342;343;344;345;346;347;358;368;369;370;371;372;373;449;450;452;453;468;469;584;585;586;587;588;589;590;591;592;593;595;596;597;598;600;601;603;604;608;609;611;612;613;614;617;618;622;623;624;625;626;628;629;630;631;632;633;638;639;643;644;665;666;667;668"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","21a19670ce07439d616a7a38a9907560eaa6a25d","2012-01-21 16:06:49","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","19;25;26;27;28;29;30;31;32;56;57;58;59;60;61;62;63;337;338;469"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;25;26;27;37;38;39;40;42;43;44;45;46;47"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31;32;33;34;35"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","6cf0488ecfd2dc6acaa9ee78fe1b57d1bc07537f","2011-06-16 20:02:56","drew.mclaughlin","Remove unnecessary import added in r1555","47"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","895fa396feac44617bd45d27329d9edcab0447ad","2011-06-16 20:00:26","drew.mclaughlin","Implement hashCode and equals for MultimapBinder.","47;569;570;571;572;573;574;575;576;577"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","249"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","6542fdb264fdcb205af3318f430228cffb191290","2010-10-25 03:47:17","sberlin","issue 553 -- add a mention in the javadoc of MapBinder & Multibinder that the Set & Map are unmodifiable.","96;97;98"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","287355590aa8ad2d87f8ebfac3a0710e3b442c27","2010-10-17 01:31:25","sberlin","flip the order of the type parameters in ProviderWithExtensionVisitor to match the order in the BindingTargetVisitor.","397;398"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","20;28;31;36;37;39;40;42;43;49;127;128;151;152;175;176;194;195;202;203;210;211;218;219;225;226;227;232;233;234;235;287;298;299;300;301;302;306;333;334;343;344;350;351;352;353;355;356;359;364;365;366;370;379;380;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;459;460;461;462;463;464;465;569;571;572;575;576;577;578;579;609;610;611;612;613;614;615;616"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","27;28;29;30"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","7bcec8815e3cb9c4f910c4a9024af7a7e664c7a0","2010-06-24 01:03:26","sberlin@gmail.com","fixes issue 263 -- introduces ability to "deduplicate" bindings.  all BindingImpl subclasses now implement equals/hashcode properly and duplicates can be erased by throwing them into a set (preferably a LinkedHashSet to preserve the order of the elements).  no new API methods.","330;331;358;359;417;418;452;453;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","0e23eb0505fcf0b4e7c53c26c1ecdb6a18362d2a","2009-10-12 16:17:34","limpbizkit","tidy up multibindings doc to specify ordering unsuppress a passing test","74;75;76;77;82;83;84;85;86;87"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","ada2f98ef48dc9740dc5e6922743d6f7a1a5cc2c","2009-09-07 17:40:48","limpbizkit","Make MapBinder buildable in Java 5. A prior commit accidentally pulled in some Java6isms","402;435;440;448;464"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","fb3a896d5e4eef4fcaebdfeb609e939010718788","2009-07-08 19:49:54","netdpb","Cleaned up MapBinder code, including using ImmutableSet and ImmutableMap where appropriate. Moved multimap binding into a nested module class.","25;28;36;41;188;189;196;197;198;218;219;220;221;222;223;224;227;228;229;296;297;339;340;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;402;403;404;405;406;407;408;417;418;419;420;423;424;425;430;431;432;433;434;435;436;437;438;440;443;445;446;447;448;452;450;451;453;454;457;458;463;464;466;467;469;470;473;479;480;481;482;483;484;485;486;487;488;489;490"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","0efcc6c784a0466ce88f30b70d651476bd7fa5ee","2009-07-07 20:13:32","netdpb","Added mutlimap support to MapBinder.","25;32;41;90;91;92;93;116;117;140;141;164;165;193;194;195;196;197;198;199;200;210;213;214;215;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;278;279;287;292;293;298;324;325;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","398017ae4ed96750fa54dc9ce59dc2f974dcf541","2009-06-23 06:30:37","limpbizkit","New API: Multibinder.permitDuplicates() and MapBinder.permitDuplicates()","21;199;200;201;202;203;204;205;206;207;263;264;265;266;267;295;296;298;302;303;304"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;26"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","19;30;31;270;271;272;276;277;295;296;297;298;302;303;314;315;316;317"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","4994bf6a8e9986ca9013a908c340f019084be30f","2008-12-27 02:54:59","limpbizkit","Mikeward's Javadoc fixes. Mike read through all of our Javadoc (thank you!) and found a few typos and simplifications","77;78;80;81"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","cfa95ae7f134ffadbdb454dbb731bd9093c6e162","2008-11-30 19:52:02","limpbizkit","New type safety for multibindings... I changed the methods to take TypeLiteral<T>s and Class<T>s rather than unsafe Type objects.","30;31;33;98;99;100;101;102;105;106;109;110;111;112;113;114;115;119;120;121;122;125;126;127;128;129;130;131;132;133;134;135;138;139;140;141;142;143;144;148;149;150;151;154;155;156;157;158;159;160;161;162;163;164;167;168;169;170;171;172;173;176;177;178;179;180;181;182;183;184;185;186;187;190;191;192;193;194;195;196;197;199;200;201;202;203;206;207;208;209;210;211;212;213;216;217;218;219;221;222;223;224;232;233;240;241;258;259;260"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","19;20;27;28;226;227;236;237;250;251;269;270"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","6663d02af7c384ce351a76928d1b6c929224b582","2008-06-19 07:57:55","limpbizkit","Axing SourceProviders and SourceProvider in favour of Binder.withSource and Binder.skipSources","29;96;97;98;103;117;131;160;161;227;232;233;234;235"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","9532e6267f55105992301add5accfb5c62fdeed8","2008-06-18 08:20:54","limpbizkit","Eliminated static from SourceProviders. The new mechanism to specify the source of a binding is like this:   Binder myBinder = binder.withSource(source);","19;20;21;22;23;24;25;26;27;28;31;32;33;34;35;96;97;98;99;100;101;161;162;227;228;229;230;231;235;236;237;238;239;240;244;245;246;247;250;251;252;253;251;252;253;254;255;256;257;258;268;269;272;273;274;275;276;277"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","49f67c0f62bc1748dd32e1d86616085231e974e7","2008-06-10 20:56:17","limpbizkit","Fixing owner types so they're no longer missing in ThrowingProviderBinder. Also adding the necessary precondition checks so that we always include 'em when necessary.","147;148"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","3beaaaff52598e849659281fed35dc29a221fac4","2008-06-10 06:37:12","limpbizkit","Making Types public for issue 123.","20;22;137;138;144;145;149;150;151;152"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","1601ae5cc3d7931d4ce4b78e0b493acdd6132ff1","2008-06-03 22:21:04","kevinb9n","Adopt latest google collections snapshot (partially); some style cleanup","21;25;221;222"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","eab76471fbc2118a3c07d103d4b5548e153ed9e7","2008-05-26 19:45:12","limpbizkit","A bunch of polish fixes for 2.0:","22;23;137;138;144;145;149;150;151;152"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","fa86216b3d417a08424a964f5f9e17dded91ce88","2008-05-16 15:35:42","limpbizkit","Giving DPB full credit for authoring the MapBinder code.","88"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","d6967b937274e0e1dab28a196d7aab647c5cc6a4","2008-05-16 15:28:51","limpbizkit","More testcases for multibindings, including some fairly specific tests for toString() on the Binder API","24;92;93;94"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","e97e15b186baa9fc874eabdf5d293d3f47acebfc","2008-05-16 14:53:49","limpbizkit","Checking in dpb's MapBinder code. This code is a dramatic improvement over the previous rev of MapBinder","28;31;32;99;100;103;104;105;106;112;113;116;117;118;119;125;126;129;130;131;132;143;144;145;146;147;149;150;151;152;153;154;155;156;157;158;159;160;195;198;199;200;201;202;203;205;206;207;208;209;210;213;214;215;216;219;220;221;222;223;224;225;226;227;229;230;231;232;233;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;255;256;257;258;259;260;262;263;264;265;268;269;270;271;272;273;274;275;276;277;278;280;281;282;283;284;285;286;287;288;290;291;259;260;261;262;264;268;269;279;280;281;282;285;286;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328"
"./extensions/multibindings/src/com/google/inject/multibindings/MapBinder.java","c75363acf0118de3123ef5e90cd0682562ea2d79","2008-05-13 07:16:26","limpbizkit","Checking in David Baker's MapBinder implementation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286"
"./extensions/multibindings/src/com/google/inject/multibindings/OptionalBinder.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","28;58;59;70;71;72;73;74;77;78;79;80;81;82;83;86;87;94;95;99;101;102;106;107;108;148;149;150;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","217;218;219;220"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","40;41;42;151;152;159;160;161;162;163;164;165;168"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","19;20;21;22;23;24;25;26;27;28;29;31;35;36;37;38;39;40;41;42;43;44;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;86;87;88;89;90;91;93;94;95;96;99;106;107;115;116;117;118;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;157;158;159;160;161;162;163;164;165;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","88ee52dec9920c95e2f0ed3c43e625872c5d1fd4","2012-02-27 02:22:30","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.",""
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","21a19670ce07439d616a7a38a9907560eaa6a25d","2012-01-21 16:06:49","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","30;32;33;36;46;47;48;49;56;57;63;64;65;70;71;72"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","e97e15b186baa9fc874eabdf5d293d3f47acebfc","2008-05-16 14:53:49","limpbizkit","Checking in dpb's MapBinder code. This code is a dramatic improvement over the previous rev of MapBinder","20;26;27;28;29;31;33;34;35;37;38;45;46;47;48;50;51;57;63"
"./extensions/multibindings/src/com/google/inject/multibindings/RealElement.java","c75363acf0118de3123ef5e90cd0682562ea2d79","2008-05-13 07:16:26","limpbizkit","Checking in David Baker's MapBinder implementation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","76;601;602"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","14e2703cd15b0ac745a0df80d25800692d8c727e","2014-05-03 04:39:35","Sam Berlin","Implement hashCode and equals on type returned by Providers.of(...). There doesn't seem to be any reason *not* to provide these methods, and it means downstream code that does","333;334;388;389;727;728;729;733;734;735;736"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","37;75;1132;1133;1134;1135;1136;1137;1138;1139;1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;1150;1151;1152;1153;1154;1155;1156;1157;1158"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","37;76;1134;1135;1136;1137;1138;1139;1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;1150;1151;1152;1153;1154;1155;1156;1157;1158;1159;1160"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","28;29;30;32;54;89;90;1064;1065;1066;1067;1068;1072;1073;1074;1075;1086;1087;1088;1100;1101;1102;1103;1104;1105;1106;1107;1108;1109;1110;1111;1112;1113;1114;1115;1116;1119;1122;1124;1125;1126;1129;1133;1134;1136;1137;1138;1139;1140;1141;1142;1143;1144;1145;1146;1147;1148;1149;1150;1151;1152;1153;1154"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","96e81ba55441fd11c189d903ee2bd1806a23bd70","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us.","30;31;47;52;53;78;92;93;678;679;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;847;848;875;876;877;878;879;880;881;882;883;884;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910;911;912;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939;940;941;942;943;944;945;946;947;948;949;950;951;952;953;954;955;956;957;958;959;960;961;962;963;964;965;966;967;968;969;970;971;972;973;974;975;976;977;978;979;980;981;982;983;984;985;986;987;988;989;990;991;992;993;994;995;996;997;998;999;1000;1001;1002;1003;1004;1005;1006;1007;1008;1009"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","40;42;45;314;315;321;322;368;369;376;377;419;420;443;444;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","3d3a9fa2eba286d8408ea933a28a0dcce6d7f7d1","2013-08-09 18:07:07","Christian Edward Gruber","Give more information when duplicate elements are found in a multibound set.","51;55;56;57;58;59;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;308;309;313;314;315;316;317;321;322;329;330;331;332;336;337;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","51829aa27bf05c2c84b6ca90225c61c55c675056","2013-08-09 18:05:27","Christian Edward Gruber","Automated g4 rollback of changelist 50265868.","51;278;279;283;284;285;286;287;291;292;299;300;301;302;306;307;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","28c75b267faec7cdc710747bed9ac5f6a3c0c50b","2013-08-09 18:05:05","Christian Edward Gruber","Give more information when duplicate elements are found in a multibound set. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50265868","51;277;278;282;283;284;285;286;290;291;298;299;300;301;305;306;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","21a19670ce07439d616a7a38a9907560eaa6a25d","2012-01-21 16:06:49","Sam Berlin","Fix issue 670, keep values from MapBinder & Multibinder distinct.","44;51;65;73;74;608;609;610;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","45ef01760942b9575a6094effeb4eb034db9a113","2012-01-13 23:22:35","Sam Berlin","Cleanup a few things: 1) Remove invalid annotation. 2) Update to Guava 11.0.1, from r9. 3) Remove some unused files. 4) Forcibly keep Throwables, since servlet uses it but core doesn't (so jarjar was wiping it). 5) Disable failing Multibinder test.","603;604"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","e390a0f7070733c9aa7e16f40e56e5a229dfcd97","2011-09-09 21:26:10","guice.mirrorbot@gmail.com","Failing test for a multibinder bug reported here: http://groups.google.com/group/google-guice/browse_thread/thread/934e30b7ed0da98f/b90383ad4cd1228c","602;603;604;605;606;607;608;609;610;611;612;613;614;615"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","ee443bce9731bb8da1eb60202f68de4c4c298698","2011-09-09 21:19:11","guice.mirrorbot@gmail.com","Fix issue 644.  Print a better error message when requestStaticInjection is called on an interface, fix it so that static injection errors show the source of the static injection.","602;603;604;605;606;607;608;609;610;611;612;613;614;615"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","6585c73bd39373a7ec3613f0bd77e376b118db5f","2011-08-09 05:44:38","limpbizkit","Failing test for a multibinder bug reported here: http://groups.google.com/group/google-guice/browse_thread/thread/934e30b7ed0da98f/b90383ad4cd1228c","602;603;604;605;606;607;608;609;610;611;612;613;614;615"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;25;26;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;43;44;45;51;52;53;54;55;56;57;58;59;60;61;62;63;64"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","54;55;56;57;58;59"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","48;402;403;404;405;412;413;414"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","19;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;41;42;43;59;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;73;74;94;95;96;97;99;100;101;102;106;107;114;115;116;118;119;120;121;122;123;124;125;129;130;136;137;138;140;141;142;143;144;145;146;147;151;152;161;162;163;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;183;184;191;192;193;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;213;214;221;222;223;227;228;232;233;237;238;239;243;254;255;264;265;266;271;275;276;282;283;284;290;291;292;293;297;298;299;305;306;307;308;315;316;317;320;321;325;326;327;334;335;336;337;344;345;346;349;350;524;525;532;533;538;558;559;564;565"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","22;34;35;36;37;38;39"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","680c8b527ea94df6161aa9a61f00563338221e64","2010-06-11 19:11:13","sberlin","fixes issue 490 -- sets using marker annotations don't work properly all the time.","21;22;46;47;48;50;51;52;53;57;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","34d2f00eee00ba170c3dffa72154399b830a67a6","2010-05-02 20:11:28","sberlin","add two more failing tests for Map/Multibinder -- permitDuplicates should be allowable through Module.overrides calls.","463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","8bc8387f63053ac03b609277093a06019c7b18b3","2010-04-26 02:12:22","sberlin","issue 297 -- allow Multibinder's dependencies to be retrieved in Stage.TOOL.  also added a failing test for MapBinder & Modules.override (analog to existing failing test in MultibinderTest).","26;31;40;41;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","d8750fdcd8a32d0e6caaa2919414a479acbd1bb6","2009-08-10 23:30:46","limpbizkit","some test fixes for ScopeChecker and Multibinder","38;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","398017ae4ed96750fa54dc9ce59dc2f974dcf541","2009-06-23 06:30:37","limpbizkit","New API: Multibinder.permitDuplicates() and MapBinder.permitDuplicates()","233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","63a9605ee0b3190071c38ce7ada836cbbb9d2864","2009-03-30 17:28:16","limpbizkit","Test cases that prove we have reliable iteration order for Multibinder and MapBinder","31;43;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;31;32"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","19;23;35;36;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","222;223;224;225;239;240;241;242"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","a6e0e787c546a1d5e82861b5c851ca09e3bbfd06","2008-09-03 06:19:56","limpbizkit","Moving error sources so they're now reported in the same place for configuration errors and runtime errors. This means that instead of seeing this:   1) Error at com.google.Foo.class(Foo.java:123)       No constructor for Foo was found","253;254;255;256"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","9532e6267f55105992301add5accfb5c62fdeed8","2008-06-18 08:20:54","limpbizkit","Eliminated static from SourceProviders. The new mechanism to specify the source of a binding is like this:   Binder myBinder = binder.withSource(source);","19;20;21;23;24;25;26;27;28;29;30;31;35;36;41;43;254;255;265;266"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","49f67c0f62bc1748dd32e1d86616085231e974e7","2008-06-10 20:56:17","limpbizkit","Fixing owner types so they're no longer missing in ThrowingProviderBinder. Also adding the necessary precondition checks so that we always include 'em when necessary.","213;214;216;217;230;231;233;234"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","eab76471fbc2118a3c07d103d4b5548e153ed9e7","2008-05-26 19:45:12","limpbizkit","A bunch of polish fixes for 2.0:","20;244;245;246;247;248;249"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","d6967b937274e0e1dab28a196d7aab647c5cc6a4","2008-05-16 15:28:51","limpbizkit","More testcases for multibindings, including some fairly specific tests for toString() on the Binder API","235;236;237;238;239;240;241;242;243;244;245;246;247;248"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","83b510c924832d38df1a3030e69863098432fffb","2008-05-01 20:35:02","limpbizkit","Fixes from David P Baker's review.","242;243"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","7c533acbed7ce9c051e847a290dd2060915e91aa","2008-05-01 14:17:53","limpbizkit","There was a pretty horrible bug in Multibinder where collections were checked for annotation but not element type.","141;142;143;144;145;146;147;148;149;150;151;152;153;154"
"./extensions/multibindings/test/com/google/inject/multibindings/MultibinderTest.java","5019270849439d3aa58bc086a4514d7471716a35","2008-05-01 09:55:02","limpbizkit","New multibindings extension.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232"
"./extensions/multibindings/test/com/google/inject/multibindings/AllTests.java","cc8870bfca3dc44f669322d3f6dabf4a55f025ce","2014-04-01 22:08:53","Christian Edward Gruber","Add OptionalBinderTest into multibindings AllTests. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63966263","31"
"./extensions/multibindings/test/com/google/inject/multibindings/AllTests.java","08861260a770d93ab35bbfa1bac573ca64e8cd37","2008-05-13 07:22:11","limpbizkit","AllTests for multi- and map binders","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33"
"./extensions/multibindings/test/com/google/inject/multibindings/WeakKeySetUtils.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./extensions/multibindings/test/com/google/inject/multibindings/WeakKeySetUtils.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./extensions/multibindings/test/com/google/inject/multibindings/WeakKeySetUtils.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","19;26;27;31;37;41;42;43;51;53;57;61;64;133;134;135;136;137;138;139;140;141;142;143;144;145;146;148;149;150;151;152;153;154;155;162;163;164;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;377;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;842;843;847;848;852;853;857;858;859;860;862;863;867;868;871;872;880;881;897;898;899;900"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","8ad60eb50961e000c89099bb767489cf551d995b","2014-03-10 16:49:46","Sam Berlin","Change LinkedBindingBuilder.toProvider(Provider) to accept a jsr330 provider, in addition to the Guice Provider.  This is an incompatible change for people who extend LinkedBindingBuilder, but not for people who use it.","138;139;379;380"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","3338a48b6abb9a0641dc3c2c169bb59b9960dc15","2013-12-06 22:07:34","Sam Berlin","Fix issue 734 -- MapBinder doesn't allow injection of Map<K, javax.inject.Provider<V>>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798745","21;157;158;159;160;161;162;163;164;165;167;181;182;183;208;215;216;217;218;219;220;221;222;223;224;225;234;235;236;237;238;239;240;241"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","35;223;224"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","bf2b16c06a5ff7c099fe60f9a46cfb130ce45962","2013-05-16 01:39:15","Christian Edward Gruber","Add support for ProvisionListeners to notify on toInstance & constant bindings.","503;504;537;538"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","35;36;37;38;39;40;47;50;51;52;53;54"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","46;47"
"./extensions/multibindings/test/com/google/inject/multibindings/SpiUtils.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574"
"./extensions/multibindings/test/com/google/inject/multibindings/Collector.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","21;22;23;24;27;38;39;40;41;42;43"
"./extensions/multibindings/test/com/google/inject/multibindings/Collector.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/multibindings/test/com/google/inject/multibindings/OptionalBinderTest.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","32;63;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939"
"./extensions/multibindings/test/com/google/inject/multibindings/OptionalBinderTest.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","32;62;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937"
"./extensions/multibindings/test/com/google/inject/multibindings/OptionalBinderTest.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","32;63;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939"
"./extensions/multibindings/test/com/google/inject/multibindings/OptionalBinderTest.java","af24f632f90fc91daeb30172b874405c131592c8","2014-04-01 22:07:55","Christian Edward Gruber","Adds a new OptionalBinder.  OptionalBinder allows frameworks to setup bindings for items that user code may or may not bind.  It also allows frameworks to set default values that users can override.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;870;871;872;873;874;875;876;877;878;879;880;881;882;883;884;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910;911;912;913;914;915;916;917;918"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","900;901"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","d57f8ece5508afc66c4768396c54b412dc9f2cc2","2014-04-08 16:25:33","Sam Berlin","The bug in the test that became flaky has been fixed. Note that this is not a strict rollback of the rollback - I've added protection against the NPE that would happen if there's a GC between the isBlacklisted call and the getSources call.","34;64;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939;940"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","c013facb2aa0af03206fd1af2d8314f6a414ec98","2014-04-08 16:24:55","Sam Berlin","*** Reason for rollback ***","34;63;911;912;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","bab9b6082ff7c3aefac2dc8c7de0468fe60fe8f6","2014-04-01 22:09:53","Christian Edward Gruber","Enhance WeakKeySet to auto evict keys and avoid calling toString on Keys.","34;64;913;914;915;916;917;918;919;920;921;922;923;924;925;926;927;928;929;930;931;932;933;934;935;936;937;938;939;940"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","cade897b45ffe5d9d4e48ae7009cf74d8a91e335","2014-04-01 22:07:02","Christian Edward Gruber","Preparations for OptionalBinder.  This fixes MapBinder's SPI so elements from different MapBinders are distinct, and also fixes ProviderLookup's Provider so it exposes its dependency, which allows MapBinder to properly find its dependencies. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=63811558","33;52;69;84;85;374;375;378;379;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;875;876;877;878;879;880;881;882;883;884;885;886;887;888;889;890;891;892;893;894;895;896;897;898;899;900;901;902;903;904;905;906;907;908;909;910"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","8859456e7c13e83341641fafc8e6f79651161b0f","2014-03-10 17:58:41","Sam Berlin","Update MapBinder so it fails on duplicate bindings with a more descriptive error message, including all the keys that had duplicates and where the duplicate bindings were bound.  Example error message that has 'a' bound twice and 'b' bound twice:","19;44;87;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","3338a48b6abb9a0641dc3c2c169bb59b9960dc15","2013-12-06 22:07:34","Sam Berlin","Fix issue 734 -- MapBinder doesn't allow injection of Map<K, javax.inject.Provider<V>>. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=57798745","74;75;76;77;112;113;114;115;138;139;140;141;164;165;166;167;197;198;199;200;201;202;232;233;234;235;236;237"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","6c69bcf53d4122b0f05f44783c0d8a61afd83911","2013-09-18 17:55:21","Christian Edward Gruber","An alternative way to support ShareableModule, Modules.override and Multibinder: use annotations that compare equal iff the binding strategy matches, so Guice will dedupe for us. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=50556753","28;30;38;47;49;50;67;321;322;323;324;325;326;327;328;329;330;331;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;390;391;655;656;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;21;25;26;30;31;43;44;47;50"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","41;42;43;44"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","895fa396feac44617bd45d27329d9edcab0447ad","2011-06-16 20:00:26","drew.mclaughlin","Implement hashCode and equals for MultimapBinder.","44;45;46;308;320;321;322;323;324;325;326;327;328;329;330"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","35;43;489;490;491;492;497;498;499"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","75fcf6f3a7ae2000b8ed85038dfd33bedd0503fa","2010-09-20 00:42:24","sberlin","issue 539 - extension SPI for Multibinder/MapBinder.","20;21;22;23;24;44;77;78;79;80;104;105;109;110;120;121;122;124;125;126;128;129;133;134;142;143;144;146;147;148;150;151;155;156;166;167;168;170;171;172;173;174;175;178;179;180;181;185;186;195;196;197;199;200;201;202;203;204;207;208;209;210;214;215;222;223;224;228;229;230;231;235;236;240;241;242;246;259;260;269;270;271;276;277;281;282;283;290;291;292;293;299;300;301;305;306;307;314;315;316;317;317;318;319;322;323;327;328;329;334;335;336;337;343;344;345;349;350;354;355;356;363;364;365;366;369;370;371;378;379;380;577;578;579;580;587;588;593;612;613;617;618;619;638;639"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","37;38;39;40"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","680c8b527ea94df6161aa9a61f00563338221e64","2010-06-11 19:11:13","sberlin","fixes issue 490 -- sets using marker annotations don't work properly all the time.","19;21;22;23;24;40;45;46;47;48;49;51;52;53;54;60;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","34d2f00eee00ba170c3dffa72154399b830a67a6","2010-05-02 20:11:28","sberlin","add two more failing tests for Map/Multibinder -- permitDuplicates should be allowable through Module.overrides calls.","517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","8bc8387f63053ac03b609277093a06019c7b18b3","2010-04-26 02:12:22","sberlin","issue 297 -- allow Multibinder's dependencies to be retrieved in Stage.TOOL.  also added a failing test for MapBinder & Modules.override (analog to existing failing test in MultibinderTest).","27;32;40;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","0efcc6c784a0466ce88f30b70d651476bd7fa5ee","2009-07-07 20:13:32","netdpb","Added mutlimap support to MapBinder.","23;41;44;57;58;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;473;474;475;476;477"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","398017ae4ed96750fa54dc9ce59dc2f974dcf541","2009-06-23 06:30:37","limpbizkit","New API: Multibinder.permitDuplicates() and MapBinder.permitDuplicates()","236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","63a9605ee0b3190071c38ce7ada836cbbb9d2864","2009-03-30 17:28:16","limpbizkit","Test cases that prove we have reliable iteration order for Multibinder and MapBinder","32;42;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;31"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","19;22;34;35;42;238;239;240;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","253;254;255;256"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","a6e0e787c546a1d5e82861b5c851ca09e3bbfd06","2008-09-03 06:19:56","limpbizkit","Moving error sources so they're now reported in the same place for configuration errors and runtime errors. This means that instead of seeing this:   1) Error at com.google.Foo.class(Foo.java:123)       No constructor for Foo was found","238;239;287;288;289;290;291"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","9532e6267f55105992301add5accfb5c62fdeed8","2008-06-18 08:20:54","limpbizkit","Eliminated static from SourceProviders. The new mechanism to specify the source of a binding is like this:   Binder myBinder = binder.withSource(source);","19;20;22;23;24;25;26;27;28;29;30;34;35;41;223;224;225;226;227;228;287;288;289;290"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","49f67c0f62bc1748dd32e1d86616085231e974e7","2008-06-10 20:56:17","limpbizkit","Fixing owner types so they're no longer missing in ThrowingProviderBinder. Also adding the necessary precondition checks so that we always include 'em when necessary.","244;245;247;248"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","eab76471fbc2118a3c07d103d4b5548e153ed9e7","2008-05-26 19:45:12","limpbizkit","A bunch of polish fixes for 2.0:","20;278;279;280;281;282;283"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","fa86216b3d417a08424a964f5f9e17dded91ce88","2008-05-16 15:35:42","limpbizkit","Giving DPB full credit for authoring the MapBinder code.","33"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","d6967b937274e0e1dab28a196d7aab647c5cc6a4","2008-05-16 15:28:51","limpbizkit","More testcases for multibindings, including some fairly specific tests for toString() on the Binder API","269;270;271;272;273;274;275;276;277;278;279;280;281;282;283"
"./extensions/multibindings/test/com/google/inject/multibindings/MapBinderTest.java","c75363acf0118de3123ef5e90cd0682562ea2d79","2008-05-13 07:16:26","limpbizkit","Checking in David Baker's MapBinder implementation.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","334;335"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","334;335"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","405828baafef04878c8b5bd57f90a9740bbef4a6","2011-02-06 17:59:07","sberlin","issues 592 & 591, documentation updates.","101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","fdd95007ad6f2ef60e57c174c546f5c7678cb714","2010-11-03 13:08:56","sberlin","made new classes final.","184;185"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","181"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","313;314"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","b5a75ed3c72d772e7dc9f771a63b3e7226695919","2010-07-31 16:08:27","sberlin","issue 506 - fail fast & with a useful error message when an AssistedInject factory has Provider<T> as a factory type.  patch ( slightly modified) by ffaber.","177;178;179;180"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","88f9a14dc9fa9f6704f8a86e376b7f218e492f98","2010-07-17 16:39:00","sberlin@gmail.com","remove confusing behavior from assistedinject -- it used to allow factory creations to be resolved by the injector if the return key matched something in the injector.  now it always creates new objects.  the prior behavior created a scenario where, if the following pseudo-code was used...","160;161;162;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","3748e4a0979e6332ab9f0a3601ab5b8e595b7a12","2010-05-23 13:40:06","sberlin","issue 329 - cleanup error message for under-specified assistedinject factory.","22;328;329;330;331"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","b5ec94a953eb64b773e56658f50e728f47519288","2010-03-27 20:36:13","sberlin","patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the "old" behavior (ordered matching of parameters, non-guiced objects, etc..) by using @AssistedInject+FactoryProvider, but using @Inject or @AssistedInject with FactoryModuleBuilder will give you the new behavior.","59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","02d505cd72ebdfe2ccfce560969797c4b00f2bc2","2009-08-19 18:41:12","netdpb","Fixed typo in documentation.","126;127"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","6840fcbcaaf1dda6b1eb387b1b7811599a69eaa5","2009-08-19 18:31:04","limpbizkit","Jesse's tweaks to aragos' patch r1063. His patch was quite well implemented and these changes are mostly pedantic.","42;43;44;45;46;47;48;49;50;51;165"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryModuleBuilder.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","66;69;70;71;73;74;75"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;26;27"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","24;25"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","24;25"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","87aea1b0c3c1c8689468c8e7d89d128f15e8030a","2010-02-02 04:55:45","isaac.q.shum","Fix for assisted inject bug introduced in r1120.","97;98"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","2cd3f72da00e059a8ed2828809ab6b5924af4daf","2009-10-20 08:02:21","dhanji","fix for locking problem in old assisted inject.","42;43;87;88;89;90;91;93;94;95;96;97;98;99"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","365f83483b550d95bae2f90bc16439d24713a124","2009-09-07 21:00:57","limpbizkit","First effort at support for JSR 330.","19;24;147;148;149;150;152;153;154;155"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","96;97;98;99;101;102;103"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;25"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","119;120"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","490833fc8ae416f1dcd35e3ba7a3f2ca4332158d","2008-11-02 00:12:39","limpbizkit","Cleaning up exceptions and Javadoc:","19;21;25;101;102;150;151;152;153;154;155"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","9dc32d4b6df8725f009a93f51e410564a362ccf0","2008-06-15 11:29:10","limpbizkit","Massive refactoring to exception handling. I'm trying to simplify things, but they are currently a little bit more complicated. I'll do another round shortly.","19;20;21;22;23;24;25;102;103;104;105;106;107;108"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","c0fe03bcd4190d756ade1466f8a8d713a82b7124","2008-06-02 04:46:53","limpbizkit","Key now wraps primitive types. This is a big deal. The consequence is that this test now passes:   assertEquals(Integer.class(), Key.get(int.class).getRawType());","24;25;26;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;88;89;90;91;128;129;130;131;132;133;134;135;136;137"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","5741fb895ce5a930d575eaf27703ff3af10c4646","2008-02-18 21:04:53","limpbizkit","Patching in David Baker's fix for AssistedInject - now it works with implicit bindings","19;20;21;22;23;24;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Parameter.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;25;26;27;28"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","5b257347fc51038043060a2f8dbc16c3973a5ab4","2009-02-27 23:47:39","limpbizkit","Misc small changes. Fix for bug 341, and tweaking assisted inject Javadoc.","38;39"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","35;36;37;38;39"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","03c8d26382eaadbb4f32e17a6c976ad24c3247e4","2008-12-02 06:15:57","limpbizkit","AssistedInject Deluxe.","19;20;21;28;29;30;31;32;37;38;39;41;42;43;44"
"./extensions/assistedinject/src/com/google/inject/assistedinject/Assisted.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","257;258"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","21;163;176;177;185;196;203;206;258;259;260;276;277;279;280;316;317;340;341;342;343;344;347;377;378;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","21;162;174;175;183;195;197;198;203;206;256;257;258;275;276;278;279;315;316;339;340;341;342;343;346;370;371;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","21;163;176;177;185;196;198;199;204;207;258;259;260;276;277;279;280;316;317;340;341;342;343;344;347;377;378;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;21;22;23;24;31;35;36;37;38;42"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","29;30;31;32;33;34;35;36"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","195;196"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","29;30;31;32;33;34;35;36"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","f7ac6ea677ccfff6c3bec7db1d3621e6b6cf4097","2010-05-09 12:48:24","sberlin","Patches to let Guice be more OSGi (and classloader) friendly.  Solves issue 439, issue 337, issue 443, and issue 343.  All provided by Stuart McCulloch.  Many thanks, Stuart!","26;369;370"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","b5ec94a953eb64b773e56658f50e728f47519288","2010-03-27 20:36:13","sberlin","patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the "old" behavior (ordered matching of parameters, non-guiced objects, etc..) by using @AssistedInject+FactoryProvider, but using @Inject or @AssistedInject with FactoryModuleBuilder will give you the new behavior.","145;146;148"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","6840fcbcaaf1dda6b1eb387b1b7811599a69eaa5","2009-08-19 18:31:04","limpbizkit","Jesse's tweaks to aragos' patch r1063. His patch was quite well implemented and these changes are mostly pedantic.","46;47;48;49;50;145;146;148;175;176"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","25;27;142;143;145;158;159;160;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","9b584e3594557c7e16ab5428a3c5a0d29bcf6e02","2009-05-16 16:57:38","limpbizkit","Added a note on Nullable to assistedinject","72"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","5b257347fc51038043060a2f8dbc16c3973a5ab4","2009-02-27 23:47:39","limpbizkit","Misc small changes. Fix for bug 341, and tweaking assisted inject Javadoc.","44;45;46;47;50;51;52;53;58;59;60;61;83;84"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","24;38;149;150;155;156;157;158;159;169;170;218;220;221;224;225;226;227;228;229;230;231;232;235;236;237;238;240;241;242;243;253;254;255;256;257;258;259;260;261;262;263;264;265;266;268;269;337;338;339;340;341;342"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21;22;29;30;31;32"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","29;30;39;138;139;275;276;277;278;279;280;281;282;283;284;285;286"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","f9e26582d812805fdb56e775e11b6fd1dec8dc2c","2008-12-09 18:45:13","limpbizkit","Applying Daniel Martin's fixes for our test cases.","71;72"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","19;26;30;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;78;79;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;168;172;173;174;175;176;177;178;180;185;188;189;190;191;192;193;194;195;196;197;198;199;200;203;204;205;207;208;209;209;210;211;219;220;221;222;252;253;254;255;256;257;258;259;260;261;262;263;264;281;282;283;311;312"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","b206d2088149087461f3c417ad7a9d56108f628a","2008-12-02 06:16:53","limpbizkit","Removed old Javadocs.","71;72;73;74;111;148;156;157;198;234;235;236;237"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","b1f42f5df9c4cd8e157a28c24c4e8eb627a7f052","2008-11-26 07:44:53","limpbizkit","Removing the obsolete PrivateModules extension; PrivateModules are now folded-in to core Guice.","26;242;243"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","19;20;21;22;26;31;32;111;112;113;119;120;121;122;123;131;132;133;134;135;155;156;157;164;165;166;167;168;169;170;171;172;173;174;177;178;179;178;179;188;189;190;191;192;193;194;202;239;240;241;242"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","cb93c79d6a5431f7708f5aaf46d83494ee037070","2008-09-29 18:24:45","limpbizkit","jmourits' changes to assistedinject so toString() etc. on the proxies work. Previously they were blowing up with NPEs in some situations.","212;213;214;215;216;218"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","5741fb895ce5a930d575eaf27703ff3af10c4646","2008-02-18 21:04:53","limpbizkit","Patching in David Baker's fix for AssistedInject - now it works with implicit bindings","38;39;40;41;57;58;59;60;66;67;68;69;80;81;82;83;114;115;116"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","0c43f22e70bae44bbae09544abc3b322677ac82d","2007-12-19 01:38:16","limpbizkit","Javadoc and build file fixes for extensions.","41;42;44;45;72;73;79;80"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","28"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectBinding.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","102;103;104"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","131;132;196;197;198;200;201;207;213;214;276;277;328;329;330;333;334;358;359;376;377;378;379;413;414;415;438;439;501;502;543;544;602;603;604;613;614;615;616;645;646;658;659;660;661;662;663;664;667;702;703;704;705;706;707;708;709;710;711;712;713;714"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","131;132;196;197;198;200;201;202;206;207;208;210;216;217;272;273;324;325;326;329;330;353;354;371;372;373;374;408;409;410;432;433;495;496;537;538;596;597;598;606;607;608;609;636;637;649;650;651;652;653;654;655;658;687;688;689;690;691;692;693;694;695;696;697;698;699;700"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","131;132;196;197;198;200;201;202;206;207;208;210;216;217;278;279;330;331;332;335;336;360;361;378;379;380;381;415;416;417;440;441;503;504;545;546;604;605;606;615;616;617;618;647;648;660;661;662;663;664;665;666;669;704;705;706;707;708;709;710;711;712;713;714;715;716;717"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","8f196358f5a494f974a741b5a982f96f03171223","2013-05-16 18:13:21","Christian Edward Gruber","Add logging for when AssistedInject falls into non-optimized mode, so people can take action and fix it.","28;70;71;88;89;90;281;282;509;510;511;512;515;516;517;518;519;522;523;524;525;526;527;528;529;530"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","9f8b438b370a688cd393983abf29aa00344795a4","2013-05-16 18:06:08","Christian Edward Gruber","Use a single UniqueAnnotation instead of creating a new one each time.","82;83;84;583;584"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","44;580;581;605;606;613;614"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","45d86df69be98dc64a455e397ae6c492f803771e","2013-05-16 02:11:47","Christian Edward Gruber","Fix http://code.google.com/p/google-guice/issues/detail?id=742 by having assistedinject fail if the target implementation class has a scop ing annotation on it.  Scope annotations on assistedinject targets were always ignored by Guice, and allowing them on the classes led to lots of confusion when reading code.  The new behavior makes for much more readable code.","244;245;246;247;248;249;250;251;252"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;23;24;25;26;27;28;45;46;47;48;49;50"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","19;20;21;22;39;40;41;42;43;44;45;46;47;48;49;50;144;145"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","23cf2d4f4944389bd0d9a9dc9ac9a1bcbce5584f","2011-01-29 20:42:22","sberlin","fix issue 594 -- assistedinject does the wrong thing if assisted type is scoped.","32;595;596;597;598;599"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","2ef22666df8b6f32425edb45e56ec60c9ab5b7ba","2010-10-25 02:57:48","sberlin","issue 428 - better error validation for AssistedInject, specifically with public factories & non-public method return types that can lead to IllegalAccessErrors.","200;201;202;203;220;319;320;321;322;323;324;325;326;327;328"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","287355590aa8ad2d87f8ebfac3a0710e3b442c27","2010-10-17 01:31:25","sberlin","flip the order of the type parameters in ProviderWithExtensionVisitor to match the order in the BindingTargetVisitor.","306;307"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","19;20;21;33;34;42;43;44;46;47;48;49;54;55;58;77;78;79;105;106;113;114;118;119;127;128;129;130;131;132;133;134;138;139;140;143;147;148;149;153;155;156;157;158;159;160;161;162;163;164;165;166;167;169;170;174;175;176;182;183;184;190;191;192;193;195;206;207;221;222;265;266;267;268;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;423;424;579;580;581;582;583;584;585;586"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","b199afd5c1da15c2bc8a9f223a8d0b7b6266aa1d","2010-09-23 03:16:22","sberlin","new AssistedInject factories now implement HasDependencies (like the old assistedinject factories)","37;46;60;63;74;75;109;110;111;121;122;123;129;140;219;226;227;234;235;236;237;257;258;259;260;261;262;263;264;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;417;418;419;420;421;422;423;424;425;426;428;429;430;431;432;434;436;437;438;439;440;441;442;443;444;445;446"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","b5a75ed3c72d772e7dc9f771a63b3e7226695919","2010-07-31 16:08:27","sberlin","issue 506 - fail fast & with a useful error message when an AssistedInject factory has Provider<T> as a factory type.  patch ( slightly modified) by ffaber.","182;183;184;185;186;187;188;476;477"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","88f9a14dc9fa9f6704f8a86e376b7f218e492f98","2010-07-17 16:39:00","sberlin@gmail.com","remove confusing behavior from assistedinject -- it used to allow factory creations to be resolved by the injector if the return key matched something in the injector.  now it always creates new objects.  the prior behavior created a scenario where, if the following pseudo-code was used...","34;53;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;212;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;290;291;298;299;310;311;312;313;314;315;327;328;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;504;505;506;507;508;509;510;511;512;513;515;516"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","3748e4a0979e6332ab9f0a3601ab5b8e595b7a12","2010-05-23 13:40:06","sberlin","issue 329 - cleanup error message for under-specified assistedinject factory.","36;54;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","af9a4df94a042856eacd99e9ce4dcdf4cd6eb5dd","2010-05-10 22:11:37","sberlin","fixes issue 478.","458;459"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","f7ac6ea677ccfff6c3bec7db1d3621e6b6cf4097","2010-05-09 12:48:24","sberlin","Patches to let Guice be more OSGi (and classloader) friendly.  Solves issue 439, issue 337, issue 443, and issue 343.  All provided by Stuart McCulloch.  Many thanks, Stuart!","31;218;219"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","b5ec94a953eb64b773e56658f50e728f47519288","2010-03-27 20:36:13","sberlin","patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the "old" behavior (ordered matching of parameters, non-guiced objects, etc..) by using @AssistedInject+FactoryProvider, but using @Inject or @AssistedInject with FactoryModuleBuilder will give you the new behavior.","175;176;177;178;179;181;182;183;184;185;186;192;193;194;195;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","141f800c09d66898ce04c7684330e1e9dc8a31ab","2010-03-25 03:37:35","sberlin","optimize assistedinject - touches on issue 435 - it is now about ~4x faster than the old style assisted inject (instead of being ~15x slower than it).  the optimization only applies if the assisted objects do not inject an Injector or a Provider of an assisted key.","35;36;40;41;42;47;52;54;63;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;133;134;135;155;156;157;158;163;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;212;213;214;215;216;217;218;219;220;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;305;306;307;308;309;310;311;312;314;315;316;317;318;325;326;330;331;337;338;339;343;344;345;346;347;348;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;370;371;373;374;375;381;382;383;384;385;386;387;395;396;397;398;399;400;401;402;404;405;406;407;418;419;420;421;447;448;449;450;451;452;453;454;455;456"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","97c2271b505bec77f509e1f190695cc6a2997427","2010-02-05 21:12:05","sberlin","issue 454 - add an annotation to mark @Injectable methods as wanting injection during Stage.TOOL.","39;161;162"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","6840fcbcaaf1dda6b1eb387b1b7811599a69eaa5","2009-08-19 18:31:04","limpbizkit","Jesse's tweaks to aragos' patch r1063. His patch was quite well implemented and these changes are mostly pedantic.","53"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","81;82;93;94;95;96;98;99;100;101;184;185;186;198;199;200;201;203;204;210;211;236;237;238"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","44;96;97;101;102;103;104;110;111;112;113;114;115;117;118;122;123;124;125;129;130;131;132"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;20;21;22;23;33;34;35;36;37;46;47;84;85;103;104;105;113;116;117;119"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","77;78"
"./extensions/assistedinject/src/com/google/inject/assistedinject/FactoryProvider2.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","46;47;48;49;50;51;52;53"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","46;47;48;49;50;51;52;53"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","46;47;48;49;50;51;52;53"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;23"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","21;22"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","20;21;46;47;50;53;54;58;59;60;61"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedConstructor.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","51;52;53;54;55;56;57;58;59;60"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","18;19;23;24;26"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","21;22;23;24"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","6840fcbcaaf1dda6b1eb387b1b7811599a69eaa5","2009-08-19 18:31:04","limpbizkit","Jesse's tweaks to aragos' patch r1063. His patch was quite well implemented and these changes are mostly pedantic.","21;38;39"
"./extensions/assistedinject/src/com/google/inject/assistedinject/BindingCollector.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49"
"./extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","19;20"
"./extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java","484f75f87f526b692f74afdef0e34d2bc6937f0c","2009-05-19 18:18:03","limpbizkit","Adding notes to package-info pointing at the required .jar files. Adding IntelliJ modules for JMX and JNDI. Fixing the broken JNDI build.","18;19;20"
"./extensions/assistedinject/src/com/google/inject/assistedinject/package-info.java","0c43f22e70bae44bbae09544abc3b322677ac82d","2007-12-19 01:38:16","limpbizkit","Javadoc and build file fixes for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20;22;26;27;28"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","b5ec94a953eb64b773e56658f50e728f47519288","2010-03-27 20:36:13","sberlin","patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the "old" behavior (ordered matching of parameters, non-guiced objects, etc..) by using @AssistedInject+FactoryProvider, but using @Inject or @AssistedInject with FactoryModuleBuilder will give you the new behavior.","24;25;27;28;29;30;31;32;33;34;35;36;37;39;40;41;42;43;44;45;46;47;49;50;51;52;53;54;55;62;63;64;65"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","4994bf6a8e9986ca9013a908c340f019084be30f","2008-12-27 02:54:59","limpbizkit","Mikeward's Javadoc fixes. Mike read through all of our Javadoc (thank you!) and found a few typos and simplifications","25;26;27;28"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","25;26;27;28;29;30;32;33;34;35;36;37;38;39;40;47"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInject.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","29"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedMethod.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55"
"./extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/assistedinject/src/com/google/inject/assistedinject/ParameterListKey.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java","c13b5454a5cfa7d188e9a047017ac0de63ec4dfb","2010-10-31 18:38:24","sberlin","adding more missing @since 3.0 tags.","27"
"./extensions/assistedinject/src/com/google/inject/assistedinject/AssistedInjectTargetVisitor.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","32;33;49;186;210;215;220;367;368;373;374;395;396;449;450;451;492;493;631;638;639;654;655;777;778;779;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","32;33;47;183;206;211;216;360;361;366;367;388;389;442;443;444;484;485;623;630;631;645;646;768;769;770;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","32;33;49;186;210;215;220;367;368;373;374;395;396;449;450;451;492;493;631;638;639;654;655;777;778;779;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;21;22;23;32;37;38;39;40;44;49;50"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","30;31"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","30;31"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;683;684;685;686;687;688;689;690;691;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","53664a7f17492bd0c3c4728df61679147907dd18","2009-02-21 00:25:27","limpbizkit","Regrettably replacing jarjar'd Google Collections with minimal copies of the parts that we use.","19;30"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","ddb3862415e078080293abba05f1a24a921c007c","2008-12-29 05:21:16","limpbizkit","Supporting HasDependencies for Multibinder, MapBinder and AssistedInject v1.","19;22;28;33;34;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","fcbdf999a15039ecad6157c1bf44a835df826a27","2008-11-26 02:37:35","limpbizkit","Pretty massive rewrite of PrivateModules so that they're now implemented in core Guice.","21;174;175;176;177;383;384"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","72d11dd102eeebf081aa5363469d28b25f9b1384","2008-11-02 07:59:13","limpbizkit","Taking advantage of the error message changes in some extensions.","518;519"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","cb93c79d6a5431f7708f5aaf46d83494ee037070","2008-09-29 18:24:45","limpbizkit","jmourits' changes to assistedinject so toString() etc. on the proxies work. Previously they were blowing up with NPEs in some situations.","522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","9532e6267f55105992301add5accfb5c62fdeed8","2008-06-18 08:20:54","limpbizkit","Eliminated static from SourceProviders. The new mechanism to specify the source of a binding is like this:   Binder myBinder = binder.withSource(source);","19;20;22;23;24;25;26;27;30;31;32;33;37;516;517;518;519"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","c0fe03bcd4190d756ade1466f8a8d713a82b7124","2008-06-02 04:46:53","limpbizkit","Key now wraps primitive types. This is a big deal. The consequence is that this test now passes:   assertEquals(Integer.class(), Key.get(int.class).getRawType());","512;513;514;515"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","eab76471fbc2118a3c07d103d4b5548e153ed9e7","2008-05-26 19:45:12","limpbizkit","A bunch of polish fixes for 2.0:","20;377;378;379;380;510;511;512;513;514;515;516"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","6c0feb5d0da0876a4d131106312e0664045bff1b","2008-02-18 21:11:00","limpbizkit","Patching in David Baker's fix for AssistedInject - now it works with implicit bindings",""
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","5741fb895ce5a930d575eaf27703ff3af10c4646","2008-02-18 21:04:53","limpbizkit","Patching in David Baker's fix for AssistedInject - now it works with implicit bindings","19;20;21;22;23;24;25;28;29;30;31;35;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProviderTest.java","e451ef79c95a19a0e8044567f133f0ad1a40f4bc","2007-12-19 01:15:59","limpbizkit","Adding AssistedInject and ThrowingProviders as Guice extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","42;43;58;59;79;80;95;96"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27;28"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ManyConstructorsTest.java","b5ec94a953eb64b773e56658f50e728f47519288","2010-03-27 20:36:13","sberlin","patch AssistedInject extension to support multi-constructor injection with FactoryModuleBuilder.  reuses @AssistedInject annotation to mark valid constructors.  undeprecates @AssistedInject.  deprecates FactoryProvider in favor of FactoryModuleBuilder now that all functionality is matched and performance problems are fixed.  you can still get the "old" behavior (ordered matching of parameters, non-guiced objects, etc..) by using @AssistedInject+FactoryProvider, but using @Inject or @AssistedInject with FactoryModuleBuilder will give you the new behavior.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","32;33;156;171;370;371;393;394;437;438;664;872;879;880;895;896;1018;1019;1020;1044;1045;1046;1047;1048;1049;1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;1100"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","20dd9afe0aa02f92cb642bc0c88f920799e6a7c5","2014-05-03 04:42:08","Sam Berlin","Automated rollback.","32;33;154;168;366;367;389;390;433;434;660;867;874;875;889;890;1012;1013;1014;1037;1038;1039;1040;1041;1042;1043;1044;1045;1046;1047;1048;1049;1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;1090;1091;1092;1093"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","615f61f109f39b81f1c87b70b24080c578f00c04","2014-05-03 04:41:38","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings.","32;33;156;171;370;371;393;394;437;438;664;872;879;880;895;896;1018;1019;1020;1044;1045;1046;1047;1048;1049;1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;1060;1061;1062;1063;1064;1065;1066;1067;1068;1069;1070;1071;1072;1073;1074;1075;1076;1077;1078;1079;1080;1081;1082;1083;1084;1085;1086;1087;1088;1089;1090;1091;1092;1093;1094;1095;1096;1097;1098;1099;1100"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","e39158525475eca7971966c667494d240be7e242","2013-05-16 18:00:54","Christian Edward Gruber","Change Key so that it upgrades Annotation classes where all methods have default values into an instance of the Annotation with the defaults as values, so that:   @Retention(RUNTIME)   @BindingAnnotation @interface AllDefaults {     int hasDefault() default 1;   }","1043;1044;1045;1046;1047;1048;1049;1050;1051;1052;1053;1054;1055;1056;1057;1058;1059;1060;1061;1062;1063;1064;1066;1067;1068;1069"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","cd12655357bce1ff37a9609d4c6d493fb59c0e0e","2012-05-27 17:38:30","Sam Berlin","Don't assume methods will be in order when asserting error messages.","578;579;581;582;585;586;587;588;589;592;593;594;595;596;602;603;604;605;618;620;621;624;625;626;627;628;631;632;633;634;635;641;642;643"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;23;38;46;47;581;582;589;590;615;616;623;624;731;732"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","2ef22666df8b6f32425edb45e56ec60c9ab5b7ba","2010-10-25 02:57:48","sberlin","issue 428 - better error validation for AssistedInject, specifically with public factories & non-public method return types that can lead to IllegalAccessErrors.","43;90;91;342;449;451"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","b5a75ed3c72d772e7dc9f771a63b3e7226695919","2010-07-31 16:08:27","sberlin","issue 506 - fail fast & with a useful error message when an AssistedInject factory has Provider<T> as a factory type.  patch ( slightly modified) by ffaber.","563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","141f800c09d66898ce04c7684330e1e9dc8a31ab","2010-03-25 03:37:35","sberlin","optimize assistedinject - touches on issue 435 - it is now about ~4x faster than the old style assisted inject (instead of being ~15x slower than it).  the optimization only applies if the assisted objects do not inject an Injector or a Provider of an assisted key.","248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;539;540;541;542;543;544;545;938;939;940;941;942;943;944;945;946;947;948;949;950;951;952;953;954;955;956;957;958;959;960;961;962;963;964"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","97c2271b505bec77f509e1f190695cc6a2997427","2010-02-05 21:12:05","sberlin","issue 454 - add an annotation to mark @Injectable methods as wanting injection during Stage.TOOL.","29;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","33;34;35;36;37;42;191;192;197;198;199;200;201;202;203;204;205;206;209;210;217;218;470;471;693"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","9d6b656e0526d6d2d85c0223a1f5f70544766298","2009-02-27 21:59:15","limpbizkit","Applying ilya.firman's patch for issue 218. I tweaked the patch to use TypeLiteral's new type resolution methods like TypeLiteral.getReturnType(Method) etc., which makes it so we always just do-the-right-thing for matching type variables.","27;692;693;694;695;696;697;698;699;700;701;702;703;704;705;706;707;708;709;710;711;712;713;714;715;716;717;718;719;720;721;722;723;724;725;726;727;728;729;730;731;732;733;734;735;736;737;738;739;740;741;742;743;744;745;746;747;748;749;750;751;752;753;754;755;756;757;758;759;760;761;762;763;764;765;766;767;768;769;770;771;772;773;774;775;776;777;778;779;780;781;782;783;784;785;786;787;788;789;790;791;792;793;794;795;796;797;798;799;800;801;802;803;804;805;806;807;808;809;810;811;812;813;814;815;816;817;818;819;820;821;822;823;824;825;826;827;828;829;830;831;832;833;834;835;836;837;838;839;840;841;842;843;844;845;846;847;848;849;850;851;852;853;854;855;856;857;858;859;860;861;862;863;864;865;866;867;868;869;870;871;872;873;874;875;876;877;878;879;880;881"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","4f6274aa4a306efa727f9b37ad16ea3d331d22f0","2009-02-19 21:57:55","limpbizkit","Removing all ASM and cglib dependencies from the no_aop build of Guice.","38;39;614;615;616;617;618;619"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","bf0d876bb767f45c5cfbed3929e2cf6acd7d061a","2009-02-19 09:06:22","limpbizkit","Removing all references to method interceptors from the non-AOPified Guice. This passes the full Guice test suite (other than the interceptor tests that are removed, and the tests that fail in the normal Guice build).","613;639"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","02d991800cbd1467256b45e81a1b1f6c278a3a54","2008-12-10 03:47:57","limpbizkit","Applying dtm's suggestions for r723.","22;323;324;325;639;640;641;642;643;644;645;646;647;648;649;650;651;652;653;654;655;656;657;658;659;660;661;662;663;664;665;666;667;668;669;670;671;672;673;674;675;676;677;678;679;680;681;682;684;685;686;687;688;689"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryProvider2Test.java","2d633cd04273a80a31c920f24fc1d3c5f1f8e7df","2008-12-09 06:26:00","limpbizkit","Big API change to AssistedInject Deluxe.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;295;296;297;298;299;300;301;302;303;304;305;306;307;308;309;310;311;312;313;314;315;316;317;318;319;320;321;322;323;324;325;326;327;328;329;330;331;332;333;334;335;336;337;338;339;340;341;342;343;344;345;346;347;348;349;350;351;352;353;354;355;356;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;390;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436;437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460;461;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486;487;488;489;490;491;492;493;494;495;496;497;498;499;500;501;502;503;504;505;506;507;508;509;510;511;512;513;514;515;516;517;518;519;520;521;522;523;524;525;526;527;528;529;530;531;532;533;534;535;536;537;538;539;540;541;542;543;544;545;546;547;548;549;550;551;552;553;554;555;556;557;558;559;560;561;562;563;564;565;566;567;568;569;570;571;572;573;574;575;576;577;578;579;580;581;582;583;584;585;586;587;588;589;590;591;592;593;594;595;596;597;598;599;600;601;602;603;604;605;606;607;608;609;610;611;612;613;614;615;616;617;618;619;620;621;622;623;624;625;626;627;628;629;630;631;632;633;634;635;636;637;638;639;640;641"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ExtensionSpiTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;22;23;24;32;33;34;35"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ExtensionSpiTest.java","4e11457f34addf5d10fe0c31cefd54c75c37b540","2011-06-28 23:50:03","sberlin","fixup whitespace",""
"./extensions/assistedinject/test/com/google/inject/assistedinject/ExtensionSpiTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","28;29;30;31;32;33;34;35"
"./extensions/assistedinject/test/com/google/inject/assistedinject/ExtensionSpiTest.java","4b91955979afbbfff317b36af89b6bd1a1aa9b47","2010-10-17 01:28:06","sberlin","patch from ramakrishna (with very minor changes from me) for an extension SPI for assisted inject.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","a23bc0e97c2a45f47b55e1cb9a7edb0d41c2ef76","2014-05-03 04:42:39","Sam Berlin","Implement hashCode and equals in FactoryProvider/FactoryProvider2, with the aim of allowing Guice to dedupe bindings. Reroll of earlier change with a bug fixed. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=65611245","254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269;270;271;272;273;274;275;276;277;278;279;280;281;282;283;284;285;286;287;288;289;290;291;292;293;294;388;393;443;444;457;458;470;476;536;537"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","45d86df69be98dc64a455e397ae6c492f803771e","2013-05-16 02:11:47","Christian Edward Gruber","Fix http://code.google.com/p/google-guice/issues/detail?id=742 by having assistedinject fail if the target implementation class has a scop ing annotation on it.  Scope annotations on assistedinject targets were always ignored by Guice, and allowing them on the classes led to lots of confusion when reading code.  The new behavior makes for much more readable code.","465;466;467;468;474;475;476;477;478;479;480;481;482;483;484;485"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","94c2d2c6c53cef4785413575ca445a048414641e","2013-05-16 02:05:25","Christian Edward Gruber","Suppress a warning in advance that will be a run-time error in Guice in a subsequent commit, and which will be added to error-prone and caught at compile-time for those who use it.","481"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;24;25;26;27;28;29;30;31;36;37;44;45;46;47;48;49;50;53;54"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","42;43;44;45"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","23cf2d4f4944389bd0d9a9dc9ac9a1bcbce5584f","2011-01-29 20:42:22","sberlin","fix issue 594 -- assistedinject does the wrong thing if assisted type is scoped.","39;462;463;464;465;466;467;468;469;470;471;472;473;474;475;476;477;478;479;480;481;482;483;484;485;486"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","2ef22666df8b6f32425edb45e56ec60c9ab5b7ba","2010-10-25 02:57:48","sberlin","issue 428 - better error validation for AssistedInject, specifically with public factories & non-public method return types that can lead to IllegalAccessErrors.","437;438;439;440;441;442;443;444;445;446;447;448;449;450;451;452;453;454;455;456;457;458;459;460"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","b199afd5c1da15c2bc8a9f223a8d0b7b6266aa1d","2010-09-23 03:16:22","sberlin","new AssistedInject factories now implement HasDependencies (like the old assistedinject factories)","20;21;22;23;24;25;26;27;28;31;37;39;41;45;46;47;48;51;52;53;54;55;357;358;359;360;361;362;363;364;365;366;367;368;369;370;371;372;373;374;375;376;377;378;379;380;381;382;383;384;385;386;387;388;389;391;392;393;394;395;396;397;398;399;400;401;402;403;404;405;406;407;408;409;410;411;412;413;414;415;416;417;418;419;420;421;422;423;424;425;426;427;428;429;430;431;432;433;434;435;436"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","88f9a14dc9fa9f6704f8a86e376b7f218e492f98","2010-07-17 16:39:00","sberlin@gmail.com","remove confusing behavior from assistedinject -- it used to allow factory creations to be resolved by the injector if the return key matched something in the injector.  now it always creates new objects.  the prior behavior created a scenario where, if the following pseudo-code was used...","19;20;22;28;41;42;43;44;45;46;47;48;53;54;55;56;57;58;59;60;61;62;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;86;87;88;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;149;150;151;152;153;154;155;156;157;158;160;161;162;163;164;339;340;341;342;343;344;345"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","27;28"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","3748e4a0979e6332ab9f0a3601ab5b8e595b7a12","2010-05-23 13:40:06","sberlin","issue 329 - cleanup error message for under-specified assistedinject factory.","21;27;30;35;172;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","af9a4df94a042856eacd99e9ce4dcdf4cd6eb5dd","2010-05-10 22:11:37","sberlin","fixes issue 478.","20;24;25;159;160;161;162;163;164;165;166;167;168;169;170;210;211;212;213;214;215;216;217;218;219;220"
"./extensions/assistedinject/test/com/google/inject/assistedinject/FactoryModuleBuilderTest.java","c1e65da70833eadebf37a37b559ce81536c30288","2009-08-19 18:18:16","limpbizkit","aragos' four-month old patch for issue 346, wherein he adds FactoryModuleBuilder.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195"
"./extensions/spring/src/com/google/inject/spring/SpringIntegration.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;24;26"
"./extensions/spring/src/com/google/inject/spring/SpringIntegration.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23"
"./extensions/spring/src/com/google/inject/spring/SpringIntegration.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134"
"./extensions/spring/src/com/google/inject/spring/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","18;19"
"./extensions/spring/src/com/google/inject/spring/package-info.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20"
"./extensions/spring/test/com/google/inject/spring/SpringIntegrationTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;27;28;30"
"./extensions/spring/test/com/google/inject/spring/SpringIntegrationTest.java","f8537eaaaf67e36af7469b392a4941e425459991","2010-08-21 23:50:30","sberlin","move extensions that weren't under extensions/ into that directory.  simplify paths so everything is uniform for extensions.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101"
"./extensions/persist/src/com/google/inject/persist/Transactional.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46"
"./extensions/persist/src/com/google/inject/persist/Transactional.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","27;28;29;30;31;32;34;35;36;37;38;39;40;41;42;43;44;45;46;49;50;55;56;57;58;61;62;63;64;65;67;68;70;71"
"./extensions/persist/src/com/google/inject/persist/Transactional.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./extensions/persist/src/com/google/inject/persist/UnitOfWork.java","9e2d95b4393bd41b7eb882705d208124e2a4dd18","2013-06-27 00:43:11","Christian Edward Gruber","Clean up some formatting (includes some format artifacts from internal changes), and remove executable bit from several files which do not need them.",""
"./extensions/persist/src/com/google/inject/persist/UnitOfWork.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;53;54;55;56;57;58;59;60;61;62;63;65;66;67;68"
"./extensions/persist/src/com/google/inject/persist/UnitOfWork.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;42;43;44;45;46;47;48;49;51;52;53;54"
"./extensions/persist/src/com/google/inject/persist/UnitOfWork.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","20;21;22;28;29;30;31;36;37;38;43;44;45;46"
"./extensions/persist/src/com/google/inject/persist/UnitOfWork.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41"
"./extensions/persist/src/com/google/inject/persist/PersistFilter.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21;23"
"./extensions/persist/src/com/google/inject/persist/PersistFilter.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/PersistFilter.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94"
"./extensions/persist/src/com/google/inject/persist/package-info.java","5f47cccea9a8b18a2bb3f76a8ba219dd85ff47cc","2010-11-19 02:59:20","sberlin","change period to semicolon show javadoc shows it in the one-liner for package infos.","18;19"
"./extensions/persist/src/com/google/inject/persist/package-info.java","103af50f397108411009d5304dfbde64a3be4a42","2010-10-25 03:42:09","sberlin","update extension package-info.java files to reference 3.0 instead of 2.0, also fix issue 563 -- assistedinject package-info referenced the wrong jar name.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;18;19;20"
"./extensions/persist/src/com/google/inject/persist/package-info.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","2;3"
"./extensions/persist/src/com/google/inject/persist/package-info.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4"
"./extensions/persist/src/com/google/inject/persist/PersistService.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","22;23"
"./extensions/persist/src/com/google/inject/persist/PersistService.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","22;23"
"./extensions/persist/src/com/google/inject/persist/PersistService.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;28;29;30;31;38;41;42"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","40;41"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","40;41"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","8468bab932287b8faf6e31ef2795958745e0eb60","2010-12-29 02:12:56","dhanji","Fix for issues 581 and 582","118;119;120;179;180;199"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","19;21;22;34;44;46;47;48;51;105;106;117;118;120;121;123;124;194;195;196;197"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","23;24;42;43;48;49;55;56;68;69;71;72;74;75;82;83;103;104;117;118;125;126;135;136;142;143;145;146;152;153;180;181;191;192;221;222;224;225;227;228;231;232;238;239;244;245"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaFinderProxy.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235;236;237;238;239;240;241;242;243;244;245;246;247;248;249;250;251;252;253;254;255;256;257;258;259;260;261;262;263;264;265;266;267;268;269"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;20;23;24;31;32;33;34;41;44;45"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","124;125"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","124;125"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","21;22;23;24"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","8d7338e181e8467fd7b91f30d3ffc48711c86e2d","2010-10-21 21:22:23","mcculls","Current build targets Java5 but String.isEmpty() is Java6 only, so change this check to use String.length() instead","49;50"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","19;21;26;27;29;30;31;32;33;38;77;78;79;80;81;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;22;23;24;26;32;33;40;41;45;46;47;48;49;50;51;52;53;54;55;56;58;59;62;63;66;67;69;70;74;75;76;78;79;80;81;83;84;86;90;91;92;93"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;23;32"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java","d9c913acca55023ef5d76a32c3d4a51ee6b420cb","2011-06-26 21:02:54","sberlin","switch Guice from manually repackaging Guava to depending on Guava.  it's still jarjar'd right now, which is causing a ~400k increase in guice-snapshot.jar.  next step is to switch to ProGuard to remove the unnecessary code and cut it back down (even further?!).  this will let people build from Guice source and depend directly on Guava code without having to worry about hiding internal/util.","22;23;24;27;28;29;30;31;32;122;123;124;125;126;127"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java","6f0aee697724288e42823393d700ea770fd69da5","2010-10-27 02:03:52","sberlin","move @nullable to internal.util","22;23"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117"
"./extensions/persist/src/com/google/inject/persist/jpa/package-info.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","2;3"
"./extensions/persist/src/com/google/inject/persist/jpa/package-info.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4"
"./extensions/persist/src/com/google/inject/persist/jpa/Jpa.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","20"
"./extensions/persist/src/com/google/inject/persist/jpa/Jpa.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","10f305d9d4328edd2819396dcbf039e86e8e24b1","2014-03-10 16:51:17","Sam Berlin","This change removes final from fields annotated with @Inject.  In addition to being discouraged due to weak semantics [1], it is incompatible with the standard javax.inject.Inject annotation [2].","36;38;39;42;43"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","22;23;24;25;27;30;31"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","ec76179f50f9d8c340b311c6b019c00526566b66","2011-06-29 22:04:31","sberlin","Restore usernames","100;101"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","a23937e0145d7bb4cc0c2169d21023bedee3fdb2","2011-06-29 22:02:50","sberlin","Minor whitespace & temporary username changes","100;101"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","4b862691c0e6500d120ecbcdc93f343f59a107a2","2011-06-28 23:24:58","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","21;22;33;34;35;36;38;39;40;41;53;54;80;81;92;93;120;121;125"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","20;22;32;33;42;43;48;49;51;54;55;59;60;65;80;81;82;92;93;94;102;108;110;111;114;115;116;160;161;162;163"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","135;136;137;138;145;146"
"./extensions/persist/src/com/google/inject/persist/jpa/JpaLocalTxnInterceptor.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161"
"./extensions/persist/src/com/google/inject/persist/finder/package-info.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","2;3"
"./extensions/persist/src/com/google/inject/persist/finder/package-info.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4"
"./extensions/persist/src/com/google/inject/persist/finder/Finder.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/finder/Finder.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","23;31;32;33;50;51"
"./extensions/persist/src/com/google/inject/persist/finder/Finder.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","27;28;29;30;37;38;39;40;41;46;47;48;49;54;55;56;58;59"
"./extensions/persist/src/com/google/inject/persist/finder/Finder.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55"
"./extensions/persist/src/com/google/inject/persist/finder/FirstResult.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/finder/FirstResult.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","27;28"
"./extensions/persist/src/com/google/inject/persist/finder/FirstResult.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","25;26;27;28;29;30;31;34;35"
"./extensions/persist/src/com/google/inject/persist/finder/FirstResult.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","32;33"
"./extensions/persist/src/com/google/inject/persist/finder/FirstResult.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37"
"./extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","22;23;28;29;30;31;32;33;34;37;38;41;43;44;45;46;47;48;49;50"
"./extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;24;25"
"./extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","5;6;8;9;13;14;15;16;17;18;19;20;21;22"
"./extensions/persist/src/com/google/inject/persist/finder/DynamicFinder.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","1;2;3;4;5;6;7;8;9"
"./extensions/persist/src/com/google/inject/persist/finder/MaxResults.java","81007ff876fda8d376e0ad988edb51c118baf68e","2011-06-28 23:27:09","sberlin","fixup whitespace",""
"./extensions/persist/src/com/google/inject/persist/finder/MaxResults.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/persist/src/com/google/inject/persist/finder/MaxResults.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34"
"./extensions/persist/src/com/google/inject/persist/finder/MaxResults.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","19;22;23;24"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","65814e62fc11868188217108f158719d35696134","2011-02-14 01:12:20","sberlin","issue 595 -- persist extension didn't work if @Transacation was on the class, thanks to cgdecker for the patch and bug report!","40;41;42;43"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","3bdf721ed546315c59098407798b722d20b959b2","2010-12-09 03:57:44","sberlin","fix for NO_AOP build.","38;39;41"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;20;21;24;25;26;33;34;37;38;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;67;68;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","6;7;8;9;12;13;19;20;21;22;23;24;25;31;32;33;34;35;36;37;38;39;40;41;43;44;45;46;47;50;51;52;53;54;55;56;57;58;59;62;63;64;65;66;67;68;69;70;71;72;73;76;77;78;79;80;81;82"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","7;13;14;15;16;33;34;35;36;37;38;39;40;41;42"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","9a227bef3b82a045323ef2cf38ec60b2e42cf0fe","2010-07-03 15:51:31","limpbizkit@gmail.com","Move internal utility code to separate package.","5;6"
"./extensions/persist/src/com/google/inject/persist/PersistModule.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71"
"./extensions/persist/test/com/google/inject/persist/AllTests.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","30"
"./extensions/persist/test/com/google/inject/persist/AllTests.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;30;37"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;42;43;45;46;51;52"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;38;39;40;41;42;43;44;47;48"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","112;113;114;115;118;119"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerPerRequestProvisionTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsConfidenceTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","24;25;26;28;31;36"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsConfidenceTest.java","01758ced7b1ad09957c3daa0449b41f00c05d9e7","2011-06-28 23:20:25","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsConfidenceTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;43;44;49;50"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsConfidenceTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;26;40;41;42;43;44;45;46;47;50;51;56;57"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsConfidenceTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;30;37"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","23;25;41;42"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;24;26;27;38;39;40;41;42;43;44;47;48;59;60;79;80;89;90;91;94;95;96;97;102;103;104;105;106;107;108;110;111;116;117;118;119;120"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","104;105;106;107;110;111"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerProvisionTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsWithCustomMatcherTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;29;32;42"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsWithCustomMatcherTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;49;50;73;74"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsWithCustomMatcherTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;45;46;47;48;49;50;51;52;53;56;57"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsWithCustomMatcherTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","79;80;81;82;88;89;90;91;92;93;94;95"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsWithCustomMatcherTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;30;34;39"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;46;47;52;53;64;65;84;85;97;98;109;110;119;120;129;130"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;42;43;44;45;46;47;48;49;52;53"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaParentTestEntity.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","21"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaParentTestEntity.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/JpaParentTestEntity.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56"
"./extensions/persist/test/com/google/inject/persist/jpa/DynamicFinderTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","62;63"
"./extensions/persist/test/com/google/inject/persist/jpa/DynamicFinderTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","26;27;28;33;35;42"
"./extensions/persist/test/com/google/inject/persist/jpa/DynamicFinderTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/DynamicFinderTest.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;29;32;39"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;45;46;53;54;67;68;69;70"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;41;42;43;44;45;46;47;48;51;52"
"./extensions/persist/test/com/google/inject/persist/jpa/ManualLocalTransactionsTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","24;25;26;31;33;42"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","65814e62fc11868188217108f158719d35696134","2011-02-14 01:12:20","sberlin","issue 595 -- persist extension didn't work if @Transacation was on the class, thanks to cgdecker for the patch and bug report!","78;79;123;124;150;164;178;192"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;50;51;55;56"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;26;47;48;49;50;51;52;53;54;55;58;59;63;64"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","71;72;73;74;140;141;142;143;150;151;152"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","cf481fae214d56a92f37d65a93e6050cf77412e4","2010-07-05 10:22:06","dhanji","Guice-persist limpbizkit's review cleanups.","128;129;179;180"
"./extensions/persist/test/com/google/inject/persist/jpa/ClassLevelManagedLocalTransactionsTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204"
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;30;34;39"
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;47;48;54;55;68;69;82;83;94;95;105;106;115;116"
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;43;44;45;46;47;48;49;52;53"
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","69;70;71;78;79;81;82;83;84"
"./extensions/persist/test/com/google/inject/persist/jpa/JoiningLocalTransactionsTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","c00df28be8bfa45b2bdc8b4d3c101c20a9cbdc12","2014-07-01 20:53:41","Sam Berlin","Automated code cleanups by internal tool. ------------- Created by MOE: http://code.google.com/p/moe-java MOE_MIGRATED_REVID=69390543","47;48;49;50;51"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","23;24;25;28;33"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","21;22;23;38;39;45;46;47;48;49;50;53;54"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","21;22;23;33;34;35;36;37;38;39;40;43;44;45;46;47;48;51;52"
"./extensions/persist/test/com/google/inject/persist/jpa/EntityManagerFactoryProvisionTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","25;26;27;29;33;38"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","22;24;25;44;45;53;54;58;59;63;64;79;80;85;86;89;90"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","22;23;25;40;41;42;43;44;45;46;47;50;51;83;84;87;88"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","78;79;80;81;84;85;86;87"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaWorkManagerTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsAcrossRequestTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","27;28;29;32;36;41"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsAcrossRequestTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsAcrossRequestTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","23;25;26;50;51;67;68;74;75;94;95;101;102;118;119;126;127;134;135;146;147;151;152;158;159;168;169;173;174"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsAcrossRequestTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","23;24;26;46;47;48;49;50;51;52;53;56;57"
"./extensions/persist/test/com/google/inject/persist/jpa/ManagedLocalTransactionsAcrossRequestTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227;228;229;230;231;232;233;234;235"
"./extensions/persist/test/com/google/inject/persist/jpa/CustomPropsEntityManagerFactoryProvisionTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","23;24;25;27;30;35"
"./extensions/persist/test/com/google/inject/persist/jpa/CustomPropsEntityManagerFactoryProvisionTest.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/CustomPropsEntityManagerFactoryProvisionTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","21;22;23;44;45;51;52;53;54;55;56;59;60"
"./extensions/persist/test/com/google/inject/persist/jpa/CustomPropsEntityManagerFactoryProvisionTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","21;22;23;35;36;37;40;41;42;43;44;49;50;51;52;53;54;57;58"
"./extensions/persist/test/com/google/inject/persist/jpa/CustomPropsEntityManagerFactoryProvisionTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaTestEntity.java","7855aca14b1130e04b695f85c08e7b20867129f7","2011-06-28 23:33:57","sberlin","fixup whitespace",""
"./extensions/persist/test/com/google/inject/persist/jpa/JpaTestEntity.java","150d2a9b62030f48b5cf770e42be1b12c61d983f","2010-09-12 17:04:50","dhanji","Dynamic finders fixed and test added. Probably want a few more tests and early-error checking to be ideal, but otherwise working as advertised. =)","19;20;24;26;27;28;29;30;31;32;33;35;39;41;42;43;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74"
"./extensions/persist/test/com/google/inject/persist/jpa/JpaTestEntity.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","3236b100a95b739577dfcd117c24615370a1d0af","2014-02-13 18:37:24","Christian Edward Gruber","Replace guava 11 with 16 and extract Guava as a separate dependency.","7;8;16;22;23;25"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","b7a02b02d81c830d148355c90bc309bcd66fb592","2011-07-08 00:34:16","sberlin","* Remove unused imports * Sort imports * Convert tabs to spaces * Fix the ant no_aop build","7"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","8b64d455b982d5841480a0247c15d68de0759c91","2010-12-13 02:44:36","sberlin","Remove InjectorBuilder in favor of methods in Binder.","3;4;5;15;16;17;18;19;20;21;22;23;24;25;26"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","8a02fce17b86eae8aa55b794a0338946fd30b32d","2010-09-12 16:05:06","dhanji","Final cleanup of Persist Module. Pending a sanity check of the dynamic finder API, it is now ready to ship for Guice 3!","13;14"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","1d58f43826787fa40f66e216f11afe4f4d154843","2010-09-09 12:01:54","dhanji","Complete reworking of the guice-persist module and API. It is MUCH leaner now and easily facilitates multiple modules. All legacy tests are still passing.","5;14;15;16;17;18;19;20;21;22;23;24"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","a9cdba080f423565f183ebd680dac7242d549b15","2010-08-15 05:25:02","dhanji","Fixes many persist tests to use Junit assertXXX rather than JDK assert statements. Also cleans up some of the persist javadoc.","20;21"
"./extensions/persist/test/com/google/inject/persist/EdslTest.java","0391e964363bf98fdbe737723c4a7fdc05c3ffc3","2010-05-25 22:48:47","dhanji","Initial checkin, Guice-Persist (Supports JPA only). All tests passing.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24"
"./examples/src/example/xml/FromFlash.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7"
"./examples/src/example/xml/XmlBeanModule.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99;100;101;102;103;104;105;106;107;108;109;110;111;112;113;114;115;116;117;118;119;120;121;122;123;124;125;126;127;128;129;130;131;132;133;134;135;136;137;138;139;140;141;142;143;144;145;146;147;148;149;150;151;152;153;154;155;156;157;158;159;160;161;162;163;164;165;166;167;168;169;170;171;172;173;174;175;176;177;178;179;180;181;182;183;184;185;186;187;188;189;190;191;192;193;194;195;196;197;198;199;200;201;202;203;204;205;206;207;208;209;210;211;212;213;214;215;216;217;218;219;220;221;222;223;224;225;226;227"
"./examples/src/example/xml/FromSim.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7"
"./examples/src/example/xml/Contact.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5"
"./examples/src/example/xml/SimCard.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7;8;9;10"
"./examples/src/example/xml/Main.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48"
"./examples/src/example/xml/Contacts.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5"
"./examples/src/example/xml/FlashMemory.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7;8;9;10"
"./examples/src/example/xml/Phone.java","c112063529baac332325fde0f2616e04dd073aee","2009-02-05 06:23:52","crazyboblee","Added XML example.","1;2;3;4;5;6;7;8;9;10;11;12;13;14"
