fileName,RevisionId,Date,Author,Comment
"./src/test/java/org/junit/runners/parameterized/TestWithParametersTest.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/test/java/org/junit/runners/model/RunnerBuilderStub.java","00711f69af5f74d1a5cce573290847b78ce34cec","Sun, 9 Feb 2014 13:51:27 +0100","Stefan Bechtold"," #816: Support for hierarchical context hierarchies - RunWith annotation will be resolved along the hierarchy of non-static member classes."
"./src/test/java/org/junit/runners/model/FrameworkFieldTest.java","0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7","Sun, 22 Dec 2013 23:23:17 +0100","Stefan Birkner","Override toString() with meaningful implementation."
"./src/test/java/org/junit/runners/model/FrameworkFieldTest.java","4e9f1a65ca8d794db54260b4f2e5b078d949fdda","Sun, 22 Dec 2013 23:05:06 +0100","Stefan Birkner","Prevent creation of FrameworkMethod or FrameworkField without underlying member."
"./src/test/java/org/junit/runners/model/TestClassTest.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/test/java/org/junit/runners/model/TestClassTest.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/test/java/org/junit/runners/model/TestClassTest.java","41092ce4e01cc57d8aa1911e2f1169e0f355b1ae","Thu, 31 Oct 2013 23:54:25 +0100","Stefan Birkner","Move TestClassTest to package org.junit.runners.model."
"./src/test/java/org/junit/runners/model/FrameworkMethodTest.java","0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7","Sun, 22 Dec 2013 23:23:17 +0100","Stefan Birkner","Override toString() with meaningful implementation."
"./src/test/java/org/junit/runners/model/FrameworkMethodTest.java","4e9f1a65ca8d794db54260b4f2e5b078d949fdda","Sun, 22 Dec 2013 23:05:06 +0100","Stefan Birkner","Prevent creation of FrameworkMethod or FrameworkField without underlying member."
"./src/test/java/org/junit/samples/SimpleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/samples/SimpleTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/org/junit/samples/SimpleTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/samples/money/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/samples/money/MoneyTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/samples/money/MoneyTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/samples/ListTest.java","0abc020742dd0be0e6f5729b17cad2a0df73d671","Thu, 9 Jan 2014 23:04:06 +0900","Brian Takashi Hooper","ListTest for List, not Vector"
"./src/test/java/org/junit/samples/ListTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/samples/ListTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/samples/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/runner/RunnerSpy.java","00711f69af5f74d1a5cce573290847b78ce34cec","Sun, 9 Feb 2014 13:51:27 +0100","Stefan Bechtold"," #816: Support for hierarchical context hierarchies - RunWith annotation will be resolved along the hierarchy of non-static member classes."
"./src/test/java/org/junit/runner/JUnitCoreTest.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/test/java/org/junit/runner/JUnitCoreTest.java","15c6048229bd16c4bfdd80b23f37357a58226d20","Fri, 15 Mar 2013 16:26:32 -0700","Noel Yap","More tests added."
"./src/test/java/org/junit/runner/notification/ConcurrentRunNotifierTest.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/test/java/org/junit/runner/notification/RunNotifierTest.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/test/java/org/junit/runner/notification/RunNotifierTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/runner/notification/RunNotifierTest.java","0ce06206263ed060bd0ede049c1713286c2487ea","Sat, 10 Mar 2012 02:05:14 +0100","Stefan Birkner","Don't remove listeners, which throw exceptions (fixes #209 and #395)"
"./src/test/java/org/junit/runner/notification/SynchronizedRunListenerTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/runner/notification/SynchronizedRunListenerTest.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/test/java/org/junit/runner/FilterFactoriesTest.java","185dd23d960efc6630989c411935f2d18b17e09c","Wed, 5 Jun 2013 15:28:02 -0700","Noel Yap","Make compilable under Java 1.5."
"./src/test/java/org/junit/runner/FilterFactoriesTest.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/test/java/org/junit/runner/FilterFactoriesTest.java","c85a267605d4484121afeccef972a7266481ee7c","Thu, 2 May 2013 09:06:44 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/test/java/org/junit/runner/FilterFactoriesTest.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/test/java/org/junit/runner/FilterFactoriesTest.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/test/java/org/junit/runner/FilterOptionIntegrationTest.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/test/java/org/junit/runner/FilterOptionIntegrationTest.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/test/java/org/junit/runner/FilterOptionIntegrationTest.java","196c4ed79cbaca37709643b54913b361b677ae04","Thu, 28 Feb 2013 15:43:28 -0800","Noel Yap","--filter option implemented."
"./src/test/java/org/junit/runner/JUnitCommandLineParseResultTest.java","185dd23d960efc6630989c411935f2d18b17e09c","Wed, 5 Jun 2013 15:28:02 -0700","Noel Yap","Make compilable under Java 1.5."
"./src/test/java/org/junit/runner/JUnitCommandLineParseResultTest.java","b026c088d800013fa73ffb9647c13d3a87cdf55d","Mon, 27 May 2013 11:01:55 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/test/java/org/junit/AssumptionViolatedExceptionTest.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java","fe10c8a264e6585d9d8a92e5d5fa9a6e10aa298f","Fri, 20 Jul 2012 14:21:51 +0200","Marc Philipp","Fix typo in test name"
"./src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java","a37fd9ac8b2afc54384fd32f470b54aa69dc620a","Fri, 20 Jul 2012 11:42:16 +0200","Marc Philipp","Rename withStacktrace() to isException()/isThrowable()"
"./src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/test/java/org/junit/internal/builders/AnnotatedBuilderTest.java","00711f69af5f74d1a5cce573290847b78ce34cec","Sun, 9 Feb 2014 13:51:27 +0100","Stefan Bechtold"," #816: Support for hierarchical context hierarchies - RunWith annotation will be resolved along the hierarchy of non-static member classes."
"./src/test/java/org/junit/internal/MethodSorterTest.java","e0c7cfbf93f8c949da6294fbb4200d7e3cfb9c95","Wed, 5 Dec 2012 21:59:25 +0100","Arie van Deursen","Fixed layout"
"./src/test/java/org/junit/internal/MethodSorterTest.java","8ea7e775addfcc44f0bd7145100cca3cb301d8e1","Wed, 5 Dec 2012 21:51:59 +0100","Arie van Deursen","Included filter on synthetic methods."
"./src/test/java/org/junit/internal/MethodSorterTest.java","5ea3196f1cdbc32bc3a91b96bedc1964d3bb76d1","Sun, 18 Nov 2012 21:09:21 +0100","Arie van Deursen","Used assertArrayEquals to avoid converting an array to a list."
"./src/test/java/org/junit/internal/MethodSorterTest.java","09dfdef6945df9166984202e737bd16d8082a54e","Sun, 18 Nov 2012 19:42:37 +0100","Arie van Deursen","More white space cleaning."
"./src/test/java/org/junit/internal/MethodSorterTest.java","a3e01b1ebea12f5fdfb6349e9e72623ac1f3b232","Sun, 18 Nov 2012 19:39:07 +0100","Arie van Deursen","Cleaning up indentation"
"./src/test/java/org/junit/internal/MethodSorterTest.java","0676ed6363ca9935d082d39f539b263b2c3b42f2","Sun, 18 Nov 2012 19:12:39 +0100","Arie van Deursen","Inlined helper method"
"./src/test/java/org/junit/internal/MethodSorterTest.java","63eebcfe396b5302cd49a7dd006eecb9b929721a","Sun, 18 Nov 2012 17:24:00 +0100","Arie van Deursen","Deleted the old failing test cases"
"./src/test/java/org/junit/internal/MethodSorterTest.java","fa235e3520365aa9364ac16bf561e7a42524f0dc","Sun, 18 Nov 2012 14:44:41 +0100","Arie van Deursen","Refactoring of the test case for JVM Method sorter"
"./src/test/java/org/junit/internal/MethodSorterTest.java","5976b1d40ef41cecafd9769dd8776a6e6610d0c5","Sat, 17 Nov 2012 22:12:35 +0100","Arie van Deursen","Extract method refactoring on getting filtered methods"
"./src/test/java/org/junit/internal/MethodSorterTest.java","99ffe0144444c0727248dad94f153b1fc91bf847","Sat, 17 Nov 2012 15:21:41 +0100","Arie van Deursen","Uniform naming of Dummy classes"
"./src/test/java/org/junit/internal/MethodSorterTest.java","6766336047b3e30c92e47550b47bde2a36fac533","Sat, 17 Nov 2012 14:45:19 +0100","Arie van Deursen","Fixed MethodSorter test case for ascending sorter."
"./src/test/java/org/junit/internal/MethodSorterTest.java","3b00445ad1ad59323cbc1082180d84ffb8d27be4","Sat, 17 Nov 2012 13:06:12 +0100","Arie van Deursen","Renamed Dummy class to ClassWithoutSorterAnnotation"
"./src/test/java/org/junit/internal/MethodSorterTest.java","fb812b11c575fcf7bbe411a876903acd21ad04ea","Sat, 17 Nov 2012 12:25:38 +0100","Arie van Deursen","Renamed getXYZ test cases to testXYZ test cases."
"./src/test/java/org/junit/internal/MethodSorterTest.java","74941e1e1482016ffe705830cefb27cd376fb5ef","Sat, 17 Nov 2012 12:22:52 +0100","Arie van Deursen","Extract test case refactoring for subclass NullSorter Created a separate test case for null sorter applied to methods from the *sub* class. Fixed this test case so that it still works well under (jacoco) coverage."
"./src/test/java/org/junit/internal/MethodSorterTest.java","dfaf332b4df0d98293ac135e5abf9de6a2623b14","Thu, 15 Nov 2012 10:23:41 +0100","Arie van Deursen","Added different implementation for Null Sorter test"
"./src/test/java/org/junit/internal/MethodSorterTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/internal/MethodSorterTest.java","014f2410e81ed3ecc6b82fbac49ab345aab6e90f","Sun, 15 Jul 2012 14:19:20 +0200","Marc Philipp","Fix warnings in MethodSorterTest"
"./src/test/java/org/junit/internal/MethodSorterTest.java","d76010fde880fa836fab88e00b603552ab9aa838","Wed, 30 May 2012 07:44:47 -0400","Ian Beauregard","remove unused imports in MethodSorterTest"
"./src/test/java/org/junit/internal/MethodSorterTest.java","32330b13f2ded8603665264f8400ddf1f6dd969a","Wed, 30 May 2012 07:38:31 -0400","Ian Beauregard","make MethodSorter.NAME_ASCENDING a deterministic comparator, with Method.toString used as a tiebreaker"
"./src/test/java/org/junit/internal/MethodSorterTest.java","c360ca09cd3305eaf6e3f3026a6ee96d7e1ba65d","Tue, 29 May 2012 01:54:37 -0400","Ian Beauregard","Changed incorrect comments in MethodSorter and MethodSorters."
"./src/test/java/org/junit/internal/MethodSorterTest.java","7924760d2d64f5f7651e9e57d1ca01e1bcce74e0","Fri, 6 Apr 2012 23:20:45 +0200","Matthew Farwell","Following feedback from dsaff"
"./src/test/java/org/junit/internal/MethodSorterTest.java","35916619de9d9c3e7ec3d793ab3072c9e78db258","Wed, 4 Apr 2012 23:34:08 +0200","Matthew Farwell","Changes after review by kcooney"
"./src/test/java/org/junit/internal/MethodSorterTest.java","c610a49727858597d9a10289bed0a0174053a69f","Sun, 19 Feb 2012 11:36:18 +0100","Matthew Farwell","SortMethodsWith allows the user to choose the order of execution of the methods within a test class."
"./src/test/java/org/junit/internal/MethodSorterTest.java","3920f3fe11dffc904e1ab41a9ff4fc9d36b1c25b","Tue, 31 Jan 2012 14:52:41 -0500","Jesse Glick","Making Super and Sub member classes as suggested. https://github.com/KentBeck/junit/pull/293/files#r403246"
"./src/test/java/org/junit/internal/MethodSorterTest.java","5d9e0022d3f6db1367d530579de6332b9c8802e3","Wed, 21 Sep 2011 17:48:06 -0400","Jesse Glick","Switching to method sort based on hash code - deterministic but hard to abuse."
"./src/test/java/org/junit/internal/MethodSorterTest.java","b40493d53dab022c8a58c80284c01605b71d1d92","Mon, 19 Sep 2011 17:56:05 -0400","Jesse Glick","Use bytecode order of methods when possible."
"./src/test/java/org/junit/validator/AnnotationsValidatorTest.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/test/java/org/junit/validator/PublicClassValidatorTest.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/test/java/org/junit/validator/AnnotationValidatorFactoryTest.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","ecd5f06988192bffed1ea4c94691e5f42347bfd9","Wed, 12 Feb 2014 02:41:13 -0800","Reinhold Füreder","#769 Fix many warnings (Eclipse 4.2/Juno based) - Ref: According to kcooney's comment change the signature of CategoryFilterFactory.createFilter() to take in a List<Class<?>> instead"
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","aa7c75db0608e8ce9e76ee60c70ba429c7260fba","Thu, 21 Mar 2013 13:00:57 -0700","Noel Yap","Test added."
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee","Wed, 20 Mar 2013 15:04:26 -0700","Noel Yap","API simplified. FilterFactory.parseArgs() removed. FilterFactoryParams made final."
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/test/java/org/junit/tests/AllTests.java","88f7a12d472b1157639db5148b29c8a8825802a3","Sun, 6 Apr 2014 00:02:03 +0200","Stefan Birkner","Don't verify the visibility of a method's declaring class."
"./src/test/java/org/junit/tests/AllTests.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/test/java/org/junit/tests/AllTests.java","63743d52743cfdb104c38aabec192c8c86fadae0","Thu, 17 Apr 2014 17:20:19 -0700","Kevin Cooney","Merge pull request #773 from stefanbirkner/parameterized-runner-factory"
"./src/test/java/org/junit/tests/AllTests.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/test/java/org/junit/tests/AllTests.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/test/java/org/junit/tests/AllTests.java","41092ce4e01cc57d8aa1911e2f1169e0f355b1ae","Thu, 31 Oct 2013 23:54:25 +0100","Stefan Birkner","Move TestClassTest to package org.junit.runners.model."
"./src/test/java/org/junit/tests/AllTests.java","baf1ea01ec9c1ca2ba3091c493f0aedeab725560","Sat, 15 Feb 2014 13:59:58 +0100","Andreas Skoog","Merge branch 'master' of https://github.com/junit-team/junit into timedoutexception"
"./src/test/java/org/junit/tests/AllTests.java","4e9f1a65ca8d794db54260b4f2e5b078d949fdda","Sun, 22 Dec 2013 23:05:06 +0100","Stefan Birkner","Prevent creation of FrameworkMethod or FrameworkField without underlying member."
"./src/test/java/org/junit/tests/AllTests.java","dcc298cf98108fde395495e78ac4f28a9cdc496e","Thu, 28 Nov 2013 18:51:06 +0100","Andreas Skoog","Throw TestFailedOnTimeoutException instead of plain Exception on timeout. Fixes #771"
"./src/test/java/org/junit/tests/AllTests.java","d0642128fec2d0abad53131f32b0d8e86035ef50","Tue, 22 Oct 2013 00:19:53 +0200","flpa","test cleanup"
"./src/test/java/org/junit/tests/AllTests.java","17b56df85a6c055bb937e16fe1f2ad9d3e49f18c","Tue, 22 Oct 2013 00:07:50 +0200","flpa","moved new test to 'running' subpackage"
"./src/test/java/org/junit/tests/AllTests.java","4df71abb70690c98d42787bfe9f098f9fff01946","Tue, 22 Oct 2013 00:06:36 +0200","flpa","test restructuring - back to one class, again"
"./src/test/java/org/junit/tests/AllTests.java","81bb4fe24756a6a21b57975cac9eda4ce2304308","Sun, 20 Oct 2013 16:24:40 +0200","flpa","Added test for issue #380 to AllTests"
"./src/test/java/org/junit/tests/AllTests.java","aeaecd2e8bb022049ed89021df1ec6c4dbb15f77","Tue, 4 Jun 2013 17:42:11 -0700","David Saff","Merge pull request #647 from noel-yap/filter-option"
"./src/test/java/org/junit/tests/AllTests.java","b026c088d800013fa73ffb9647c13d3a87cdf55d","Mon, 27 May 2013 11:01:55 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/test/java/org/junit/tests/AllTests.java","a19cd9db1a4280037f0d2264e45af06eaa9f8023","Wed, 8 May 2013 23:24:14 +0200","Arie van Deursen","Created an initial test case for ComparisonFailures"
"./src/test/java/org/junit/tests/AllTests.java","56193048f411846a58c0e0377a5f1ccfecd3d2f9","Mon, 1 Apr 2013 14:53:38 -0700","Noel Yap","Command parsing errors internalized such that JUnitCore doesn't have to know about them."
"./src/test/java/org/junit/tests/AllTests.java","b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8","Wed, 27 Mar 2013 15:48:03 -0700","Noel Yap","Merge branch 'master' into filter-option"
"./src/test/java/org/junit/tests/AllTests.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/test/java/org/junit/tests/AllTests.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/test/java/org/junit/tests/AllTests.java","15c6048229bd16c4bfdd80b23f37357a58226d20","Fri, 15 Mar 2013 16:26:32 -0700","Noel Yap","More tests added."
"./src/test/java/org/junit/tests/AllTests.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/test/java/org/junit/tests/AllTests.java","5edfb4447b609c178d63a3d991172861076d143b","Thu, 7 Mar 2013 13:21:14 -0800","Noel Yap","Merge branch 'master' into filter-option"
"./src/test/java/org/junit/tests/AllTests.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/test/java/org/junit/tests/AllTests.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/test/java/org/junit/tests/AllTests.java","196c4ed79cbaca37709643b54913b361b677ae04","Thu, 28 Feb 2013 15:43:28 -0800","Noel Yap","--filter option implemented."
"./src/test/java/org/junit/tests/AllTests.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/AllTests.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/AllTests.java","de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a","Mon, 10 Dec 2012 19:33:01 +0100","Tibor Digana","Merge remote-tracking branch into junit.features"
"./src/test/java/org/junit/tests/AllTests.java","cbcb29a2d80b04803566a3aaaffd9dceb53053bf","Mon, 19 Nov 2012 23:55:49 +0100","Tibor Digana","changes"
"./src/test/java/org/junit/tests/AllTests.java","582d86c49eb8624b9db65e69ad0e404821505b3d","Mon, 19 Nov 2012 01:51:49 +0100","Tibor Digana","Time Watcher"
"./src/test/java/org/junit/tests/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/AllTests.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/test/java/org/junit/tests/AllTests.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/AllTests.java","17f7dfc72624253461022acff1d3aa6b9c4056cf","Thu, 24 May 2012 21:57:26 +0200","arjenw","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/test/java/org/junit/tests/AllTests.java","e381886b42fb190e3ebb82503330e8ca2788a929","Thu, 24 May 2012 17:05:26 +0200","arjenw","Files referring to the new CauseMatcher including the CauseMatcher itself"
"./src/test/java/org/junit/tests/AllTests.java","8d783ef4a517cfa7d6dbe7d1a13113d72489f485","Tue, 1 May 2012 13:46:33 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/AllTests.java","231241782c199d39943f742d0abe57057b0b785c","Wed, 25 Apr 2012 20:31:16 +0200","unknown","Reworked based on suggestions * Fixed the javadoc of ResultMatchers.failureIs() * Made the ResultMatchers.failureIs() matcher based on PrintableResult instead of Result * Introduced method 'getFailures()' in PrintableResult to achieve that * Moved causedBy() matcher from ResultMatchers to JUnitMatchers (as it is a Throwable matcher) * Introduced the required tests at the right places"
"./src/test/java/org/junit/tests/AllTests.java","1df71004338faf30b9287b03b726e1ce4f1246be","Sat, 21 Apr 2012 21:56:51 +0200","Marc Philipp","Fix #88"
"./src/test/java/org/junit/tests/AllTests.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/AllTests.java","c4279e432212ed6c23dee817113ae61ec4fbf86e","Mon, 9 Apr 2012 10:14:35 -0700","David Saff","Merge pull request #323 from stefanbirkner/assumption"
"./src/test/java/org/junit/tests/AllTests.java","7924760d2d64f5f7651e9e57d1ca01e1bcce74e0","Fri, 6 Apr 2012 23:20:45 +0200","Matthew Farwell","Following feedback from dsaff"
"./src/test/java/org/junit/tests/AllTests.java","4f1dbfc8619f5827a919106d14d42777b838638a","Tue, 3 Apr 2012 21:24:05 +0200","Marc Philipp","Remove everyItem matcher now provided by Hamcrest"
"./src/test/java/org/junit/tests/AllTests.java","8d63a24ea7165fa941e82c3b042b6a38caddc9b1","Wed, 21 Mar 2012 23:00:08 +0100","Marc Philipp","Remove deleted BothTest from AllTests"
"./src/test/java/org/junit/tests/AllTests.java","6f8a359dde5b1e317f0bab2da3ac2b5bce117884","Tue, 18 Oct 2011 20:34:02 +0200","Dmitry Vyazelenko","Cleanup TemporaryFolderUsageTest and add it to AllTests suite"
"./src/test/java/org/junit/tests/AllTests.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/test/java/org/junit/tests/AllTests.java","128553fc50758932f02fc6e13a3e25ef6a711152","Thu, 22 Sep 2011 00:58:18 +0200","Stefan Birkner","Fixes gh-121 (ExpectedException handles JUnit exceptions)"
"./src/test/java/org/junit/tests/AllTests.java","1014436692b0829a7287fbab81ef8720309d7945","Sun, 18 Sep 2011 23:20:46 +0200","Stefan Birkner","Fixes gh-42 (error message for non-static inner class)"
"./src/test/java/org/junit/tests/AllTests.java","e8349c5c609fea8706ca926b19fe9c9d0b637a8b","Wed, 14 Sep 2011 22:04:51 +0200","Stefan Birkner","Fixes gh-193 (allow explicit ordering of Rules)."
"./src/test/java/org/junit/tests/AllTests.java","8782efa08abf5d47afdc16740678661443706740","Fri, 24 Jun 2011 09:49:19 -0400","David Saff","Closes #248: protected BlockJUnit4ClassRunner#rules method removed from 4.8.2"
"./src/test/java/org/junit/tests/AllTests.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/test/java/org/junit/tests/AllTests.java","669bb577583f2edd8cd65008a7c9ac19ebc350ea","Fri, 15 Apr 2011 13:35:45 -0400","David Saff","Fixes issue #39, by having multiple calls to ParentRunner.filter result in the intersection of filters, rather than just the last one used."
"./src/test/java/org/junit/tests/AllTests.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/test/java/org/junit/tests/AllTests.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/test/java/org/junit/tests/AllTests.java","4041354a3a7629b74970e0624b7564736c20e1e3","Tue, 9 Nov 2010 08:57:34 -0500","David Saff","Starting to get rid of deprecation warnings"
"./src/test/java/org/junit/tests/AllTests.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/test/java/org/junit/tests/AllTests.java","b3831d600d2d893ec6250ee930188cc373d81ee5","Mon, 30 Aug 2010 22:10:50 -0400","David Saff","Fixed direct category/parameterized conflict in a hacky way.  Next, error for method-level category annotations in parameterized class."
"./src/test/java/org/junit/tests/AllTests.java","a8a05d5b490aff69efc6be29fa28a7b14674ab48","Mon, 19 Oct 2009 17:38:42 +0800","Alistair A. Israel","Added ClassrulesTest to exercise class-level @Rules"
"./src/test/java/org/junit/tests/AllTests.java","334bf585b5de1534d7c0ec519fa0df250d00f022","Mon, 12 Oct 2009 23:59:14 -0400","David Saff","This looks like a usable Category API"
"./src/test/java/org/junit/tests/AllTests.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/AllTests.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/org/junit/tests/AllTests.java","409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d","Mon, 6 Jul 2009 23:50:14 -0400","David Saff","Fixing Interceptor->Rule name changes"
"./src/test/java/org/junit/tests/AllTests.java","11258fcfd07dd63754fbea374bbba59ea82bc685","Thu, 4 Jun 2009 00:52:28 -0400","David Saff","Added Verifier and ErrorCollector"
"./src/test/java/org/junit/tests/AllTests.java","20dd0741fca1009e5f641cd0fd1f319459ceeed0","Thu, 4 Jun 2009 00:09:23 -0400","David Saff","Added TemporaryFile and ExternalResource interceptors"
"./src/test/java/org/junit/tests/AllTests.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/AllTests.java","26fa0a4207e21f058d220c84f8195ee25943400c","Wed, 27 May 2009 00:19:49 -0400","David Saff","ExpectedException Interceptor added"
"./src/test/java/org/junit/tests/AllTests.java","507e7b1799801409104fa5054b3bc6ac3fe82e7d","Mon, 11 May 2009 23:45:01 -0400","David Saff","Added TestName Interceptor"
"./src/test/java/org/junit/tests/AllTests.java","b737131b847c53bb4f1cf6dbf86f586008550eba","Mon, 11 May 2009 22:54:41 -0400","David Saff","Pairing approach to removing duplication from ParallelComputer, creating RunnerInterceptor."
"./src/test/java/org/junit/tests/AllTests.java","4d6f0702dae590809b808230f027a60aa0a4a345","Fri, 8 May 2009 10:35:06 -0400","David Saff","Added parallel tests to AllTests"
"./src/test/java/org/junit/tests/AllTests.java","e5a301651a359ed4ce2c1dd81a4a73868b4dddcc","Mon, 4 May 2009 23:50:04 -0400","David Saff","Added a Timeout Interceptor, to apply the same timeout to all methods."
"./src/test/java/org/junit/tests/AllTests.java","28d40d93420cacdb4d420b04475bafdc7d89d922","Tue, 28 Apr 2009 23:29:50 -0400","David Saff","Interceptors and Watchmen, because we're just that cool."
"./src/test/java/org/junit/tests/AllTests.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/test/java/org/junit/tests/AllTests.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/test/java/org/junit/tests/AllTests.java","8d9ac8d65204fe8cd7e1d9146f123a461952bae9","Wed, 12 Nov 2008 22:17:56 +0000","kbeck","Zeroing in on the JUnitMax error where it runs JUnit 3.8 tests multiple times."
"./src/test/java/org/junit/tests/AllTests.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/test/java/org/junit/tests/AllTests.java","0b6e837fbf3a02fd28b4930e12cfcf86801b1d75","Tue, 22 Jul 2008 20:33:24 +0000","dsaff","Added 4.5 release notes, and removed two tests"
"./src/test/java/org/junit/tests/AllTests.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/AllTests.java","412519b20d4cb96466c03466fa003068e9fb5eca","Thu, 10 Jul 2008 20:50:01 +0000","kbeck","Added FilterableTest to AllTests"
"./src/test/java/org/junit/tests/AllTests.java","eb2750d861ac1ecf2dbd0425e457fe833468a169","Tue, 1 Jul 2008 17:01:37 +0000","kbeck","Added Johannes Link's test for running subclasses of Suite"
"./src/test/java/org/junit/tests/AllTests.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/test/java/org/junit/tests/AllTests.java","cde32fb62ad8f5a05d700ce3189e131fa51739cb","Mon, 21 Jan 2008 20:35:00 +0000","dsaff","Theories are a lot faster, by caching the @Before and @After methods and sharing them between all Theory method invocations."
"./src/test/java/org/junit/tests/AllTests.java","9c8d59d9869280a698c3f3a119eb69f0e897c94b","Thu, 13 Dec 2007 06:35:44 +0000","dsaff","Remove CompositeRunner, which has nothing to add to Suite"
"./src/test/java/org/junit/tests/AllTests.java","840b02e455b1da9741ea02160160acd6d63865d2","Sat, 8 Dec 2007 19:49:51 +0000","dsaff","FrameworkMethod now obeys object contract"
"./src/test/java/org/junit/tests/AllTests.java","70fcf98c69eace2e6cc6dc37b54e70fe57c490f1","Fri, 7 Dec 2007 18:27:49 +0000","dsaff","Improve description of hasFailureContaining"
"./src/test/java/org/junit/tests/AllTests.java","4d1d0bb9ee6926b5a85ebc2ad077eb31f94e1181","Fri, 7 Dec 2007 17:53:27 +0000","dsaff","if DataPoints annotation present on a field, and looking for Object parameter, interpret as array, not object"
"./src/test/java/org/junit/tests/AllTests.java","9ba0d7a6ada9742d3f7a721cfab09c29e80ca39d","Fri, 7 Dec 2007 17:44:39 +0000","dsaff","Complain if class has more than one constructor"
"./src/test/java/org/junit/tests/AllTests.java","75f789242bd1859cf6798c3c49f45a9216ff553f","Fri, 7 Dec 2007 16:55:10 +0000","dsaff","Removed nascent category implementation"
"./src/test/java/org/junit/tests/AllTests.java","77ecd2119d3124b72935038effffadf7b98eccd9","Fri, 7 Dec 2007 16:36:33 +0000","dsaff","Properly handles ignore notifications from inside a started/ended block"
"./src/test/java/org/junit/tests/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","f4682ce2558cdca60d12fbef39e9ca0370eba592","Thu, 13 Feb 2014 11:15:27 +0100","reinholdfuereder","Merge branch 'master' into fix-warnings"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","d9054149988487750679e35a349df7e0e2df5870","Wed, 25 Sep 2013 10:04:04 +1000","Ricky","changed arguments to validate methods to use JUnit classes as opposed to java.lang.reflect"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","fe5d86eba71a1f59dbbed09de4add01cc20420c0","Tue, 24 Sep 2013 12:51:40 +1000","Ricky","- statically imported Collections where appropriate - refactored the construction of the incompatiable annotations of CategoryValidator to be initialized immediately"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","bae4bd80513360c5e884e760447000d9c96ffd72","Thu, 29 Aug 2013 16:57:37 +1000","Ricky","Changes from more feedback - extracted creation of annotation validator into a factory - added thread saftey around collections"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe","Tue, 2 Jul 2013 21:23:20 +1000","Ricky","More changes after feedback"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","85f9d8397bfd96261c3214284672180c522e2d38","Mon, 3 Jun 2013 22:27:53 +1000","Ricky","changes after feedback"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","48af7e797dbefa1fc47e80394c7f74ef87c3c7ab","Tue, 28 May 2013 15:36:45 +1000","Ricky","adding annotation validators functionality"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","5d9e0022d3f6db1367d530579de6332b9c8802e3","Wed, 21 Sep 2011 17:48:06 -0400","Jesse Glick","Switching to method sort based on hash code - deterministic but hard to abuse."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","db8c72be9df8e7d605600cc5f370dffa35112362","Thu, 14 Jul 2011 21:40:16 +0200","Stefan Birkner","applied code review"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","d04a0d02ac8418c4fdbf926bdcfcb7b2bafee936","Sat, 9 Jul 2011 22:59:09 +0200","Stefan Birkner","TestClass.getAnnotatedFieldValues(...) throws exception with helpful message for non static fields (fixes issue #257)."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","d6f71260512973e70417b999f1efa9757659b1e1","Sat, 9 Jul 2011 22:38:07 +0200","Stefan Birkner","Using TetClass.getAnnotatedFieldValues in order to get classRule fields (fixes issue #258"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","cb6abf6fc729f07c5d60b0756e91af444400b4b5","Mon, 25 Nov 2013 22:37:12 +0100","Stefan Birkner","Use a ParametersRunnerFactory for creating the test for a set of parameters."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","f6a3d7405b72966d3714355804e1b3c14b1425cb","Tue, 2 Jul 2013 00:23:02 +0200","Stefan Birkner","Support more return types for the @Parameters method. Fixes #700."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","8672a83f51b183c756649a423b908271c894b8df","Mon, 20 Aug 2012 08:43:29 +0200","Jeremy Herault","Spelling"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","cbf46b88c2937aece7018fa50ba4dbb133e03d06","Fri, 17 Aug 2012 14:56:22 +0200","Jeremy Herault","Pull request #182 && #483: Adding Parameter annotation for field parameters"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","1379441f829db2dbb048caf787e18ce6a966059b","Mon, 5 Mar 2012 23:03:04 +0100","Stefan Birkner","The runner adds the square brackets to the name."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","e0cddcdfa8ec823da136af500cce0910a1dd2264","Fri, 2 Mar 2012 23:18:01 +0100","Stefan Birkner","Add names for parameterized tests. Fixes #24 and #44."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","5475e12b57f5af0140deffa7f45c75dc47803167","Fri, 21 Oct 2011 01:29:17 +0200","Stefan Birkner","Use Iterable for the parameters of Parameterized (fixes #104)."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","66cf6859fa74021320c9b0d5e0a6ffc5c86b770f","Mon, 4 Jan 2010 22:43:46 -0500","David Saff","Description.getChildren removed from all tests"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","b5e9885854a0d594451800b9127eb50afb645433","Mon, 13 Apr 2009 22:07:14 -0400","David Saff","Revert "Added AfterParameterize and BeforeParameterize to allow methods to run before and after parameterized tests""
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","6abd4e65122ac6e3b56cf53a9a7540b61e4e687e","Mon, 23 Mar 2009 04:13:50 +0800","Mike Forsberg","Added AfterParameterize and BeforeParameterize to allow methods to run before and after parameterized tests"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","a07f1be1bc7eb7f7d757da48d0a3110452cca4d4","Thu, 31 Jul 2008 13:59:58 +0000","dsaff","Cleaned up implementation of Parameterized to better use its Suite subclass, and better validate the test class"
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","3ef1b3ac5d45cd0023afc18739aadf4f15b9d80c","Thu, 26 Jun 2008 13:55:23 +0000","kbeck","Turned off javadoc and deprecated warnings and deleted java.hprof.txt."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/classes/BlockJUnit4ClassRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/BlockJUnit4ClassRunnerTest.java","1014436692b0829a7287fbab81ef8720309d7945","Sun, 18 Sep 2011 23:20:46 +0200","Stefan Birkner","Fixes gh-42 (error message for non-static inner class)"
"./src/test/java/org/junit/tests/running/classes/ClassLevelMethodsWithIgnoredTestsTest.java","445ea85dd748e4e83cf7be5940b41df95b3ffa8d","Tue, 22 Oct 2013 01:03:06 +0200","flpa","minor changes in test"
"./src/test/java/org/junit/tests/running/classes/ClassLevelMethodsWithIgnoredTestsTest.java","d0642128fec2d0abad53131f32b0d8e86035ef50","Tue, 22 Oct 2013 00:19:53 +0200","flpa","test cleanup"
"./src/test/java/org/junit/tests/running/classes/RunWithTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/RunWithTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/classes/ParentRunnerFilteringTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerFilteringTest.java","dfd0bba58bfdacfd8802ee07c8f83ee794a51aba","Mon, 30 May 2011 11:58:46 -0700","Kevin Cooney","Update ParentRunner to make a copy of the List returned by getChildren() Fixes issue #227"
"./src/test/java/org/junit/tests/running/classes/ParentRunnerFilteringTest.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/test/java/org/junit/tests/running/classes/SuiteTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/SuiteTest.java","fd1111ed097e0db6602c2f388d41c7ad817c7f9f","Tue, 28 Apr 2009 16:12:32 -0400","David Saff","SuiteClasses is inherited"
"./src/test/java/org/junit/tests/running/classes/SuiteTest.java","b8008562db24f9189b90dd0e3864a381681d527f","Thu, 13 Dec 2007 07:45:29 +0000","dsaff","Sort members of Suite"
"./src/test/java/org/junit/tests/running/classes/SuiteTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/classes/UseSuiteAsASuperclassTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/UseSuiteAsASuperclassTest.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/running/classes/UseSuiteAsASuperclassTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/running/classes/UseSuiteAsASuperclassTest.java","eb2750d861ac1ecf2dbd0425e457fe833468a169","Tue, 1 Jul 2008 17:01:37 +0000","kbeck","Added Johannes Link's test for running subclasses of Suite"
"./src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java","f06b01dcd0b9b0be4f0bd62eaf00b5cc3b0f8a65","Fri, 7 Dec 2007 16:35:00 +0000","dsaff","Indicate reason when a class is ignored"
"./src/test/java/org/junit/tests/running/classes/IgnoreClassTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","afbeeb315f4a2b2d4b21bf6f38cef2b83df6b97a","Mon, 3 Dec 2012 11:05:03 -0500","Nicolas A. Bérard-Nault","Fixed style (annotations on a separate line)"
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","8675e5bf75f4865f3ff2d0f840d0d6022f1c59b6","Mon, 3 Dec 2012 10:25:15 -0500","Nicolas A. Bérard-Nault","Expanded tabs to spaces"
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","bb13feee21bc4a77513d50d6855c4396db9f0609","Fri, 9 Nov 2012 23:03:20 -0500","Nicolas A. Bérard-Nault","Merge branch 'master' of https://github.com/KentBeck/junit"
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","0c458a8796cc5ffcda5286ee4a367c8e31ae7c88","Wed, 20 Jun 2012 17:45:28 -0400","Nicolas A. Bérard-Nault","Changed Enclosed runner to ignore abstract classes. Before this change, an abstract enclosed class caused jUnit to throw an exception."
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/running/classes/EnclosedTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/core/CommandLineTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/core/CommandLineTest.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/test/java/org/junit/tests/running/core/CommandLineTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/core/SystemExitTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/core/SystemExitTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/core/JUnitCoreReturnsCorrectExitCodeTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/core/JUnitCoreReturnsCorrectExitCodeTest.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/test/java/org/junit/tests/running/core/JUnitCoreReturnsCorrectExitCodeTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/core/MainRunner.java","2745d016f648e783360bd076f23b36908f8125b0","Tue, 25 Feb 2014 18:04:10 +0000","Miltos Allamanis","Renamed "oldPrintStream" to "oldOut" to make the naming slightly more consistent."
"./src/test/java/org/junit/tests/running/core/MainRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/core/MainRunner.java","4596630d76860059088be0fe4376679452fc3b35","Fri, 9 Mar 2012 08:32:20 +0100","Matthew Farwell","Use SecurityManager recommended by Stefan Birkner"
"./src/test/java/org/junit/tests/running/core/MainRunner.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/test/java/org/junit/tests/running/methods/ExpectedTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/ExpectedTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","2d886e29734f9f55b75db91095880c5d109ff678","Thu, 19 Jul 2012 20:52:39 +0200","Marc Philipp","Use allOf() instead of both() to avoid type parameter"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","c2bdb1a2d89a61edc6c5cf7dd2a07b3f2119eea2","Mon, 9 Apr 2012 21:08:20 +0200","Marc Philipp","Fix javac build"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","7dd6711cb9e552cee8091893d4085fdc3f9996b0","Fri, 29 May 2009 09:57:31 -0400","David Saff","Undeprectated JUnitMatchers.either and .both, with different typing, and created JUnitMatchers.matches"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","71ce2b015df78f167e4681b097cadc2e0e6655e2","Wed, 6 Aug 2008 13:29:14 +0000","dsaff","JUnit4 runner as a pointer to the current default"
"./src/test/java/org/junit/tests/running/methods/AnnotationTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","c52397d4d704a85499a17e9d3a2c1bcb8c5f0906","Mon, 14 Apr 2014 11:52:28 -0400","Mike Drob","fixes #875"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","c1895d120e68c17d6dd4378884e53be0cc351369","Fri, 15 Nov 2013 12:06:50 -0800","Adam Beneschan","changes to address kcooney's concerns about thread safety on issue #742"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","3e8e865039fe6531666afb860961d787065b589e","Fri, 11 Oct 2013 16:58:18 -0700","Adam Beneschan","Check for stuck threads now must be enabled in a Rule"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","35b428a24bdd2eddd9653189632896d4f5b1ce42","Thu, 3 Oct 2013 18:11:14 -0700","Adam Beneschan","style improvements"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","7eef2314cb78d41def996cdd80c5a56c94a993f3","Wed, 2 Oct 2013 10:40:24 -0700","Adam Beneschan","fixed logic of self-test"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","fba19ba73a93dcc2d18942b3cf4992ce010afdb2","Wed, 2 Oct 2013 10:32:27 -0700","Adam Beneschan","improvements suggested by dsaff, and added self-test"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","480b98e7f1bce46382e47fc30db2ef1a98a58b66","Fri, 17 Apr 2009 15:27:26 -0400","David Saff","Holy cow, vanilla threads work"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/test/java/org/junit/tests/running/methods/TimeoutTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/methods/InheritedTestTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/InheritedTestTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","b0c9945e21e66efcc947b3859f947185a87c59a9","Mon, 9 Feb 2009 23:17:49 -0500","David Saff","Removed misguided fIgnoredDuringRun flag"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","b0b34427e9e644868f2b63d40d0556c35e818a63","Wed, 30 Jul 2008 20:39:27 +0000","dsaff","Make sure constructor has no args"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","9a789a40295a91844e4e16afee93d5ff7218951a","Tue, 29 Jul 2008 17:11:20 +0000","dsaff","Publishing TestClass and doc'ing ParentRunner"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/test/java/org/junit/tests/running/methods/TestMethodTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java","3ef1b3ac5d45cd0023afc18739aadf4f15b9d80c","Thu, 26 Jun 2008 13:55:23 +0000","kbeck","Turned off javadoc and deprecated warnings and deleted java.hprof.txt."
"./src/test/java/org/junit/tests/deprecated/JUnit4ClassRunnerTest.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","02371d1154f29f894cd2c7f83ce6743f4abbe76a","Tue, 12 Feb 2013 00:16:40 +0000","pimterry","Added two simple tests for boolean assertArrayEquals"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","78b4a8975523d0288a6f20f0ae7862b45cb55038","Sun, 13 Jan 2013 12:46:31 -0500","Craig P. Motlin","Implement assertNotEquals() for float parameters."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","688854ba468c53884b74952f4daf938a99c44e8c","Fri, 25 May 2012 14:48:29 -0700","David Saff","Merge pull request #416 from jcortez/master"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","2238ad20fefadf546a71725f46a6dc463c9d58ad","Thu, 24 May 2012 23:07:09 -0700","Juan Cortez","Rebased changes"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","17f7dfc72624253461022acff1d3aa6b9c4056cf","Thu, 24 May 2012 21:57:26 +0200","arjenw","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","811b0efc7f90a75b2913f8ecea0011b2434cd4ff","Wed, 9 May 2012 11:54:11 -0700","David Saff","Merge pull request #418 from detinho/_issue_22"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","8d783ef4a517cfa7d6dbe7d1a13113d72489f485","Tue, 1 May 2012 13:46:33 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","c19ffebced2cfda962d868ba76e0dbfb3504cc37","Sun, 22 Apr 2012 15:00:42 +0600","Andrey Hitrin","Fixed #170: display actual object value in assertNull()"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","c28663267220fcb4660f51b663d3de76a7af23ff","Wed, 11 Apr 2012 23:03:20 -0300","Marcos Vinícius da Silva","Fixing identation and some tests."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","a0eea1357f0a0f4faea1245197f20ceee5ca3a5a","Tue, 3 Apr 2012 21:37:49 +0200","Marc Philipp","assertThat uses org.hamcrest.MatcherAssert"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","53929101b4d9606d92dfd8d52e87f5dda467d51a","Tue, 17 Jan 2012 12:13:16 +0100","Arjen Wisse","Implemented the change now on org.junit.Assert.assertThat() as I think that's a better place and has cleaner code than the original. Included tests for both scenario's (assertThat as well as the ExpectedException)."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","9f305841434b53b463ce93f5dcc7826b72cd11db","Fri, 19 Aug 2011 19:59:51 -0700","Juan Cortez","Added test for issue #219"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","7a65992af084650c52dc69380ae1ac24b107715c","Sat, 6 Aug 2011 09:27:55 -0300","Marcos Vinícius da Silva","Adding assertNotEquals to Object, long and double"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","766343797294634c86186664c519d65d7d984c96","Fri, 7 Jan 2011 20:36:11 -0800","Kevin Cooney","Fix AssertionError.toString() when no messages are passed."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","15815f55d2e9ae567ef8fe0a172f498b87a3a880","Mon, 20 Jul 2009 22:01:25 -0400","David Saff","Last errors gone from Hamcrest rollback"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","e4c7fac80cac937faf413e3ddd58e0fd091bd367","Tue, 30 Jun 2009 22:55:03 -0400","David Saff","Better extension point for adding interceptors"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","50b77b1f3108aa77af0906162d552e513936c322","Mon, 15 Jun 2009 22:12:10 -0700","David Saff","Advance version, and beef up ErrorCollector with checkThat and checkPasses"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","c9e0f1a3a519bdab2d71b48635a9cc7df3cff3fa","Mon, 1 Jun 2009 23:08:41 +0800","David Saff","JUnitMatchers.matches creates any type"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","323e55fbc5dbf8d977b23220fa2316cbfceaeb6b","Fri, 29 May 2009 23:57:14 +0800","David Saff","Fixed warnings"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","79b7c3e8f1d725460212c659524b9bbf5d8a1461","Fri, 29 May 2009 23:56:22 +0800","David Saff","Hamcrest 1.2 documented in release notes"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","68e5927ecf49bb21c396c423c3669ada15b7fe1b","Mon, 6 Apr 2009 22:31:18 -0400","David Saff","Last changes with Kent."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","41cbbf7e228b8f7908e672a79863ff970316b120","Tue, 18 Nov 2008 22:51:29 +0000","dsaff","Asserting on arrays of doubles"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","8e3f361443ddf8bca21c3db661c75d374fe78dba","Wed, 16 Jul 2008 00:21:15 +0000","kbeck","Refactored to eliminate Notifier and its subclasses. You don't pull your weight around here and you're history."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c","Wed, 7 May 2008 00:32:09 +0000","kbeck","Cleaned up javadoc and ant build problems."
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","a90f320bbb189f07ff2fca81a9b5e4e0c8381978","Tue, 5 Feb 2008 22:06:47 +0000","kbeck","Fixed 1857283, assertEquals(null, "null)"
"./src/test/java/org/junit/tests/assertion/AssertionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/assertion/ComparisonFailureTest.java","dc730e3cfd2c567f7f28060920c275db68a1230d","Thu, 9 May 2013 11:30:00 +0200","Arie van Deursen","Reworded postfix to suffix."
"./src/test/java/org/junit/tests/assertion/ComparisonFailureTest.java","f4327736c972fedab912ea5508095e312f1f79e1","Sun, 5 May 2013 22:26:56 +0200","Arie van Deursen","Switching to a Parameterized test class."
"./src/test/java/org/junit/tests/assertion/ComparisonFailureTest.java","a19cd9db1a4280037f0d2264e45af06eaa9f8023","Wed, 8 May 2013 23:24:14 +0200","Arie van Deursen","Created an initial test case for ComparisonFailures"
"./src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java","af73a48fe7d8e3886dbe45ba65844d833d58c89d","Fri, 13 Sep 2013 10:32:27 -0700","Kevin Cooney","Add back @Test tags accidentially removed in the previous commit"
"./src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java","cb818f191ea2b9fe563aa20c581b16f3f23b7c4c","Thu, 12 Sep 2013 22:01:56 -0700","Kevin Cooney","Change signature of MultipleFailureException.assertEmpty() to throw Exception."
"./src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java","8f11e709cd7dc7207002b3cf31c6da9462da1a1e","Fri, 15 Feb 2013 08:40:14 -0800","Kevin Cooney","Remove incorrect copyrights"
"./src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/test/java/org/junit/tests/ObjectContractTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/ObjectContractTest.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/ObjectContractTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/ObjectContractTest.java","840b02e455b1da9741ea02160160acd6d63865d2","Sat, 8 Dec 2007 19:49:51 +0000","dsaff","FrameworkMethod now obeys object contract"
"./src/test/java/org/junit/tests/junit3compatibility/OldTestClassAdaptingListenerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/OldTestClassAdaptingListenerTest.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/test/java/org/junit/tests/junit3compatibility/OldTestClassAdaptingListenerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/test/java/org/junit/tests/junit3compatibility/InitializationErrorForwardCompatibilityTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/test/java/org/junit/tests/junit3compatibility/AllTestsTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","51f22b5c68e8da3f5b46a4c48a1d4a0451ad6fe3","Tue, 8 Oct 2013 17:18:05 -0700","Brett Chabot","Fix code review comments: Rename to RejectAllTestsFilter and use description.isSuite()"
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","9b9d86d7e11ba518a826ce35784857d2c1428f38","Thu, 19 Sep 2013 18:59:52 -0700","Brett Chabot","Change RejectAllTestsFilter to only reject atomic tests."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","73f85f59ea686adb8f05a294ffc114b9ec20f2ba","Fri, 13 Sep 2013 11:56:24 -0700","Brett Chabot","Address code review comments"
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","d56c7296efd21e517c2c5bead01021f8796b31a7","Wed, 21 Aug 2013 11:47:49 -0700","Brett Chabot","Properly handle case where filter removes all JUnit3 tests in suite."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","810536929044271a608e019255e87c756235bb97","Wed, 14 Aug 2013 18:25:20 -0700","Brett Chabot","Fix annotation collection from super classes of JUnit3 tests."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","90b53f3683af074aa7aa982821219338053b0345","Fri, 24 May 2013 11:41:47 -0700","Brett Chabot","Addressed code review comments in JUnit38ClassRunnerTest"
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","c6e3d2cf121ce6e371bafefa59f216054167845b","Wed, 1 May 2013 19:06:57 -0700","Brett Chabot","Cleaned up whitespace in JUnit38ClassRunner. Added a unit test."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","c7874453182cde8e7b38cf3ce356d16d3d1dcde8","Wed, 29 Apr 2009 14:19:36 -0700","KentBeck","Fixed error message for malformed JUnit 3.8 test."
"./src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java","d148bce8682505082a3cc634acbd36ac13a10c9a","Thu, 10 Jan 2008 04:12:53 +0000","dsaff","A SuiteBuilder can be explicitly passed to a Runner class that needs one in its constructor.  This eliminates the ugly global constant SuiteBuilder in Suite, and breaks the cyclic dependency between runners and requests"
"./src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityPrintingTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityPrintingTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","d70ca7f71cad6282d389e1703e47b6b0639cde9e","Tue, 25 Feb 2014 10:20:08 +0000","Miltos Allamanis","Renamed "result" (18.69%) to "suite" (81.31%). The naturalize tool detected that using "suite" is more consistent with the current codebase state."
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","9de3abe6c337247fd4b5d5af6406bdbb30403f50","Thu, 21 Jan 2010 15:52:21 -0500","David Saff","private fields and appropriate use of Plan"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","02fc1f509a670de3632417bbf33168989bfcf872","Tue, 5 Jan 2010 11:51:45 -0500","David Saff","merged with master"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","870289f3272917f312de6902b8b6bdc43552d4b7","Mon, 21 Dec 2009 22:54:05 -0500","David Saff","Simplify Filter implementation for backward compatibility"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/OldTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/OldTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","07447b5f98989e4456be8ee8acd01cfb3d20b8c0","Sun, 6 Apr 2014 21:17:18 +0400","Brazhnikov","Small fixes, mainly in throws signatures"
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/test/java/org/junit/tests/junit3compatibility/ForwardCompatibilityTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/listening/RunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/listening/RunnerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/listening/UserStopTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/listening/UserStopTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/listening/ListenerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/listening/ListenerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/listening/TestListenerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/listening/TestListenerTest.java","0ce06206263ed060bd0ede049c1713286c2487ea","Sat, 10 Mar 2012 02:05:14 +0100","Stefan Birkner","Don't remove listeners, which throw exceptions (fixes #209 and #395)"
"./src/test/java/org/junit/tests/listening/TestListenerTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/listening/TestListenerTest.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/test/java/org/junit/tests/listening/TestListenerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","ecaf372366ec1b9a3ffc3b3e9961d769bb8013cc","Mon, 24 Sep 2012 22:29:57 +0200","Tibor Digana","TextListenerTest failed with unexpected elapsed time"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","8a8008c96936d468a2f579bcea9a71e965558d57","Fri, 7 Dec 2007 18:44:09 +0000","dsaff","Ignored tests should be shown differently in stack trace section of report"
"./src/test/java/org/junit/tests/listening/TextListenerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/package-info.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/manipulation/FilterTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/manipulation/FilterTest.java","a4c5380ffe636edc0acbab144080adbc709d668c","Mon, 30 May 2011 20:28:12 -0700","Kevin Cooney","Optimize Filter.intersect() for common cases - ALL.intersect(filter) - filter.intersect(ALL) - filter.intersect(filter)"
"./src/test/java/org/junit/tests/manipulation/FilterTest.java","669bb577583f2edd8cd65008a7c9ac19ebc350ea","Fri, 15 Apr 2011 13:35:45 -0400","David Saff","Fixes issue #39, by having multiple calls to ParentRunner.filter result in the intersection of filters, rather than just the last one used."
"./src/test/java/org/junit/tests/manipulation/SortableTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/manipulation/SortableTest.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/manipulation/SortableTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","fab8f0da7e35f0436b80bf5cfe799882b2cb4db5","Tue, 28 Oct 2008 20:03:43 +0000","kbeck","Eclipse isn't quite calling Max just yet. Keep sinning until it does."
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","d8b6eb74e0e3466d66c9ff75e55f087c09a959b1","Thu, 10 Jul 2008 01:02:06 +0000","kbeck","Cleaned up ParentRunner in search of the elusive filter bug"
"./src/test/java/org/junit/tests/manipulation/FilterableTest.java","0b1337a4536d95480ef94b27310cde48a552d634","Wed, 9 Jul 2008 21:01:39 +0000","kbeck","Added failed test for filtering"
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","66cf6859fa74021320c9b0d5e0a6ffc5c86b770f","Mon, 4 Jan 2010 22:43:46 -0500","David Saff","Description.getChildren removed from all tests"
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/manipulation/SingleMethodTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/validation/ValidationTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/validation/ValidationTest.java","5a7824ae153484cb898c3850aa71b2cadf6f3fcc","Mon, 11 Aug 2008 20:10:58 +0000","dsaff","Non-static BeforeClass test has better name"
"./src/test/java/org/junit/tests/validation/ValidationTest.java","0b65be5d4d0aaf5867ed414765c0c48ceeb00e18","Thu, 31 Jul 2008 23:44:19 +0000","kbeck","Fixed AfterClass javadoc and added a ValidationTest that appears to already be working in spite of complaints to the contrary."
"./src/test/java/org/junit/tests/validation/ValidationTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/validation/anotherpackage/Super.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/validation/anotherpackage/Super.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/validation/anotherpackage/Sub.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/validation/anotherpackage/Sub.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/validation/BadlyFormedClassesTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/validation/BadlyFormedClassesTest.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/test/java/org/junit/tests/validation/BadlyFormedClassesTest.java","3dd6b9fca5ccbd02a4d1cb5c5b3c921e369662a0","Fri, 1 Aug 2008 15:28:05 +0000","dsaff","validation errors in JUnit4ClassRunner are again reported."
"./src/test/java/org/junit/tests/validation/BadlyFormedClassesTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/validation/FailedConstructionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/validation/FailedConstructionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/description/TestDescriptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/description/TestDescriptionTest.java","24f9b5223c2801a5cba0611e447e66677069b837","Thu, 22 Mar 2012 11:51:45 +0000","Aslak Hellesøy","Allow creation of Description with a unique id. Needed for Cucumber-JVM."
"./src/test/java/org/junit/tests/description/TestDescriptionTest.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/description/TestDescriptionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/description/AnnotatedDescriptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/description/AnnotatedDescriptionTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/description/AnnotatedDescriptionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/description/SuiteDescriptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/description/SuiteDescriptionTest.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/test/java/org/junit/tests/description/SuiteDescriptionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/TestSystem.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/TestSystem.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/test/java/org/junit/tests/TestSystem.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/internal/runners/ErrorReportingRunnerTest.java","96cfed79612de559e454a1a91724a061e8615ae4","Tue, 8 Apr 2014 23:19:46 +0400","Alexander Jipa","fixes #177"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","a4f088dcc647409c3612a55480a9908755b52f31","Tue, 7 Jan 2014 09:13:16 +0100","Andreas Skoog","minor formatting change"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","26c25f3dbf524f4efd90e97f41c6df10345e78a9","Wed, 25 Dec 2013 15:21:10 +0100","Andreas Skoog","Rename TestFailedOnTimeoutException -> TestTimedOutException"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","66bfb24d328bd480e31c3834cfdfdca53173c62a","Wed, 4 Dec 2013 15:32:54 +0100","askoog","Refactor test, replace matcher with try catch"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","bf2f922c9445e6ee24891f64a5a7ca0e68f7f786","Mon, 2 Dec 2013 13:52:00 +0100","Andreas Skoog","Add second test verifying the time unit and timeout value fields of the thrown exception"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","619f4ff569542e0d03787bdb76ad3d4e3ec3e423","Fri, 29 Nov 2013 12:30:28 +0100","Andreas Skoog","Improvements after code review. Move Exception to non internal package and provide getters for timeout and time unit"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","dcc298cf98108fde395495e78ac4f28a9cdc496e","Thu, 28 Nov 2013 18:51:06 +0100","Andreas Skoog","Throw TestFailedOnTimeoutException instead of plain Exception on timeout. Fixes #771"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","cbf5dd3f8efc106bcb438203942d781831121071","Fri, 27 Apr 2012 20:34:34 +0200","Peter De Maeyer","Organized imports according to project's conventions"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","60d24dd036af00488f14713b97b47a2a72e5db3b","Tue, 21 Feb 2012 18:48:25 +0100","Peter De Maeyer","Improved failure message (#384)"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","a134a8623b68ef06517196af1b8ffa744e4c3935","Thu, 16 Feb 2012 18:24:02 +0100","Peter De Maeyer","Improved failure message (#384)"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","f634102cf058ed5761b2e4ef66761e2f397b6160","Wed, 15 Feb 2012 21:27:20 +0100","Peter De Maeyer","Timeout exception contains the real cause of the timeout (#384)"
"./src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java","1ad3a59952f3528914d1225d51bbb04adb62c22f","Tue, 9 Aug 2011 22:45:17 +0200","Stefan Birkner","Fixed FailOnTimeout class (issue #265)"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","3bb48f0a58eb44f36b6e03538a7db05b6c6da335","Tue, 21 Aug 2012 18:15:02 +0200","Matthew Farwell","Fixes #355 Improve Assume to allow custom message"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","ab51452ac565d286b7bbd5a13767253c317bb29f","Mon, 3 May 2010 22:23:59 -0400","dsaff","Fixes github#98: assumptions with expected exceptions"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","af9634a3656bcd9c3988692c32381d0772077584","Thu, 10 Jan 2008 04:59:22 +0000","dsaff","Organized classes and methods for reporting ignored and invalid tests"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/test/java/org/junit/tests/experimental/AssumptionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/MatcherTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/MatcherTest.java","80b7fbad6e37f2b229a919f595a5263dd21da8fb","Wed, 12 Dec 2012 14:09:35 -0600","Paul Holser","Ensure no-generic-type-parms validator gets executed/tested."
"./src/test/java/org/junit/tests/experimental/MatcherTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/MatcherTest.java","da9a91f77d9e3045b2692afb4fe9fc12eeb8a93f","Fri, 7 Dec 2007 18:43:47 +0000","dsaff","Remove duplication in test logic"
"./src/test/java/org/junit/tests/experimental/MatcherTest.java","70fcf98c69eace2e6cc6dc37b54e70fe57c490f1","Fri, 7 Dec 2007 18:27:49 +0000","dsaff","Improve description of hasFailureContaining"
"./src/test/java/org/junit/tests/experimental/categories/MultiCategoryTest.java","de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a","Mon, 10 Dec 2012 19:33:01 +0100","Tibor Digana","Merge remote-tracking branch into junit.features"
"./src/test/java/org/junit/tests/experimental/categories/CategoriesAndParameterizedTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/categories/CategoriesAndParameterizedTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/org/junit/tests/experimental/categories/CategoriesAndParameterizedTest.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java","d9054149988487750679e35a349df7e0e2df5870","Wed, 25 Sep 2013 10:04:04 +1000","Ricky","changed arguments to validate methods to use JUnit classes as opposed to java.lang.reflect"
"./src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java","fe5d86eba71a1f59dbbed09de4add01cc20420c0","Tue, 24 Sep 2013 12:51:40 +1000","Ricky","- statically imported Collections where appropriate - refactored the construction of the incompatiable annotations of CategoryValidator to be initialized immediately"
"./src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/test/java/org/junit/tests/experimental/categories/JavadocTest.java","de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a","Mon, 10 Dec 2012 19:33:01 +0100","Tibor Digana","Merge remote-tracking branch into junit.features"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a","Mon, 10 Dec 2012 19:33:01 +0100","Tibor Digana","Merge remote-tracking branch into junit.features"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","dda4d08fc64933a8e4af33b745bd8219682b7bcb","Thu, 6 Dec 2012 18:29:51 +0100","Henning Gross","Fixes imports"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","27f927c42f251399899b39de89936f02529dc50e","Wed, 5 Dec 2012 21:47:38 +0100","Henning Gross","Enables Inheritance on Category.java by adding @Inherited"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","10389ddac6c816647c96001fcb7d02f8d5bf5671","Fri, 7 Jan 2011 10:48:21 +0200","Aviv Ben-Yosef","removing redundant asserts"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","4de916220b9e70d08eccf7e7e292fe9e54157e92","Tue, 2 Feb 2010 23:35:20 -0500","David Saff","Started on a new API for categories (and filters in general)"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","86abf33f863fee1db3ba7dd8ee3e9910f105f57d","Thu, 21 Jan 2010 16:30:36 -0500","David Saff","test for multi-level category application"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","7d8f2b7f6e190e8e59efacc10bc617b6646d131b","Mon, 7 Dec 2009 23:00:43 -0500","David Saff","Annotations on classes are merged with method annotations for categories"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","cec8e3ed1246c289ae156c4418d2e224bd793f4b","Mon, 23 Nov 2009 23:06:40 -0500","David Saff","Any class can be a category.  Added Category exclusion."
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","46036e7146f9dd0ca44baaec490692b967edd0ce","Mon, 19 Oct 2009 23:11:19 -0400","David Saff","javadoc'ed, and with better names"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","ce810b763e5021629248702993f226e3bf969db8","Mon, 19 Oct 2009 22:51:12 -0400","David Saff","Multiple categories on tests, category inheritance, production classes in production package."
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","334bf585b5de1534d7c0ec519fa0df250d00f022","Mon, 12 Oct 2009 23:59:14 -0400","David Saff","This looks like a usable Category API"
"./src/test/java/org/junit/tests/experimental/categories/CategoryTest.java","a268686d96bfbb328e02b363c3f0f72da54f9fc6","Thu, 20 Aug 2009 10:30:12 -0400","David Saff","checkpoint"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/experimental/results/PrintableResultTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java","39d8b9e93ff544880f39a3497fb428c6cba5288b","Fri, 18 Jan 2013 00:14:40 +0000","pimterry","Improved PotentialAssignment description with better formatting, and handling for failed toString() calls. Refactored tests into proper unit tests closer wrapping the relevant bit of this code too."
"./src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java","a13afe130ee61e4e1b1a7de52c7323bd699fd2e6","Sun, 13 Jan 2013 19:52:23 +0000","pimterry","Fixed two missed unit tests that were explicitly checking the previous error messages"
"./src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java","1df71004338faf30b9287b03b726e1ce4f1246be","Sat, 21 Apr 2012 21:56:51 +0200","Marc Philipp","Fix #88"
"./src/test/java/org/junit/tests/experimental/theories/PotentialAssignmentTest.java","7a12b7070aaa88712ed449c0a746741fd7e0237a","Fri, 18 Jan 2013 00:21:29 +0000","pimterry","Formatting"
"./src/test/java/org/junit/tests/experimental/theories/PotentialAssignmentTest.java","39d8b9e93ff544880f39a3497fb428c6cba5288b","Fri, 18 Jan 2013 00:14:40 +0000","pimterry","Improved PotentialAssignment description with better formatting, and handling for failed toString() calls. Refactored tests into proper unit tests closer wrapping the relevant bit of this code too."
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","e9d4de8e15255b03b60e935390e517d4de90a73b","Wed, 13 Mar 2013 23:13:10 +0000","pimterry","Single-datapoint methods are now only called if the return types could be relevant, and theory parameter signatures are compared with types via a prebuilt map rather than reflection."
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","cc8497f28e1d5a46d7940a0b36556154c83d6f7a","Mon, 11 Mar 2013 01:17:00 +0000","pimterry","Parameters are now matched on value, not defined type, for array and single-valued methods and fields."
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","c2bdb1a2d89a61edc6c5cf7dd2a07b3f2119eea2","Mon, 9 Apr 2012 21:08:20 +0200","Marc Philipp","Fix javac build"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","f4df6d58cee244fa668195fc1cb3d187a4681282","Fri, 30 Mar 2012 20:14:01 +0200","Marc Philipp","Simplify matcher expression in ParameterSignatureTest"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java","2ade5fd3aad123d6507b59ed5d48c8f030314f00","Sun, 10 Mar 2013 20:37:48 +0000","pimterry","Changed AllMembersSupplier to call single-valued methods at parameter assignment time, not parameter use time."
"./src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java","178f854e4c7e31ece6d71f5aa4433f0432349f4f","Wed, 9 Jan 2013 16:35:07 -0600","William Herbert Lichtenberger","Make stylistic changes"
"./src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java","fbcebcae05bc4aee3f8dcf24ebfcf69e6b245a0f","Tue, 8 Jan 2013 15:44:25 -0600","William Herbert Lichtenberger","Fix for #499 Assumes in tests run by Theories"
"./src/test/java/org/junit/tests/experimental/theories/TheoryTestUtils.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/TheoryTestUtils.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","3ef1b3ac5d45cd0023afc18739aadf4f15b9d80c","Thu, 26 Jun 2008 13:55:23 +0000","kbeck","Turned off javadoc and deprecated warnings and deleted java.hprof.txt."
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","6b182284c1a0452cf175852f2c808b08167c2f72","Thu, 29 May 2008 13:30:13 +0000","dsaff","If there are no data points that pass the assumption, the test fails."
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","b5a8d4e8e57d494ddebf3d3792ff883cee7d83f6","Mon, 12 May 2008 15:48:18 +0000","dsaff","Fixed test"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","44fabd25eb7d8c5291094b033007c32b7a1b8da2","Fri, 7 Dec 2007 19:06:00 +0000","dsaff","Reorganize ParentRunner and children"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","77ecd2119d3124b72935038effffadf7b98eccd9","Fri, 7 Dec 2007 16:36:33 +0000","dsaff","Properly handles ignore notifications from inside a started/ended block"
"./src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","4f1dbfc8619f5827a919106d14d42777b838638a","Tue, 3 Apr 2012 21:24:05 +0200","Marc Philipp","Remove everyItem matcher now provided by Hamcrest"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","9a789a40295a91844e4e16afee93d5ff7218951a","Tue, 29 Jul 2008 17:11:20 +0000","dsaff","Publishing TestClass and doc'ing ParentRunner"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","18299dc8f8aaae0e64345795b2884eb7f42ad460","Fri, 28 Dec 2007 19:47:37 +0000","dsaff","Assignments depends on TestClass, rather than directly on java.lang.Class"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithExtendedParameterSources.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithExtendedParameterSources.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithExtendedParameterSources.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","fa80b68e34e82129367f6075ddfef4392cdc4d86","Thu, 12 Apr 2012 22:03:48 +0200","Marc Philipp","Replace JUnitMatchers with CoreMatchers"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","b0b1c80075abf53597839e6bb430804b17d5c24a","Mon, 20 Jul 2009 22:09:23 -0400","David Saff","experimental.results is javadoced"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","50b9c949876189d8c4871471ec346988e4ccae06","Thu, 31 Jul 2008 14:28:18 +0000","dsaff","Better validation in Theories"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithOnlyTestAnnotations.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java","1e4a3ba03cca7cfc03b2565952f74d2ae964facc","Sat, 8 Dec 2007 19:36:58 +0000","dsaff","A method marked @Theory and @Test should only be executed once"
"./src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithAutoGeneratedDataPoints.java","93d773835c0c6f70bc89bbf5e4d273c289423a64","Thu, 21 Mar 2013 22:55:04 +0000","pimterry","Merge branch 'master' into datapoints-exceptions-#449"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithAutoGeneratedDataPoints.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/test/java/org/junit/tests/experimental/theories/runner/FailingDataPointMethods.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithUnresolvedGenericTypeVariablesOnTheoryParms.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithUnresolvedGenericTypeVariablesOnTheoryParms.java","9c4e365ea50ea6f983e4b4770de66553a806c806","Tue, 5 Jul 2011 20:03:40 -0500","Paul Holser","Attempt 2: Setting up for resolving issue 64, Theories honoring generic type parameters. This commit comprises only those changes required in the core of JUnit -- basically adding a validator that the Theories runner can call to reject theories with generic type variables (that are hard to resolve), and deprecating FrameworkMethod#producesType, which only the Theories runner uses, and which will be supplanted by an equivalent method on ParameterSignature. Other required changes will be added to the Theories experiment once it migrates over to junit.contrib."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithNamedDataPoints.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithNamedDataPoints.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java","1963b424c176742b711fb4226ce8f314d431813c","Tue, 29 Jan 2013 01:11:47 +0000","pimterry","Refactored FromDataPoints functionality to use SpecificDataPointsSupplier as a normal ParameterSupplier, by allowing ParameterSuppliers to take TestClasses in their constructors."
"./src/test/java/org/junit/tests/experimental/theories/runner/TypeMatchingBetweenMultiDataPointsMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/TypeMatchingBetweenMultiDataPointsMethod.java","61326c93276d31e249e57815edf93b695df5669d","Mon, 20 Aug 2012 21:11:43 +0200","Arjan Wulder","Changed variable name and removed the space before the equal sign"
"./src/test/java/org/junit/tests/experimental/theories/runner/TypeMatchingBetweenMultiDataPointsMethod.java","48aabe1b16bd288f74ac4ff92e3a38792533be39","Fri, 17 Aug 2012 23:57:54 +0200","Arjan Wulder","Fix for issue #55"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","2c6c142aa801cef3520ca668e75a670a32b4859a","Mon, 28 Jan 2013 23:06:29 +0000","pimterry","Added error validation to check that datapoints array fields are all static and public too, fixing #125"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","39d8b9e93ff544880f39a3497fb428c6cba5288b","Fri, 18 Jan 2013 00:14:40 +0000","pimterry","Improved PotentialAssignment description with better formatting, and handling for failed toString() calls. Refactored tests into proper unit tests closer wrapping the relevant bit of this code too."
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","a13afe130ee61e4e1b1a7de52c7323bd699fd2e6","Sun, 13 Jan 2013 19:52:23 +0000","pimterry","Fixed two missed unit tests that were explicitly checking the previous error messages"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","ab9caa3650a262ef4399cfd7f0d7fdc366d6e327","Thu, 2 Aug 2012 23:36:12 +0200","Marc Philipp","Fix javac build"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","185a219148564ff905fc8d5d721115313d431c9f","Thu, 2 Aug 2012 13:11:27 -0700","David Saff","Merge pull request #404 from marcphilipp/hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","0deeda931d45a23413e1c84a1966469deadfdb83","Sun, 3 Jun 2012 11:38:01 +0100","davidhart82","DataPoints need to be Public"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","c2bdb1a2d89a61edc6c5cf7dd2a07b3f2119eea2","Mon, 9 Apr 2012 21:08:20 +0200","Marc Philipp","Fix javac build"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","66cf6859fa74021320c9b0d5e0a6ffc5c86b770f","Mon, 4 Jan 2010 22:43:46 -0500","David Saff","Description.getChildren removed from all tests"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","7dd6711cb9e552cee8091893d4085fdc3f9996b0","Fri, 29 May 2009 09:57:31 -0400","David Saff","Undeprectated JUnitMatchers.either and .both, with different typing, and created JUnitMatchers.matches"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","50b9c949876189d8c4871471ec346988e4ccae06","Thu, 31 Jul 2008 14:28:18 +0000","dsaff","Better validation in Theories"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","9a789a40295a91844e4e16afee93d5ff7218951a","Tue, 29 Jul 2008 17:11:20 +0000","dsaff","Publishing TestClass and doc'ing ParentRunner"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java","47114275293f28be0f1cb9606a43ef1fe3173cb3","Fri, 25 Jan 2008 16:51:18 +0000","dsaff","Added assumption to TheoriesPerformanceTest, to prevent continuous integration from breaking on other boxes."
"./src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java","5042f695491027730cca2918616399d869de3973","Fri, 25 Jan 2008 14:11:31 +0000","dsaff","By passing TestClass to AllMembersSupplier, we can reuse the annotation parsing already supplied, and improve performance"
"./src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java","cde32fb62ad8f5a05d700ce3189e131fa51739cb","Mon, 21 Jan 2008 20:35:00 +0000","dsaff","Theories are a lot faster, by caching the @Before and @After methods and sharing them between all Theory method invocations."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StringableObject.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StringableObject.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Stub.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Correspondent.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Correspondent.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/MethodCall.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/MethodCall.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","d0c70cac5b28861803d97d59ab93dfcb10d2c4d3","Thu, 3 Dec 2009 15:21:05 -0500","David Saff","Make release notes compilable, add announce list to building task list, fix generics issues."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","58d1b6209b82451ff54f443bd265eef96135bca0","Fri, 28 Dec 2007 19:48:32 +0000","dsaff","Remove unnecessary @SuppressWarnings"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","07447b5f98989e4456be8ee8acd01cfb3d20b8c0","Sun, 6 Apr 2014 21:17:18 +0400","Brazhnikov","Small fixes, mainly in throws signatures"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","45524a9ddcd387fde3a20740e9c9c90ed71fec3a","Tue, 12 Feb 2013 00:48:33 +0000","pimterry","Changed exception signature for assignments reflective methods to support older Java versions"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","1963b424c176742b711fb4226ce8f314d431813c","Tue, 29 Jan 2013 01:11:47 +0000","pimterry","Refactored FromDataPoints functionality to use SpecificDataPointsSupplier as a normal ParameterSupplier, by allowing ParameterSuppliers to take TestClasses in their constructors."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","1d86784cd452e8d9e30d812255cadb75ef8dae15","Mon, 5 Apr 2010 14:27:28 -0400","dsaff","Fix compilation errors"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","d0c70cac5b28861803d97d59ab93dfcb10d2c4d3","Thu, 3 Dec 2009 15:21:05 -0500","David Saff","Make release notes compilable, add announce list to building task list, fix generics issues."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/ReguessableValue.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/ReguessableValue.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/ReguessableValue.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheoriesTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheoriesTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","b421d0ebd66701187c10c2b0c7f519dc435531ae","Sun, 31 Mar 2013 23:52:41 +0100","Tim Perry","Added support for iterable datapoints"
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","93d773835c0c6f70bc89bbf5e4d273c289423a64","Thu, 21 Mar 2013 22:55:04 +0000","pimterry","Merge branch 'master' into datapoints-exceptions-#449"
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","ccf0c0af551df541e40edb07d19a57072a8b14b1","Sat, 16 Mar 2013 22:35:49 +0000","pimterry","Changed single-valued datapoints back to deferred execution"
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","e9d4de8e15255b03b60e935390e517d4de90a73b","Wed, 13 Mar 2013 23:13:10 +0000","pimterry","Single-datapoint methods are now only called if the return types could be relevant, and theory parameter signatures are compared with types via a prebuilt map rather than reflection."
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","cc8497f28e1d5a46d7940a0b36556154c83d6f7a","Mon, 11 Mar 2013 01:17:00 +0000","pimterry","Parameters are now matched on value, not defined type, for array and single-valued methods and fields."
"./src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/experimental/theories/internal/ParameterizedAssertionErrorTest.java","74fa3d0957e59a3f1122ed8eb69b9e65ef924252","Thu, 20 Feb 2014 18:59:02 +0700","Vladislav Bauer","Fix possible NPE in method equals (ParameterizedAssertionError)"
"./src/test/java/org/junit/tests/experimental/theories/internal/ParameterizedAssertionErrorTest.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","80b7fbad6e37f2b229a919f595a5263dd21da8fb","Wed, 12 Dec 2012 14:09:35 -0600","Paul Holser","Ensure no-generic-type-parms validator gets executed/tested."
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/test/java/org/junit/tests/experimental/ExperimentalTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","f71a2d4c61beedd2bc027d525c633dd9f4413ba2","Sun, 23 Sep 2012 11:57:24 +0200","Tibor Digana","synchronizer attempts to trigger different threads within timeout"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","7602636601a8e024f27157cdbabee6de7e269d80","Fri, 21 Sep 2012 18:38:22 +0200","Tibor Digana","avoids reusing Executor's Thread instances"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","24cbcbc12fdd2afb7d52ff354e08213db8a62edd","Fri, 21 Sep 2012 13:18:58 +0200","Tibor Digana","cleanup thread references"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","c236a9e019a814b3542dcfe3a3a61b036c14d252","Thu, 20 Sep 2012 02:40:46 +0200","Tibor Digana","Improved Test: ParallelMethodTest fails few times"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","44b426792863f5fdc8cbedfc201a0a8ba0fe83dd","Sun, 23 Sep 2012 11:49:36 +0200","Tibor Digana","synchronizer attempts to trigger different threads within timeout"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","623bd92d37786cdc869b219569740f96869f5b9d","Fri, 21 Sep 2012 18:36:41 +0200","Tibor Digana","avoids reusing Executor's Thread instances"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","e48f6d40bf755dba2da4c29a4b7e763637b61738","Fri, 21 Sep 2012 13:11:03 +0200","Tibor Digana","cleanup thread references"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","865e00b45a166466b614a1dbcb8440e19453c58e","Thu, 20 Sep 2012 03:44:50 +0200","Tibor Digana","Improved Test: ParallelClassTest"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","65f717ed35a698239d4a75960b4f6de2f7cce225","Thu, 6 Sep 2012 13:36:16 -0400","Jesse Glick","Varargs makes test slightly shorter."
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","785c7859cd87dc5cb3872fef476ce2f86c9259dd","Thu, 6 Sep 2012 09:57:55 -0400","Jesse Glick","https://github.com/KentBeck/junit/pull/498 review comments."
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","8134371705a43fa2b2a8913678d4336d867f6647","Wed, 5 Sep 2012 20:36:30 -0400","Jesse Glick","Description.getTestClass() did not work reliably. Was assuming that the ClassLoader used for JUnit could also load test classes. While this may be true in a simple test runner based on a flat classpath, it is not true in all test runners. When we are given a Class object, keep it—do not try to reconstruct it from its name alone."
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","b564894980310e40f4c21006ff0c2346c4fc71f6","Mon, 13 Aug 2012 17:41:13 +0200","Petter Måhlén","shortened some lines that were too long"
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","14f9868962aee5bcba8a7595287be1d5fed54b7d","Mon, 4 Jun 2012 14:35:20 +0200","Petter Måhlén","cucumber-jvm issue #322, added a new Description factory method and temporarily changed from Serializable back to Object for the unique id; this needs a change to Gherkin"
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","7944e8f8afbeaff17d337304df52dac227034423","Mon, 28 Nov 2011 22:23:18 +0100","Stefan Birkner","Improved Description class."
"./src/test/java/org/junit/tests/experimental/max/DescriptionTest.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java","f3c211455b9e09be36e4bf7ccc499fbdd35a527a","Tue, 10 Mar 2009 10:44:22 -0400","David Saff","Finished release notes, I think"
"./src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java","9a2e993c544a2cd1a0b93c9f59340910f51366b4","Mon, 9 Mar 2009 23:10:54 -0400","David Saff","Got rid of unnecessary forget() method"
"./src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/test/java/org/junit/tests/experimental/max/JUnit38SortingTest.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","86abf33f863fee1db3ba7dd8ee3e9910f105f57d","Thu, 21 Jan 2010 16:30:36 -0500","David Saff","test for multi-level category application"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","02fc1f509a670de3632417bbf33168989bfcf872","Tue, 5 Jan 2010 11:51:45 -0500","David Saff","merged with master"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","c503e40d9ec79ba76b69dd31d7dd32648fa13cf2","Mon, 4 Jan 2010 22:40:54 -0500","David Saff","Deleted huge time-tripling test, MaxCore uses Plan for recursive descent"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","7cd277620b4c888ae4101bb3f4768af83b85313a","Fri, 18 Dec 2009 09:50:45 -0500","David Saff","Better documentation of Filter method, which allows a more succinct definition of ParentRunner"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","82dd2b3cf88647a5167e336fc97ea2b2b72432be","Mon, 4 May 2009 13:14:30 -0400","David Saff","Removed unnecessary @SuppressWarnings"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","c7874453182cde8e7b38cf3ce356d16d3d1dcde8","Wed, 29 Apr 2009 14:19:36 -0700","KentBeck","Fixed error message for malformed JUnit 3.8 test."
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","f3c211455b9e09be36e4bf7ccc499fbdd35a527a","Tue, 10 Mar 2009 10:44:22 -0400","David Saff","Finished release notes, I think"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","9a2e993c544a2cd1a0b93c9f59340910f51366b4","Mon, 9 Mar 2009 23:10:54 -0400","David Saff","Got rid of unnecessary forget() method"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","90bf3119a6326671cc467386036302cc6040f752","Sat, 20 Dec 2008 15:36:48 +0000","kbeck","Description seems to be heading towards Composite. Added "getTestName""
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","c12af8eb53b2464efff959b633f4c189caf2f1e7","Sat, 22 Nov 2008 00:36:54 +0000","kbeck","A diff got inserted somehow."
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","fa6483264ce2530585b374c276c2266d0d0c4ef0","Thu, 13 Nov 2008 19:32:26 +0000","kbeck","closing in on 3.8 multiple run defect"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","8d9ac8d65204fe8cd7e1d9146f123a461952bae9","Wed, 12 Nov 2008 22:17:56 +0000","kbeck","Zeroing in on the JUnitMax error where it runs JUnit 3.8 tests multiple times."
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","ce7bda3346278aab6ccebedcd5b8c8d4ab27ba02","Tue, 28 Oct 2008 19:17:15 +0000","kbeck","Persistence for MaxCore"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","451ca12156d5704809a1feff78a10a9451cd2023","Thu, 23 Oct 2008 19:38:08 +0000","kbeck","Cleaned up MaxCore and the tests"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","378e17964a4188bad9b3d966207a2f682072148e","Thu, 23 Oct 2008 18:59:35 +0000","kbeck","Better test sorting in MaxCore"
"./src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/test/java/org/junit/tests/experimental/rules/RuleChainTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/RuleChainTest.java","e8349c5c609fea8706ca926b19fe9c9d0b637a8b","Wed, 14 Sep 2011 22:04:51 +0200","Stefan Birkner","Fixes gh-193 (allow explicit ordering of Rules)."
"./src/test/java/org/junit/tests/experimental/rules/TestWatchmanTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TestWatchmanTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/org/junit/tests/experimental/rules/TestWatchmanTest.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/test/java/org/junit/tests/experimental/rules/ExternalResourceRuleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/ExternalResourceRuleTest.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/test/java/org/junit/tests/experimental/rules/ExternalResourceRuleTest.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java","103f204ada7363675fcd4a1e2e0a41030a15a9ae","Wed, 19 Dec 2012 00:33:32 +0100","Tibor Digana","Fix usage of actual/expected in #assertEquals"
"./src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java","ebc674b2536e5bda7083dfd7841cf5c3c846b274","Sun, 9 Dec 2012 01:41:46 +0100","Tibor Digana","runtime in Stopwatch rule for Performace tests"
"./src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java","9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3","Tue, 20 Nov 2012 20:25:16 +0100","Tibor Digana","standard JUnit class fields"
"./src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java","3c122b6a93499ee82d346c097141d2137b93c48c","Tue, 20 Nov 2012 18:09:04 +0100","Tibor Digana","using record objects"
"./src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java","cbcb29a2d80b04803566a3aaaffd9dceb53053bf","Mon, 19 Nov 2012 23:55:49 +0100","Tibor Digana","changes"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","be6123772ffa7bc580ea44c2db488852255c401f","Wed, 24 Oct 2012 23:10:24 +0200","Mark Michaelis","Readjust due to Issue KentBeck/junit#426 coding style."
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","6bc83a0d3a67e36adc2733a125bf928c49f702f9","Wed, 24 Oct 2012 22:45:46 +0200","Mark Michaelis","Merge Master to complete KentBeck/junit#521"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","a982920ee8036d001aa4a223a2521be28681ec27","Mon, 1 Oct 2012 08:50:14 +0200","Mark Michaelis","TestWatcher.skipped(): Make test fail"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","2162def2d4eefae0c5668586b837af4ecd4aed91","Sun, 24 Jun 2012 16:41:43 +0100","davidhart82","More tests; fix case if failed and finished throw exceptions"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","c07b3e7ea1b23d84590c2781b978f15e40c94703","Sun, 24 Jun 2012 16:01:53 +0100","davidhart82","Throw MulitpleFailureException"
"./src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","2568203bdebd5a4a4ad9aa74b1d8369d22f668a3","Mon, 13 Aug 2012 07:38:45 +0200","Arjan Wulder","Replaced IllegalArgumentException for IOException"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","59e5333b24d0e433de10d74c69e5de7700c6b744","Sun, 12 Aug 2012 20:22:55 +0200","Arjan Wulder","Fixed indenting on several lines"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","6b822aa3037d731669ace4a4bb6b859bf9986def","Sun, 12 Aug 2012 20:19:05 +0200","Arjan Wulder","Changes suggested by kcooney"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","6012fa3b4fe4e924311d42e05e216092e425cbf9","Sun, 12 Aug 2012 09:26:57 +0200","Arjan Wulder","Issue 478: Throw an IllegalStateException when the folder already exists"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","347c60e3dc0120029e2a3ad566b1ad2b0aac411f","Fri, 18 May 2012 11:50:52 +0100","Simon Stewart","Add the ability to define the root directory for the temporary folder"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","6f8a359dde5b1e317f0bab2da3ac2b5bce117884","Tue, 18 Oct 2011 20:34:02 +0200","Dmitry Vyazelenko","Cleanup TemporaryFolderUsageTest and add it to AllTests suite"
"./src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java","2d3090bf96357c0d9387a4e8f87525f776e52799","Tue, 18 Oct 2011 00:33:35 +0200","unknown","Fixes for issue #342"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","a0eea1357f0a0f4faea1245197f20ceee5ca3a5a","Tue, 3 Apr 2012 21:37:49 +0200","Marc Philipp","assertThat uses org.hamcrest.MatcherAssert"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","da545cc5f425dd1392ffaa7d2cb8be3b2ef8a179","Fri, 20 May 2011 10:40:09 +0200","Daniel Rothmaler","added ErrorCollector.checkThat overload, that takes a reason"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","e857122bff2a9774c4f44df4a7d531b902e406df","Fri, 7 Jan 2011 20:53:42 -0800","Kevin Cooney","Fix issue 30. Make TestWatcher abstract."
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","15815f55d2e9ae567ef8fe0a172f498b87a3a880","Mon, 20 Jul 2009 22:01:25 -0400","David Saff","Last errors gone from Hamcrest rollback"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/test/java/org/junit/tests/experimental/rules/VerifierRuleTest.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","f40f106b3721c9b3f9a7d535df1027588d64dcaf","Fri, 18 Oct 2013 01:13:22 +0200","Stefan Birkner","Allow expectation as parameter of custom message."
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","bb13b318cd79a68470e93c79635090c7bb565475","Wed, 4 Sep 2013 01:39:32 +0200","Stefan Birkner","Revert changes of 128553f. Fixes #687."
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","04218bee53cd0acf0b4ffe14d9052349900020db","Fri, 28 Dec 2012 18:40:26 +0100","Urs Metz","correct formatting"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","aace70a912417166d5646c284d0bde5b81f504fb","Sun, 23 Dec 2012 21:10:00 +0100","Urs Metz","assertion on complete error message"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","6384edfffe7f8a2850d2bcde9a16a8e780734ebe","Sun, 23 Dec 2012 15:12:09 +0100","Urs Metz","fail when AssertionError expected but not thrown"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","a2ca18438f84e16d5dc1e456dcd9ec6be0cd4b7a","Sun, 11 Nov 2012 21:24:34 -0500","Corey Vaillancourt","Changed exception message method name"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","3efad73fc5f34d7d860a8653e91d93c8539ac7bd","Fri, 9 Nov 2012 23:06:39 -0500","Corey Vaillancourt","Modified test method name to be consistent"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","8f0902e5503f4b2fd5a7317ae954a136aa8af94b","Fri, 9 Nov 2012 23:03:25 -0500","Corey Vaillancourt","Implementation for issue #144"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","5e9467c59b235ce84e7c7753c43609dea069e932","Fri, 20 Jul 2012 13:54:02 +0200","Marc Philipp","Both hasCause() and hasMessage() describe mismatches"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","1489b8e7d87f6948f8c5c95487bdd1d8377232c0","Thu, 19 Jul 2012 20:51:42 +0200","Marc Philipp","Fix javac compile error"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","17f7dfc72624253461022acff1d3aa6b9c4056cf","Thu, 24 May 2012 21:57:26 +0200","arjenw","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","c16abda4e0ae1704eff3ec8f893519770b97beba","Tue, 22 May 2012 09:27:39 +0200","Petter Måhlén","more indentation fixes"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","4845736a4bc4c076cd676137407c55d63da8da4d","Mon, 21 May 2012 13:31:54 +0200","Petter Måhlén","switched to using tabs instead of spaces for indentation"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","39d30b21b3a632f158274c6937c13499cd0758f3","Sun, 22 Apr 2012 14:07:57 +0200","Petter Måhlén","merged with master"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java","128553fc50758932f02fc6e13a3e25ef6a711152","Thu, 22 Sep 2011 00:58:18 +0200","Stefan Birkner","Fixes gh-121 (ExpectedException handles JUnit exceptions)"
"./src/test/java/org/junit/tests/experimental/rules/LoggingTestWatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/LoggingTestWatcher.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","a68b42cafad9f55f8296a2540f7aa93378ec1c40","Sun, 15 Jul 2012 14:11:17 +0200","Marc Philipp","Replace JUnitMatchers with CoreMatchers"
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java","a8a05d5b490aff69efc6be29fa28a7b14674ab48","Mon, 19 Oct 2009 17:38:42 +0800","Alistair A. Israel","Added ClassrulesTest to exercise class-level @Rules"
"./src/test/java/org/junit/tests/experimental/rules/BlockJUnit4ClassRunnerOverrideTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/BlockJUnit4ClassRunnerOverrideTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/BlockJUnit4ClassRunnerOverrideTest.java","8782efa08abf5d47afdc16740678661443706740","Fri, 24 Jun 2011 09:49:19 -0400","David Saff","Closes #248: protected BlockJUnit4ClassRunner#rules method removed from 4.8.2"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","8a6ada28b1b763d1eecb009716e8c75660271565","Wed, 19 Feb 2014 00:48:14 +0700","Vladislav Bauer","Remove unnecessary usage of StringBuilder class (Java compiler will do it)"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","f40f106b3721c9b3f9a7d535df1027588d64dcaf","Fri, 18 Oct 2013 01:13:22 +0200","Stefan Birkner","Allow expectation as parameter of custom message."
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","17f7dfc72624253461022acff1d3aa6b9c4056cf","Thu, 24 May 2012 21:57:26 +0200","arjenw","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","fa80b68e34e82129367f6075ddfef4392cdc4d86","Thu, 12 Apr 2012 22:03:48 +0200","Marc Philipp","Replace JUnitMatchers with CoreMatchers"
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","f3ae021fb078fc3b1576febbce1b02e249329516","Wed, 4 Apr 2012 00:53:53 +0200","Stefan Birkner","EventCollector always uses TypeSafeMatcher."
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","a538d25ae50887dc9395f2f59ad5040752c0ec4f","Tue, 6 Mar 2012 19:33:35 +0100","Stefan Birkner","Apply code review."
"./src/test/java/org/junit/tests/experimental/rules/EventCollector.java","128553fc50758932f02fc6e13a3e25ef6a711152","Thu, 22 Sep 2011 00:58:18 +0200","Stefan Birkner","Fixes gh-121 (ExpectedException handles JUnit exceptions)"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","56a03468f394f23a95f3a0cd2e80f2671963941d","Sat, 3 May 2014 09:17:38 +0200","ancosen","Fixes #880: Added new error message relative to static @Rule and @ClassRule"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","f4682ce2558cdca60d12fbef39e9ca0370eba592","Thu, 13 Feb 2014 11:15:27 +0100","reinholdfuereder","Merge branch 'master' into fix-warnings"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403","Thu, 14 Nov 2013 18:11:13 +0100","Stefan Ferstl","Verify that all (base-) classes declaring @ClassRules are public - Add the new method getDeclaringClass() to FrameworkMember   - FrameworkMethod will return the class where the method is actually     declared   - FrameworkField will return the class where the field is actually     declared - Add validation logic to RuleFieldValidator - Add test for validation logic"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","b4f0afa639b42fa551fdcb26d9c1855ae4d778cf","Sun, 16 Oct 2011 14:18:05 +0200","Marc Philipp","@Rule fields/methods must not be static"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","a19e98f00e972333edd2bbbde8270612aa588c42","Thu, 28 Jul 2011 09:54:37 +0200","Stefan Birkner","moved RuleFieldValidator from org.junit.rules to org.junit.internal.runners.rules"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","db8c72be9df8e7d605600cc5f370dffa35112362","Thu, 14 Jul 2011 21:40:16 +0200","Stefan Birkner","applied code review"
"./src/test/java/org/junit/tests/experimental/rules/RuleFieldValidatorTest.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","4baf1fdc292ea5d11fbd2e11998603e2bf0310f8","Sat, 6 Apr 2013 02:26:55 +0200","Tibor Digana","Too short timeout in TimeoutRuleTest."
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","f851c3ee43e1966903ff66ecda3fa7f66c2d2ecb","Tue, 11 Dec 2012 17:24:29 +0100","Tibor Digana","test: no inline comment, comment space"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","78f5fa85b492353ad062f54d1f0ceec745537761","Tue, 11 Dec 2012 17:16:25 +0100","Tibor Digana","no #deleteOnExit, no inline comment, added space in comment"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","1c50b6cab85baea467aae117c6bd30225b314774","Fri, 16 Nov 2012 22:42:43 +0100","Tibor Digana","TemporaryFolder instead of File.createTempFile()"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","794abc271d82fa48681657b41e35eabb420e5172","Fri, 16 Nov 2012 20:52:27 +0100","Tibor Digana","one tmp file per test, reasons for volatile and daemon thread"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","b28fe09d1a54955bed2e4db5352c14fae195a418","Thu, 15 Nov 2012 18:39:45 +0100","Tibor Digana","fixes for #544 and #545"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","337b6dc9bca623eab0820eab89245f42bbbb9570","Thu, 15 Nov 2012 01:03:54 +0100","Tibor Digana","cannonical style of infinite Java loop in Javadoc, new line avoided"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","11039f25897fe4daba274292a49a078afa87991b","Thu, 15 Nov 2012 00:08:53 +0100","Tibor Digana","deleted 2 examples and improved javadoc, improved javadoc in constructor, added factories, prepared for 4.12"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a","Tue, 13 Nov 2012 20:53:00 +0100","Tibor Digana","param=millis in old constructor, original units, added infinite loop test"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","544e5ba3a3034932879604b72fb6f8526d27eb50","Mon, 12 Nov 2012 23:33:29 +0100","Tibor Digana","forked from #450 and improved"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","4041354a3a7629b74970e0624b7564736c20e1e3","Tue, 9 Nov 2010 08:57:34 -0500","David Saff","Starting to get rid of deprecation warnings"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/org/junit/tests/experimental/rules/NameRulesTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/NameRulesTest.java","04189a834a01ae7ff3189bfa869e90d1a7f83acf","Mon, 8 Feb 2010 22:05:58 -0500","David Saff","added test of TestName in Before and After"
"./src/test/java/org/junit/tests/experimental/rules/NameRulesTest.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/test/java/org/junit/tests/experimental/rules/NameRulesTest.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","00d830f2172d81c024249d6b28fa297c5c17878e","Mon, 27 Aug 2012 02:01:46 +0200","Mark Michaelis","Adjust dependencies as retrieved from KentBeck / junit : master"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","6caeeb1e1579cae1cd9ede58f38186e07da7f295","Mon, 27 Aug 2012 01:50:22 +0200","Mark Michaelis","Merge remote branch 'remotes/upstream/master'"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","be8d4ee17541876e139d1b1319ac5101bf055c8c","Sat, 30 Jun 2012 12:33:24 +0200","Mark Michaelis","Remove wildcard imports."
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","08c3b3aa633385373b08285225e58c6ee0ab8092","Mon, 25 Jun 2012 19:54:41 +0200","Mark Michaelis","Continues Issue 296: TestWatchman.failed should not be invoked for AssumptionViolatedExceptions see https://github.com/KentBeck/junit/issues/296"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","81b50e9f3bdb66543d07e7349026bd3b447f433e","Tue, 16 Nov 2010 10:18:17 -0500","David Saff","TODO cleanup for 4.9 lead-up"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","308768863b78f3a6345e25d7f9d35892c2de5a01","Tue, 9 Nov 2010 09:45:14 -0500","David Saff","Renamed TestRuleTestWatchman to TestWatcher, updated docs"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java","4041354a3a7629b74970e0624b7564736c20e1e3","Tue, 9 Nov 2010 08:57:34 -0500","David Saff","Starting to get rid of deprecation warnings"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","2568203bdebd5a4a4ad9aa74b1d8369d22f668a3","Mon, 13 Aug 2012 07:38:45 +0200","Arjan Wulder","Replaced IllegalArgumentException for IOException"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","67e43ab827da24baa6477e33e4e883a36dfcf645","Tue, 19 Jun 2012 13:58:32 +0200","Matthew Farwell","Fixes #441 fix for issue 283 (recursive temp folders) caused incompatibility Put back in the method folder.newFolder(String) that was removed in #283. Tests that the method is there using reflection."
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","5baa714c5fe4d16dca9dea8c73c6d8702dfd71f2","Tue, 10 Apr 2012 21:39:35 +0200","Arjen Stolk","TemporaryFolder.newFile should fail if file already exists (fixes #413)"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","e55796904be214741701070b723acd895b25e995","Tue, 13 Sep 2011 16:43:23 -0400","David Saff","Merge 4.9.1 into master"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","ce867738993339a28fd7b3a25ff1e74dbc0013aa","Tue, 24 May 2011 08:27:19 +0200","Daniel Rothmaler","Implemented random temp file/folder creation"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","b00a3cdcaaf0bb554ed0955f98d9f1d759710c27","Mon, 27 Jun 2011 22:00:39 -0300","Rodolfo Liviero","temporary tree folders"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","70fe94d031c7066899fc464cd4171db0884f1356","Sun, 7 Aug 2011 01:38:12 +0300","Esko Luontola","Fixes #278: TemporaryFolder creates files in the current working directory if applying the rule fails"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","d2da6a55bca4582c9a469f568df472a00e90ddf4","Wed, 15 Jul 2009 22:25:24 -0400","David Saff","merged"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/test/java/junit/samples/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/SimpleTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/SimpleTest.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/test/java/junit/samples/SimpleTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/money/MoneyBag.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/test/java/junit/samples/money/MoneyBag.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/money/MoneyBag.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/money/Money.java","8a6ada28b1b763d1eecb009716e8c75660271565","Wed, 19 Feb 2014 00:48:14 +0700","Vladislav Bauer","Remove unnecessary usage of StringBuilder class (Java compiler will do it)"
"./src/test/java/junit/samples/money/Money.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/test/java/junit/samples/money/Money.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/money/Money.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/money/IMoney.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/money/IMoney.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/money/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/money/MoneyTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/money/MoneyTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/ListTest.java","0abc020742dd0be0e6f5729b17cad2a0df73d671","Thu, 9 Jan 2014 23:04:06 +0900","Brian Takashi Hooper","ListTest for List, not Vector"
"./src/test/java/junit/samples/ListTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/samples/ListTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/samples/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/WasRun.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/WasRun.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/AssertionFailedErrorTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/AssertionFailedErrorTest.java","1b809a4a2e914da039841ff3d1c457e8e5122ac3","Sun, 18 Sep 2011 22:59:27 +0200","Stefan Birkner","Fixed gh-318 (Empty message instead of null)"
"./src/test/java/junit/tests/framework/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/AllTests.java","1b809a4a2e914da039841ff3d1c457e8e5122ac3","Sun, 18 Sep 2011 22:59:27 +0200","Stefan Birkner","Fixed gh-318 (Empty message instead of null)"
"./src/test/java/junit/tests/framework/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/NoTestCases.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/NoTestCases.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/OverrideTestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/OverrideTestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/InheritedTestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/InheritedTestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/OneTestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/OneTestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/TestCaseTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/TestCaseTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/FloatAssertTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/FloatAssertTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/TestImplementorTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/TestImplementorTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/Success.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/Success.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/Failure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/Failure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/DoublePrecisionAssertTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/DoublePrecisionAssertTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/NoTestCaseClass.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/NoTestCaseClass.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/ThreeTestCases.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/ThreeTestCases.java","70adacdc1a7f963c081a9752ba62200f8b798d56","Mon, 5 Apr 2010 21:43:42 -0400","dsaff","Improve handling of TestSuites"
"./src/test/java/junit/tests/framework/ComparisonFailureTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/ComparisonFailureTest.java","766343797294634c86186664c519d65d7d984c96","Fri, 7 Jan 2011 20:36:11 -0800","Kevin Cooney","Fix AssertionError.toString() when no messages are passed."
"./src/test/java/junit/tests/framework/ComparisonFailureTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/SuiteTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/SuiteTest.java","a30e87b6ac67f14a42b97d427bb1c8c6ba18cd87","Thu, 8 Apr 2010 13:04:17 -0400","dsaff","Clean-up after review in github's compare view.  Thanks, github."
"./src/test/java/junit/tests/framework/SuiteTest.java","70adacdc1a7f963c081a9752ba62200f8b798d56","Mon, 5 Apr 2010 21:43:42 -0400","dsaff","Improve handling of TestSuites"
"./src/test/java/junit/tests/framework/SuiteTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/NotVoidTestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/NotVoidTestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/ComparisonCompactorTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/ComparisonCompactorTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/NotPublicTestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/NotPublicTestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/AssertTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/AssertTest.java","669bb577583f2edd8cd65008a7c9ac19ebc350ea","Fri, 15 Apr 2011 13:35:45 -0400","David Saff","Fixes issue #39, by having multiple calls to ParentRunner.filter result in the intersection of filters, rather than just the last one used."
"./src/test/java/junit/tests/framework/AssertTest.java","766343797294634c86186664c519d65d7d984c96","Fri, 7 Jan 2011 20:36:11 -0800","Kevin Cooney","Fix AssertionError.toString() when no messages are passed."
"./src/test/java/junit/tests/framework/AssertTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/TestListenerTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/junit/tests/framework/TestListenerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/TestListenerTest.java","901550a36244503ef2769724899cba213f11945f","Thu, 15 Sep 2011 19:38:33 +0200","Stefan Birkner","Fixes gh-225 (initialize error count)"
"./src/test/java/junit/tests/framework/TestListenerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/framework/NoArgTestCaseTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/framework/NoArgTestCaseTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/TextRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/TextRunnerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/AllTests.java","085308f8fb6bd499f5108f7cbd783b1997aceb7c","Wed, 6 Jul 2011 20:11:25 +1000","Rob Dawson","Added ResultTest."
"./src/test/java/junit/tests/runner/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/ResultTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/ResultTest.java","085308f8fb6bd499f5108f7cbd783b1997aceb7c","Wed, 6 Jul 2011 20:11:25 +1000","Rob Dawson","Added ResultTest."
"./src/test/java/junit/tests/runner/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/StackFilterTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/StackFilterTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/BaseTestRunnerTest.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/test/java/junit/tests/runner/BaseTestRunnerTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/BaseTestRunnerTest.java","17087303ee4f7f5c801e0d652a7e51a9f5d68297","Mon, 20 Apr 2009 13:57:25 -0400","David Saff","Fixed bug 1812200"
"./src/test/java/junit/tests/runner/BaseTestRunnerTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/TextFeedbackTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/TextFeedbackTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/runner/TextRunnerSingleMethodTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/runner/TextRunnerSingleMethodTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/extensions/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/extensions/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/extensions/ExtensionTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/extensions/ExtensionTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/extensions/RepeatedTestTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/extensions/RepeatedTestTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/extensions/ActiveTestTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/test/java/junit/tests/extensions/ActiveTestTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/test/java/junit/tests/extensions/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/Before.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/Before.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Before.java","ec9bccf9521a6ccdd074f2618626507528a43bc9","Wed, 19 Sep 2012 11:44:09 -0700","Arup Malakar","Removed the unnecessary Note: block in javadoc"
"./src/main/java/org/junit/Before.java","de15ca2183f9955be7644c59d19aa3e4931a02d8","Mon, 17 Sep 2012 13:39:07 -0700","Arup Malakar","[Issue #394] [review incorporated] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/Before.java","6adb3ad892ed858849f4a80cd051441e8024226e","Fri, 14 Sep 2012 13:39:32 -0700","Arup Malakar","[Issue #394] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/Before.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Before.java","829ca4d37671b20df3f2451915aa91c804b7de97","Mon, 18 Aug 2008 14:52:14 +0000","dsaff","Indicated that Before guarantees no particular order."
"./src/main/java/org/junit/Before.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/FixMethodOrder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/FixMethodOrder.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/FixMethodOrder.java","7924760d2d64f5f7651e9e57d1ca01e1bcce74e0","Fri, 6 Apr 2012 23:20:45 +0200","Matthew Farwell","Following feedback from dsaff"
"./src/main/java/org/junit/After.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/After.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/After.java","de15ca2183f9955be7644c59d19aa3e4931a02d8","Mon, 17 Sep 2012 13:39:07 -0700","Arup Malakar","[Issue #394] [review incorporated] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/After.java","6adb3ad892ed858849f4a80cd051441e8024226e","Fri, 14 Sep 2012 13:39:32 -0700","Arup Malakar","[Issue #394] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/After.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/After.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runners/JUnit4.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/JUnit4.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/JUnit4.java","71ce2b015df78f167e4681b097cadc2e0e6655e2","Wed, 6 Aug 2008 13:29:14 +0000","dsaff","JUnit4 runner as a pointer to the current default"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","5cdd702717c5ca7dd3002e95847232681c445127","Wed, 23 Oct 2013 23:16:10 +0200","flpa","Moved isIgnored-check from FrameworkMethod to BlockJUnit4ClassRunner - the method overrides an empty default implementation in ParentRunner."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","4f7ed2bdf1856b0582e9b982aa0ba594498c6b45","Sun, 20 Oct 2013 16:47:02 +0200","flpa","simplified isIgnored check in Framework, using it in BlockJUnit4ClassRuner"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","238eaa7617d3e53a47ef00cd91fc43c1ed918113","Mon, 3 Jun 2013 13:53:21 -0300","David Saff","Clarify deprecations in BlockJUnit4ClassRunner"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","2918286bf4a010c9ac8eadffb958ff10fb41ad62","Mon, 18 Feb 2013 19:14:51 -0500","Corey Vaillancourt","Issue #162 Adjustments"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","08719e9b61d07c17b6a4f599ecd2cd1a1519120a","Sun, 17 Feb 2013 13:21:33 -0500","Corey Vaillancourt","Issue #162 Implementation"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","fab285224794435cbb4539ba234d771855b8012d","Thu, 15 Nov 2012 19:33:02 -0500","Corey Vaillancourt","Remove @Deprecated for issue #157"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","c87b2e11d9e239cc7fae658b196b9a744b208ac3","Thu, 15 Nov 2012 19:28:46 -0500","Corey Vaillancourt","Revert "Remove @Deprecated for issue #157""
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","82c6d4b5f0e6c788d5326d57ea5bb5fec6cef29d","Thu, 15 Nov 2012 19:16:32 -0500","Corey Vaillancourt","Remove @Deprecated for issue #157"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","bb91daf8e0939d787ffb5a3eda05c2d626cd9851","Wed, 24 Oct 2012 12:31:00 -0700","Kevin Cooney","Fix formatting"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","dc44abf520611a8722e75ba1d32df6a28183e4e3","Wed, 24 Oct 2012 11:58:14 -0700","Kevin Cooney","Merge branch 'master' into undeprecate"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","bbacbd93334540a5054bb50488f662c3f81a9c00","Sat, 29 Sep 2012 12:12:35 -0700","Kevin Cooney","Remove @Deprecated from MethodRule and related methods."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","cbf46b88c2937aece7018fa50ba4dbb133e03d06","Fri, 17 Aug 2012 14:56:22 +0200","Jeremy Herault","Pull request #182 && #483: Adding Parameter annotation for field parameters"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","1014436692b0829a7287fbab81ef8720309d7945","Sun, 18 Sep 2011 23:20:46 +0200","Stefan Birkner","Fixes gh-42 (error message for non-static inner class)"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8a249206c730845fcb4a1efdee055f8509380808","Tue, 9 Aug 2011 23:00:11 +0200","Stefan Birkner","Fixed JavaDoc links."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","a19e98f00e972333edd2bbbde8270612aa588c42","Thu, 28 Jul 2011 09:54:37 +0200","Stefan Birkner","moved RuleFieldValidator from org.junit.rules to org.junit.internal.runners.rules"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8782efa08abf5d47afdc16740678661443706740","Fri, 24 Jun 2011 09:49:19 -0400","David Saff","Closes #248: protected BlockJUnit4ClassRunner#rules method removed from 4.8.2"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","35ebd1ae4c78be3266aada07495dc1225d67d2c1","Wed, 9 Mar 2011 09:05:31 -0500","David Saff","Merge branch 'master' of https://github.com/marciomazza/junit into marciomazza-master"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","de86eb205637ea755909554b93d6da89353414dd","Thu, 3 Feb 2011 12:24:12 -0200","marciomazza","fixed documentation for BlockJUnit4ClassRunner.methodBlock: the steps of befores/afters can be influenced by rules as much as the other ones"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","4610330ca7fca16df7da1b7d09ea065d071cf9b8","Tue, 18 Jan 2011 15:26:31 -0500","David Saff","Merge branch 'multiple-failure-exception' of https://github.com/kcooney/junit into kcooney-multiple-failure-exception"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","a49240ade1974b948b20cf2c45d9129f04122735","Tue, 11 Jan 2011 21:06:08 -0800","Kevin Cooney","Merge branch 'master' into multiple-failure-exception"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","d494698a44291098aff33bd77b1ea501fe38be82","Tue, 11 Jan 2011 20:34:56 -0800","Kevin Cooney","Fix Javadoc; remove compiler warning"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","d6ccf5b0fa4e0d62eac42425a593b870af1247bd","Tue, 11 Jan 2011 20:28:05 -0800","Kevin Cooney","Merge branch 'master' into abstract-test-rule"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","9d8bb069f68e2194db742981972c8930381b62c2","Tue, 11 Jan 2011 15:56:46 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","0128bff582b2d10bffff9ff497c3e6f697958b83","Fri, 7 Jan 2011 19:24:41 -0800","Kevin Cooney","Replace TestRule.applyAll() with RunRules."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","7f6173aa593b07856c1ca73ffaf87ff10ea15d4c","Fri, 7 Jan 2011 17:44:42 -0800","Kevin Cooney","Revert "Make TestRule an abstract class. Specify target of the rule annotations.""
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","e7a0111ce26bbce9c81f471ff925653fe0ead70d","Fri, 7 Jan 2011 13:35:20 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","5f25ca318bc2b35ecf8526c08a1e3b3e17d375da","Fri, 7 Jan 2011 13:03:18 -0500","David Saff","Fix bad javadoc and bad release notes"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","bed58a573c373d57d64fa369f58b2a8f0dbee3d7","Wed, 5 Jan 2011 12:53:46 -0800","Kevin Cooney","Add runLeaf() to ParentRunner. This makes it easier to write a custom runner that supports MultipleFailureException and AssumptionViolatedException without depending on internal classes."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","81b50e9f3bdb66543d07e7349026bd3b447f433e","Tue, 16 Nov 2010 10:18:17 -0500","David Saff","TODO cleanup for 4.9 lead-up"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","ab2395c8c07077bed6aa5b673bf05197627bad3f","Thu, 6 May 2010 16:32:07 +0800","Alistair A. Israel","Lost the import again"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","56743a446c8fe01319c6588c1709bcf1a090ccde","Thu, 6 May 2010 16:28:40 +0800","Alistair A. Israel","Merging from AlistairIsrael-classrules on github to ppreserve history because of non-fast forward merge (whatever that means)"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","28ef5cb783d9e4b8239f7984696a9c5080c126a7","Thu, 6 May 2010 16:21:41 +0800","Alistair A. Israel","Added missing imports after merge"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","3840331fd1918e91b0a36a263d141a40c41566a9","Thu, 6 May 2010 16:18:46 +0800","Alistair A. Israel","Revert "Fixed compilation errors from merge""
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","0b2483896d93e5a26cf433b52c463e9aff9ea022","Thu, 6 May 2010 16:18:18 +0800","Alistair A. Israel","Fixed compilation errors from merge"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","b5fb9c92dfb1380b8a8b0b53aea3e7f7627ee03c","Thu, 6 May 2010 16:09:38 +0800","Alistair A. Israel","Merge from master to branch AlistairIsrael-classrules"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","1d86784cd452e8d9e30d812255cadb75ef8dae15","Mon, 5 Apr 2010 14:27:28 -0400","dsaff","Fix compilation errors"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","1bbab715de4c64943948ecc3739c8d5569378672","Mon, 8 Feb 2010 23:10:47 -0500","David Saff","CategoriesMark2 reuse code properly from TestClass"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","86abf33f863fee1db3ba7dd8ee3e9910f105f57d","Thu, 21 Jan 2010 16:30:36 -0500","David Saff","test for multi-level category application"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","5b5a17d3c50bf5e96f4baff2aa061ba039511048","Mon, 19 Oct 2009 17:12:16 +0800","Alistair A. Israel","Use Field#getType()"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","4abb65c56382cdd4ff453ddceb70b5944e6e0b38","Mon, 19 Oct 2009 16:59:38 +0800","Alistair A. Israel","Proof-of-concept for class-level @Rule support"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","01716157f2683f5610d721929a687e7dc3aee558","Mon, 19 Oct 2009 17:12:16 +0800","Alistair A. Israel","Use Field#getType()"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","79ef5a7e1d7fa144cc81c9414f4791aaea8b3d75","Mon, 19 Oct 2009 16:59:38 +0800","Alistair A. Israel","Proof-of-concept for class-level @Rule support"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","a68ae0886c1c6274943e6f99d70816d162273d9c","Tue, 22 Sep 2009 19:32:01 -0700","KentBeck","Signed-off-by: KentBeck <kent@threeriversinstitute.org>"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","df85817595e97082eaf8d6c95e2c269b86afff20","Mon, 20 Jul 2009 22:34:15 -0400","David Saff","org.junit is javadoced except internal and experimental"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","a1813f62876a6c7227ec5c866b621e01cda79664","Tue, 7 Jul 2009 23:58:33 -0400","David Saff","Done with interceptor javadoc"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d","Mon, 6 Jul 2009 23:50:14 -0400","David Saff","Fixing Interceptor->Rule name changes"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8e313a1e58a56694c0441b2fa60974fa8e1bfe31","Mon, 6 Jul 2009 22:01:56 -0400","David Saff","StatementInterceptor takes Object target"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","e4c7fac80cac937faf413e3ddd58e0fd091bd367","Tue, 30 Jun 2009 22:55:03 -0400","David Saff","Better extension point for adding interceptors"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","26fa0a4207e21f058d220c84f8195ee25943400c","Wed, 27 May 2009 00:19:49 -0400","David Saff","ExpectedException Interceptor added"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","e6769d4009db8030661815965e2e22829a4619ff","Tue, 26 May 2009 22:55:58 -0400","David Saff","No Interceptors class, interceptors turned on by default"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","198df01b7b288e57e222a33c74f8ff98bf518d93","Mon, 11 May 2009 23:29:36 -0400","David Saff","don't wrap statements for before/after/etc unless there's something to wrap them with."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","c5ece65fe537092b9552f0efcca8a1e144ca4182","Fri, 1 Aug 2008 13:53:42 +0000","dsaff","Fixed a javadoc on BlockJUnit4ClassRunner"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","095d3f8df0708f98d41f5894a892388b6985c44f","Thu, 31 Jul 2008 14:20:56 +0000","dsaff","Validation of constructors that can take parameters, commenting about an exception that should never occur"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","dd9ee989f3f322c7c6793f95a73b28f3cc11c11e","Thu, 31 Jul 2008 13:59:08 +0000","dsaff","Better name for validateConstructor"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","b0b34427e9e644868f2b63d40d0556c35e818a63","Wed, 30 Jul 2008 20:39:27 +0000","dsaff","Make sure constructor has no args"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","979e8abbe974e8847668f5887403da78a6165ebc","Tue, 29 Jul 2008 17:12:00 +0000","dsaff","Only one ParentRunner constructor"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","7a3e99635d7ffcc4d730f27835eeaeb082003199","Wed, 23 Jul 2008 15:59:22 +0000","dsaff","Draft javadoc for review"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","8e3f361443ddf8bca21c3db661c75d374fe78dba","Wed, 16 Jul 2008 00:21:15 +0000","kbeck","Refactored to eliminate Notifier and its subclasses. You don't pull your weight around here and you're history."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","29f117914afa33c2538479c785f349daa787bf60","Thu, 10 Jul 2008 20:48:29 +0000","kbeck","Refinement of BlockJUnit4ClassRunner to make it easier to override."
"./src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/runners/AllTests.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/AllTests.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/AllTests.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/runners/AllTests.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runners/MethodSorters.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/MethodSorters.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/MethodSorters.java","8424e265a3f96bebb2ee4dbced7c3e3e128f91f5","Thu, 31 May 2012 09:09:24 -0400","Ian Beauregard","changes as suggested by kcooney"
"./src/main/java/org/junit/runners/MethodSorters.java","32330b13f2ded8603665264f8400ddf1f6dd969a","Wed, 30 May 2012 07:38:31 -0400","Ian Beauregard","make MethodSorter.NAME_ASCENDING a deterministic comparator, with Method.toString used as a tiebreaker"
"./src/main/java/org/junit/runners/MethodSorters.java","b508fe73c26345550b13bc8ee131090f7a27b534","Wed, 30 May 2012 06:50:09 -0400","Ian Beauregard","make the comments phrasing consistent in MethodSorters"
"./src/main/java/org/junit/runners/MethodSorters.java","c360ca09cd3305eaf6e3f3026a6ee96d7e1ba65d","Tue, 29 May 2012 01:54:37 -0400","Ian Beauregard","Changed incorrect comments in MethodSorter and MethodSorters."
"./src/main/java/org/junit/runners/MethodSorters.java","7924760d2d64f5f7651e9e57d1ca01e1bcce74e0","Fri, 6 Apr 2012 23:20:45 +0200","Matthew Farwell","Following feedback from dsaff"
"./src/main/java/org/junit/runners/MethodSorters.java","35916619de9d9c3e7ec3d793ab3072c9e78db258","Wed, 4 Apr 2012 23:34:08 +0200","Matthew Farwell","Changes after review by kcooney"
"./src/main/java/org/junit/runners/MethodSorters.java","c610a49727858597d9a10289bed0a0174053a69f","Sun, 19 Feb 2012 11:36:18 +0100","Matthew Farwell","SortMethodsWith allows the user to choose the order of execution of the methods within a test class."
"./src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java","dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7","Fri, 22 Nov 2013 09:40:06 +0100","Stefan Birkner","Extract BlockJUnit4ClassRunnerWithParameters."
"./src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParametersFactory.java","cb6abf6fc729f07c5d60b0756e91af444400b4b5","Mon, 25 Nov 2013 22:37:12 +0100","Stefan Birkner","Use a ParametersRunnerFactory for creating the test for a set of parameters."
"./src/main/java/org/junit/runners/parameterized/TestWithParameters.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/main/java/org/junit/runners/parameterized/ParametersRunnerFactory.java","cb6abf6fc729f07c5d60b0756e91af444400b4b5","Mon, 25 Nov 2013 22:37:12 +0100","Stefan Birkner","Use a ParametersRunnerFactory for creating the test for a set of parameters."
"./src/main/java/org/junit/runners/Suite.java","ede492496de0f3c0872216ac9c9b88a00fdef09e","Tue, 4 Jun 2013 02:19:13 +0200","Tibor Digana","changes with unmodifiable collections"
"./src/main/java/org/junit/runners/Suite.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/runners/Suite.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/Suite.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/Suite.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runners/Suite.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/runners/Suite.java","86abf33f863fee1db3ba7dd8ee3e9910f105f57d","Thu, 21 Jan 2010 16:30:36 -0500","David Saff","test for multi-level category application"
"./src/main/java/org/junit/runners/Suite.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/runners/Suite.java","334bf585b5de1534d7c0ec519fa0df250d00f022","Mon, 12 Oct 2009 23:59:14 -0400","David Saff","This looks like a usable Category API"
"./src/main/java/org/junit/runners/Suite.java","e5782ce23b9aa60665cc6f6fc721cd9641bcc346","Mon, 12 Oct 2009 22:06:09 -0400","David Saff","merged"
"./src/main/java/org/junit/runners/Suite.java","75614895426a8c121cdb7ddc193d7eba8eac6630","Fri, 28 Aug 2009 15:14:50 +0800","alanharder","Fix @SuiteClasses example in javadoc"
"./src/main/java/org/junit/runners/Suite.java","a268686d96bfbb328e02b363c3f0f72da54f9fc6","Thu, 20 Aug 2009 10:30:12 -0400","David Saff","checkpoint"
"./src/main/java/org/junit/runners/Suite.java","df85817595e97082eaf8d6c95e2c269b86afff20","Mon, 20 Jul 2009 22:34:15 -0400","David Saff","org.junit is javadoced except internal and experimental"
"./src/main/java/org/junit/runners/Suite.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/main/java/org/junit/runners/Suite.java","e4c7fac80cac937faf413e3ddd58e0fd091bd367","Tue, 30 Jun 2009 22:55:03 -0400","David Saff","Better extension point for adding interceptors"
"./src/main/java/org/junit/runners/Suite.java","b2ebdc0a3e15d90fe695953fd334408ec1afad77","Mon, 15 Jun 2009 22:24:01 -0700","David Saff","Move emptySuite method to Suite"
"./src/main/java/org/junit/runners/Suite.java","fd1111ed097e0db6602c2f388d41c7ad817c7f9f","Tue, 28 Apr 2009 16:12:32 -0400","David Saff","SuiteClasses is inherited"
"./src/main/java/org/junit/runners/Suite.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runners/Suite.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/runners/Suite.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/Suite.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/runners/Suite.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/runners/Suite.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runners/Suite.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/Suite.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/runners/Suite.java","0c8452532da8f8e9d5ccc737f3cc7e95f65df160","Thu, 26 Jun 2008 13:39:13 +0000","kbeck","Added protected Suite(Class<?> klass, Class<?>[] suiteClasses) to support ClasspathSuite. This still needs a test."
"./src/main/java/org/junit/runners/Suite.java","23ce44aec824a38dc117fee49a79d52d9cd83522","Tue, 10 Jun 2008 17:47:29 +0000","dsaff","Finish javadoc"
"./src/main/java/org/junit/runners/Suite.java","98555e6c5b77b59017eeaa6b54f65c1717c16b72","Mon, 12 May 2008 15:48:00 +0000","dsaff","JavaDoc cleanup"
"./src/main/java/org/junit/runners/Suite.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/runners/Suite.java","c732aa178a822671d3de88e5ece05f9bf464172b","Thu, 10 Jan 2008 04:52:51 +0000","dsaff","Remove unnecessary code, and document Suite constructors"
"./src/main/java/org/junit/runners/Suite.java","d148bce8682505082a3cc634acbd36ac13a10c9a","Thu, 10 Jan 2008 04:12:53 +0000","dsaff","A SuiteBuilder can be explicitly passed to a Runner class that needs one in its constructor.  This eliminates the ugly global constant SuiteBuilder in Suite, and breaks the cyclic dependency between runners and requests"
"./src/main/java/org/junit/runners/Suite.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/main/java/org/junit/runners/Suite.java","4dcf3a499652b3c089d91e209c6f01313115ff76","Fri, 4 Jan 2008 18:31:45 +0000","dsaff","Found untested line"
"./src/main/java/org/junit/runners/Suite.java","248bdb8248d80ac57d8b485ef73e758103a0c312","Sun, 16 Dec 2007 02:46:45 +0000","dsaff","Slight organization in Suite"
"./src/main/java/org/junit/runners/Suite.java","b8008562db24f9189b90dd0e3864a381681d527f","Thu, 13 Dec 2007 07:45:29 +0000","dsaff","Sort members of Suite"
"./src/main/java/org/junit/runners/Suite.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/runners/Suite.java","478900d7d7af563a3b75b6ca9d7d44e37e2aff5b","Mon, 10 Dec 2007 19:31:40 +0000","kbeck","Steps towards eliminating CompositeRunner"
"./src/main/java/org/junit/runners/Suite.java","9e4dcfe471791bb3aada80810bcbaf6c8b9cd068","Mon, 10 Dec 2007 18:39:41 +0000","dsaff","Extracted parent logic into a SuiteBuilder class"
"./src/main/java/org/junit/runners/Suite.java","1796fa2ddd8ab6e2551d40b1b1a63cd954837b19","Fri, 7 Dec 2007 17:45:07 +0000","dsaff","Suite is again a CompositeRunner"
"./src/main/java/org/junit/runners/Suite.java","3a791ec79fff66aebc332fe4e4cbf626e39bd3d3","Fri, 7 Dec 2007 16:54:31 +0000","dsaff","- Organize ParentRunner better"
"./src/main/java/org/junit/runners/Suite.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/main/java/org/junit/runners/Suite.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runners/ParentRunner.java","1754173319b5b3e153cc54cae0c6261707713ca9","Fri, 25 Apr 2014 23:25:57 +0200","Tibor Digana","Reformating pom.xml and ParentRunner"
"./src/main/java/org/junit/runners/ParentRunner.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/main/java/org/junit/runners/ParentRunner.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/ParentRunner.java","dc5f4661240f98469f498e6ab69a1512c8b39d0c","Wed, 13 Nov 2013 22:08:16 -0500","Craig P. Motlin","Allow custom test runners to create their own TestClasses and customize the scanning of annotations."
"./src/main/java/org/junit/runners/ParentRunner.java","a14fc5f174c08a9ff6e97b266ae3d84efcbd84e6","Tue, 12 Nov 2013 14:29:45 -0800","David Saff","Merge pull request #752 from flpa/380"
"./src/main/java/org/junit/runners/ParentRunner.java","34883d6e3b40704365d67c43af063ccdfa6a4828","Tue, 12 Nov 2013 21:47:51 +0100","flpa","Formatting changes"
"./src/main/java/org/junit/runners/ParentRunner.java","f925a047a6e8e6c6f6996dc19a4ab9b3fc35a3ba","Sat, 9 Nov 2013 22:16:31 +0100","flpa","Re-worked ParentRunner changes"
"./src/main/java/org/junit/runners/ParentRunner.java","0956a4e6a236e9414c0d19a349206f3350501c60","Thu, 24 Oct 2013 00:12:42 +0200","flpa","Draft: Changed implementation for detecting when a class has no tests to run: Replaced special case object by an abstract Statement that is aware of the children it will run. This allows us to evaluate whether a statement has any tests to run using the isIgnored(T) method added in the previous commit - any further handling of ignored tests will be done by the actual implementation. ParentRunner just takes care of not executing the BeforeClass/AfterClass methods and ClassRules if no tests are remaining."
"./src/main/java/org/junit/runners/ParentRunner.java","5cdd702717c5ca7dd3002e95847232681c445127","Wed, 23 Oct 2013 23:16:10 +0200","flpa","Moved isIgnored-check from FrameworkMethod to BlockJUnit4ClassRunner - the method overrides an empty default implementation in ParentRunner."
"./src/main/java/org/junit/runners/ParentRunner.java","f521f9003ac3629373e3dee5112b50e098db4a36","Tue, 22 Oct 2013 01:16:10 +0200","flpa","final cleanup in ParentRunner"
"./src/main/java/org/junit/runners/ParentRunner.java","706c38a81f4ebb142855ee3be27e88fa8eca18e9","Tue, 22 Oct 2013 01:01:28 +0200","flpa","cleanup and javadoc adaptions in ParentRunner"
"./src/main/java/org/junit/runners/ParentRunner.java","e70ed85b5732a42791fd5f8df0acd411f223abab","Sun, 20 Oct 2013 22:40:57 +0200","flpa","ParentRunner: replaced special case class by static special case object, minor method name change"
"./src/main/java/org/junit/runners/ParentRunner.java","fd1ef3ca8069bd149ca63c9660587918aa28c7cd","Sun, 20 Oct 2013 19:03:33 +0200","flpa","minor ParentRunner refactoring"
"./src/main/java/org/junit/runners/ParentRunner.java","224098471a55701c40ab5a49888d93d8ff304164","Sun, 20 Oct 2013 18:58:12 +0200","“flpa”","minor ParentRunner refactoring in new code"
"./src/main/java/org/junit/runners/ParentRunner.java","734b6ba797026c223aa686496581f7124249be9a","Sun, 20 Oct 2013 16:47:46 +0200","flpa","fixed bug in changes in ParentRunner, all tests are succeeding now"
"./src/main/java/org/junit/runners/ParentRunner.java","d517352c4b06fee4d5dfddfc69c86514d09eddc3","Sun, 20 Oct 2013 16:26:10 +0200","flpa","draft changes in ParentRunner for #380; currently some ignore counts are doubled"
"./src/main/java/org/junit/runners/ParentRunner.java","d9054149988487750679e35a349df7e0e2df5870","Wed, 25 Sep 2013 10:04:04 +1000","Ricky","changed arguments to validate methods to use JUnit classes as opposed to java.lang.reflect"
"./src/main/java/org/junit/runners/ParentRunner.java","df88873d5013e400489550cf15e9b51dc438eb4b","Thu, 19 Sep 2013 09:33:37 +1000","Ricky","- replaced null object pattern with null check in ParentRunner for validators - added a comment regarding sorting of declared fields - iterated over map using entry sets and not key sets in TestClass"
"./src/main/java/org/junit/runners/ParentRunner.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/runners/ParentRunner.java","d3ee5d06c0b797ce812cbfe35addc6146d5f07cb","Mon, 16 Sep 2013 14:27:47 +1000","Ricky","More changes after feedback - ParentRunner now has null object pattern for null annotation validators - unmodifiableLists are now inserted into the maps of fMethodsForAnnotations and fFieldsForAnnotations - null value check has been added to the AnnotationValidatorFactory"
"./src/main/java/org/junit/runners/ParentRunner.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/main/java/org/junit/runners/ParentRunner.java","bae4bd80513360c5e884e760447000d9c96ffd72","Thu, 29 Aug 2013 16:57:37 +1000","Ricky","Changes from more feedback - extracted creation of annotation validator into a factory - added thread saftey around collections"
"./src/main/java/org/junit/runners/ParentRunner.java","9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe","Tue, 2 Jul 2013 21:23:20 +1000","Ricky","More changes after feedback"
"./src/main/java/org/junit/runners/ParentRunner.java","85f9d8397bfd96261c3214284672180c522e2d38","Mon, 3 Jun 2013 22:27:53 +1000","Ricky","changes after feedback"
"./src/main/java/org/junit/runners/ParentRunner.java","48af7e797dbefa1fc47e80394c7f74ef87c3c7ab","Tue, 28 May 2013 15:36:45 +1000","Ricky","adding annotation validators functionality"
"./src/main/java/org/junit/runners/ParentRunner.java","cc6e2c090f1b5c294b7aca4ee8252c6db2347eca","Wed, 3 Jul 2013 00:19:18 +0200","Tibor Digana","Guarded by fChildrenLock"
"./src/main/java/org/junit/runners/ParentRunner.java","334bd9ce923cf0293cbca49be4ae5947abf51897","Tue, 2 Jul 2013 22:13:09 +0200","Tibor Digana","fChildrenLock, filter(Filter filter), fRunners"
"./src/main/java/org/junit/runners/ParentRunner.java","68e59d6de3c48be43bfe2d6104fdb6e8280b1232","Thu, 20 Jun 2013 00:21:48 +0200","Tibor Digana","getAnnotatedMethodValues/Field return modifiable collection: no internal data to protect"
"./src/main/java/org/junit/runners/ParentRunner.java","68b4e393388627201265eb3924f3628b1c27e6ff","Sat, 8 Jun 2013 11:24:09 +0200","Tibor Digana","shorten line, renamed var, removed unnecessary empty array in varargs."
"./src/main/java/org/junit/runners/ParentRunner.java","ede492496de0f3c0872216ac9c9b88a00fdef09e","Tue, 4 Jun 2013 02:19:13 +0200","Tibor Digana","changes with unmodifiable collections"
"./src/main/java/org/junit/runners/ParentRunner.java","163f503af57d91f60c6b57d4c9afa768b7c04df0","Sat, 11 May 2013 21:08:24 +0200","Tibor Digana","// Guarded by fLock"
"./src/main/java/org/junit/runners/ParentRunner.java","0ce71108da6f487d76c0f4dc46cde41e11dd3daa","Wed, 1 May 2013 23:11:59 +0200","Tibor Digana","requested improvements in ParentRunner, + DCL in ClassRequest"
"./src/main/java/org/junit/runners/ParentRunner.java","84d8eddd970e46894d471cd2dd17ae8d86fb05db","Thu, 18 Apr 2013 21:56:24 +0200","Tibor Digana","synchronized filtered children in ParentRunner"
"./src/main/java/org/junit/runners/ParentRunner.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/runners/ParentRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/ParentRunner.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/ParentRunner.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/ParentRunner.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/main/java/org/junit/runners/ParentRunner.java","a19e98f00e972333edd2bbbde8270612aa588c42","Thu, 28 Jul 2011 09:54:37 +0200","Stefan Birkner","moved RuleFieldValidator from org.junit.rules to org.junit.internal.runners.rules"
"./src/main/java/org/junit/runners/ParentRunner.java","db8c72be9df8e7d605600cc5f370dffa35112362","Thu, 14 Jul 2011 21:40:16 +0200","Stefan Birkner","applied code review"
"./src/main/java/org/junit/runners/ParentRunner.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/main/java/org/junit/runners/ParentRunner.java","d6f71260512973e70417b999f1efa9757659b1e1","Sat, 9 Jul 2011 22:38:07 +0200","Stefan Birkner","Using TetClass.getAnnotatedFieldValues in order to get classRule fields (fixes issue #258"
"./src/main/java/org/junit/runners/ParentRunner.java","82a70910d902ffa5c63d68f78481da18aa580a94","Tue, 14 Jun 2011 13:37:55 -0400","David Saff","Merge branch 'issue227' of https://github.com/kcooney/junit into kcooney-issue227"
"./src/main/java/org/junit/runners/ParentRunner.java","5eee07b3e21f196b8cb937fb88eb8cf4be694f76","Mon, 30 May 2011 20:08:41 -0700","Kevin Cooney","Optimize ParentRunner.filter for nested suites"
"./src/main/java/org/junit/runners/ParentRunner.java","dfd0bba58bfdacfd8802ee07c8f83ee794a51aba","Mon, 30 May 2011 11:58:46 -0700","Kevin Cooney","Update ParentRunner to make a copy of the List returned by getChildren() Fixes issue #227"
"./src/main/java/org/junit/runners/ParentRunner.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/main/java/org/junit/runners/ParentRunner.java","669bb577583f2edd8cd65008a7c9ac19ebc350ea","Fri, 15 Apr 2011 13:35:45 -0400","David Saff","Fixes issue #39, by having multiple calls to ParentRunner.filter result in the intersection of filters, rather than just the last one used."
"./src/main/java/org/junit/runners/ParentRunner.java","62a2a56c293fd154f152da6dad498d1fc222b352","Fri, 4 Mar 2011 16:02:28 -0500","David Saff","Fix ParentRunner#withClassRules javadoc.  (Thanks to lacostej for initial pull) Closes GH-191."
"./src/main/java/org/junit/runners/ParentRunner.java","4610330ca7fca16df7da1b7d09ea065d071cf9b8","Tue, 18 Jan 2011 15:26:31 -0500","David Saff","Merge branch 'multiple-failure-exception' of https://github.com/kcooney/junit into kcooney-multiple-failure-exception"
"./src/main/java/org/junit/runners/ParentRunner.java","a49240ade1974b948b20cf2c45d9129f04122735","Tue, 11 Jan 2011 21:06:08 -0800","Kevin Cooney","Merge branch 'master' into multiple-failure-exception"
"./src/main/java/org/junit/runners/ParentRunner.java","d6ccf5b0fa4e0d62eac42425a593b870af1247bd","Tue, 11 Jan 2011 20:28:05 -0800","Kevin Cooney","Merge branch 'master' into abstract-test-rule"
"./src/main/java/org/junit/runners/ParentRunner.java","0128bff582b2d10bffff9ff497c3e6f697958b83","Fri, 7 Jan 2011 19:24:41 -0800","Kevin Cooney","Replace TestRule.applyAll() with RunRules."
"./src/main/java/org/junit/runners/ParentRunner.java","7f6173aa593b07856c1ca73ffaf87ff10ea15d4c","Fri, 7 Jan 2011 17:44:42 -0800","Kevin Cooney","Revert "Make TestRule an abstract class. Specify target of the rule annotations.""
"./src/main/java/org/junit/runners/ParentRunner.java","bed58a573c373d57d64fa369f58b2a8f0dbee3d7","Wed, 5 Jan 2011 12:53:46 -0800","Kevin Cooney","Add runLeaf() to ParentRunner. This makes it easier to write a custom runner that supports MultipleFailureException and AssumptionViolatedException without depending on internal classes."
"./src/main/java/org/junit/runners/ParentRunner.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/runners/ParentRunner.java","8d26b450670647c847aa0ba1dd47a9c54865c63d","Tue, 28 Dec 2010 09:46:14 -0500","David Saff","further documentation cleanup, especially around TestRule"
"./src/main/java/org/junit/runners/ParentRunner.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/runners/ParentRunner.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/runners/ParentRunner.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/main/java/org/junit/runners/ParentRunner.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/main/java/org/junit/runners/ParentRunner.java","71980abb3edfbdd988b4b4714c508e4db86787f4","Mon, 19 Oct 2009 17:14:08 +0800","Alistair A. Israel","Clarified Javadoc and exception message; finalized parameter"
"./src/main/java/org/junit/runners/ParentRunner.java","4abb65c56382cdd4ff453ddceb70b5944e6e0b38","Mon, 19 Oct 2009 16:59:38 +0800","Alistair A. Israel","Proof-of-concept for class-level @Rule support"
"./src/main/java/org/junit/runners/ParentRunner.java","df85817595e97082eaf8d6c95e2c269b86afff20","Mon, 20 Jul 2009 22:34:15 -0400","David Saff","org.junit is javadoced except internal and experimental"
"./src/main/java/org/junit/runners/ParentRunner.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/main/java/org/junit/runners/ParentRunner.java","198df01b7b288e57e222a33c74f8ff98bf518d93","Mon, 11 May 2009 23:29:36 -0400","David Saff","don't wrap statements for before/after/etc unless there's something to wrap them with."
"./src/main/java/org/junit/runners/ParentRunner.java","b737131b847c53bb4f1cf6dbf86f586008550eba","Mon, 11 May 2009 22:54:41 -0400","David Saff","Pairing approach to removing duplication from ParallelComputer, creating RunnerInterceptor."
"./src/main/java/org/junit/runners/ParentRunner.java","8b87e991c603ac14265fc3dd66b089c2395cb701","Tue, 5 May 2009 00:06:57 -0400","David Saff","Removed duplication by creating a delegating subclass of ParentRunner, and introducing temporary ugly public API."
"./src/main/java/org/junit/runners/ParentRunner.java","3d08ecc6a661f09520559637794c9a161db90f3d","Mon, 4 May 2009 16:38:26 -0400","David Saff","Removed duplication in ParallelComputer.  Cure worse than disease?"
"./src/main/java/org/junit/runners/ParentRunner.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runners/ParentRunner.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/runners/ParentRunner.java","cec4a6baf600b8dee3d1318c242a67b56874288a","Tue, 9 Sep 2008 20:57:17 +0000","kbeck","*** empty log message ***"
"./src/main/java/org/junit/runners/ParentRunner.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/ParentRunner.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/runners/ParentRunner.java","e07e59eb9d24f6e4fa85dd99f311c1feca6ea983","Wed, 30 Jul 2008 02:56:52 +0000","dsaff","ErrorReportingRunner is not a ParentRunner.  This means that all ParentRunners validate, for sure, during construction."
"./src/main/java/org/junit/runners/ParentRunner.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/runners/ParentRunner.java","9a789a40295a91844e4e16afee93d5ff7218951a","Tue, 29 Jul 2008 17:11:20 +0000","dsaff","Publishing TestClass and doc'ing ParentRunner"
"./src/main/java/org/junit/runners/ParentRunner.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runners/package-info.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/runners/package-info.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/main/java/org/junit/runners/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runners/Parameterized.java","cb6abf6fc729f07c5d60b0756e91af444400b4b5","Mon, 25 Nov 2013 22:37:12 +0100","Stefan Birkner","Use a ParametersRunnerFactory for creating the test for a set of parameters."
"./src/main/java/org/junit/runners/Parameterized.java","dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7","Fri, 22 Nov 2013 09:40:06 +0100","Stefan Birkner","Extract BlockJUnit4ClassRunnerWithParameters."
"./src/main/java/org/junit/runners/Parameterized.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/main/java/org/junit/runners/Parameterized.java","1a5eb10451f2cc6fdc1666739c14507790137841","Mon, 3 Feb 2014 23:46:57 +0100","Stefan Birkner","Mention required modifiers of @Parameters method. Fixes #809."
"./src/main/java/org/junit/runners/Parameterized.java","f6a3d7405b72966d3714355804e1b3c14b1425cb","Tue, 2 Jul 2013 00:23:02 +0200","Stefan Birkner","Support more return types for the @Parameters method. Fixes #700."
"./src/main/java/org/junit/runners/Parameterized.java","334bd9ce923cf0293cbca49be4ae5947abf51897","Tue, 2 Jul 2013 22:13:09 +0200","Tibor Digana","fChildrenLock, filter(Filter filter), fRunners"
"./src/main/java/org/junit/runners/Parameterized.java","68b4e393388627201265eb3924f3628b1c27e6ff","Sat, 8 Jun 2013 11:24:09 +0200","Tibor Digana","shorten line, renamed var, removed unnecessary empty array in varargs."
"./src/main/java/org/junit/runners/Parameterized.java","ede492496de0f3c0872216ac9c9b88a00fdef09e","Tue, 4 Jun 2013 02:19:13 +0200","Tibor Digana","changes with unmodifiable collections"
"./src/main/java/org/junit/runners/Parameterized.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/runners/Parameterized.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/runners/Parameterized.java","3a02b8d7fa7ef1b79c4fd4644b5383899b82ae9f","Thu, 6 Dec 2012 11:50:29 +0100","Francesco Mari","put name formatting logic in its own method"
"./src/main/java/org/junit/runners/Parameterized.java","4e37cdc3ff0c46679b334f9a87f55ae00f90c864","Tue, 4 Dec 2012 16:35:24 +0100","Francesco Mari","fix line terminators"
"./src/main/java/org/junit/runners/Parameterized.java","61badf2f7f147d6e782e1700b24da4ac06ce070c","Tue, 4 Dec 2012 14:17:00 +0100","Francesco Mari","allow configurable creation of child runners of parameterized suites"
"./src/main/java/org/junit/runners/Parameterized.java","70e2f2e369829a7443e96c29f922be9e04da93dd","Mon, 19 Nov 2012 16:24:39 +0100","Matthew Farwell","Fixes #553, formatted sample code in javadoc"
"./src/main/java/org/junit/runners/Parameterized.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/Parameterized.java","def7dc5f79e99b11425ab36b51bdaa9ff735bc9b","Tue, 21 Aug 2012 08:28:44 +0200","Jeremy Herault","fixing weird indent"
"./src/main/java/org/junit/runners/Parameterized.java","56b5463c6adf89a03f489f3525a9a343bc43d960","Mon, 20 Aug 2012 08:50:01 +0200","Jeremy Herault","'each' instead of 'f' for the variable name"
"./src/main/java/org/junit/runners/Parameterized.java","0215c66179ed2c04da2e53f67aefc97b6db5782a","Mon, 20 Aug 2012 08:47:01 +0200","Jeremy Herault","refactoring for better readability"
"./src/main/java/org/junit/runners/Parameterized.java","1fa373f01d126d437f08a57a7b5e7a7ec0a01b85","Fri, 17 Aug 2012 16:55:38 +0200","Jeremy Herault","Couple of nitpicks ;-)"
"./src/main/java/org/junit/runners/Parameterized.java","cbf46b88c2937aece7018fa50ba4dbb133e03d06","Fri, 17 Aug 2012 14:56:22 +0200","Jeremy Herault","Pull request #182 && #483: Adding Parameter annotation for field parameters"
"./src/main/java/org/junit/runners/Parameterized.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/Parameterized.java","6a3cec9cb371e18c697db4b0e67ea30f35ce9231","Wed, 4 Apr 2012 01:01:28 +0200","Stefan Birkner","Use the same name as in the test. Fix documentation."
"./src/main/java/org/junit/runners/Parameterized.java","1379441f829db2dbb048caf787e18ce6a966059b","Mon, 5 Mar 2012 23:03:04 +0100","Stefan Birkner","The runner adds the square brackets to the name."
"./src/main/java/org/junit/runners/Parameterized.java","d28f98205384c7c987b79b2b088507ab8b029c6d","Mon, 5 Mar 2012 22:50:15 +0100","Stefan Birkner","Don't use static import for MessageFormat.format"
"./src/main/java/org/junit/runners/Parameterized.java","e0cddcdfa8ec823da136af500cce0910a1dd2264","Fri, 2 Mar 2012 23:18:01 +0100","Stefan Birkner","Add names for parameterized tests. Fixes #24 and #44."
"./src/main/java/org/junit/runners/Parameterized.java","5475e12b57f5af0140deffa7f45c75dc47803167","Fri, 21 Oct 2011 01:29:17 +0200","Stefan Birkner","Use Iterable for the parameters of Parameterized (fixes #104)."
"./src/main/java/org/junit/runners/Parameterized.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/main/java/org/junit/runners/Parameterized.java","83219d81d0173d5444c0c127374b1684fc1384df","Fri, 12 Aug 2011 00:59:33 +0300","Esko Luontola","Fixes #285: Syntax error in Parameterized's usage example"
"./src/main/java/org/junit/runners/Parameterized.java","bcf4785a8ae0ad21ffefd80dcfbb360621d98806","Fri, 22 Jul 2011 09:44:08 +0200","Stefan Birkner","fixed issue #89 (wrong JavaDoc of Parameterized)"
"./src/main/java/org/junit/runners/Parameterized.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/Parameterized.java","f9168cb066a53dc63f7346f6bb3d25a46d0ccbed","Mon, 20 Apr 2009 15:08:34 -0400","David Saff","Fix javadoc on Parameterized"
"./src/main/java/org/junit/runners/Parameterized.java","0cb606ac2c77a4460bec1efa22a1c8e8d473b11c","Tue, 14 Apr 2009 21:02:31 +0800","David Saff","Removed inane javadoc comment"
"./src/main/java/org/junit/runners/Parameterized.java","b5e9885854a0d594451800b9127eb50afb645433","Mon, 13 Apr 2009 22:07:14 -0400","David Saff","Revert "Added AfterParameterize and BeforeParameterize to allow methods to run before and after parameterized tests""
"./src/main/java/org/junit/runners/Parameterized.java","6abd4e65122ac6e3b56cf53a9a7540b61e4e687e","Mon, 23 Mar 2009 04:13:50 +0800","Mike Forsberg","Added AfterParameterize and BeforeParameterize to allow methods to run before and after parameterized tests"
"./src/main/java/org/junit/runners/Parameterized.java","095d3f8df0708f98d41f5894a892388b6985c44f","Thu, 31 Jul 2008 14:20:56 +0000","dsaff","Validation of constructors that can take parameters, commenting about an exception that should never occur"
"./src/main/java/org/junit/runners/Parameterized.java","a07f1be1bc7eb7f7d757da48d0a3110452cca4d4","Thu, 31 Jul 2008 13:59:58 +0000","dsaff","Cleaned up implementation of Parameterized to better use its Suite subclass, and better validate the test class"
"./src/main/java/org/junit/runners/Parameterized.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/Parameterized.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/runners/Parameterized.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/runners/Parameterized.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runners/Parameterized.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/Parameterized.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/runners/Parameterized.java","8e3f361443ddf8bca21c3db661c75d374fe78dba","Wed, 16 Jul 2008 00:21:15 +0000","kbeck","Refactored to eliminate Notifier and its subclasses. You don't pull your weight around here and you're history."
"./src/main/java/org/junit/runners/Parameterized.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/runners/Parameterized.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/main/java/org/junit/runners/Parameterized.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/runners/Parameterized.java","c732aa178a822671d3de88e5ece05f9bf464172b","Thu, 10 Jan 2008 04:52:51 +0000","dsaff","Remove unnecessary code, and document Suite constructors"
"./src/main/java/org/junit/runners/Parameterized.java","1fb24143dc38d0b00f7e7b13b23e6619cc216f9b","Sun, 30 Dec 2007 22:02:05 +0000","dsaff","Assumption failures and ignore are different events"
"./src/main/java/org/junit/runners/Parameterized.java","18299dc8f8aaae0e64345795b2884eb7f42ad460","Fri, 28 Dec 2007 19:47:37 +0000","dsaff","Assignments depends on TestClass, rather than directly on java.lang.Class"
"./src/main/java/org/junit/runners/Parameterized.java","248bdb8248d80ac57d8b485ef73e758103a0c312","Sun, 16 Dec 2007 02:46:45 +0000","dsaff","Slight organization in Suite"
"./src/main/java/org/junit/runners/Parameterized.java","b067fc9b47471e5b3561b545cb63ea1ec892922d","Sun, 16 Dec 2007 02:29:10 +0000","dsaff","Pushed down call to getParametersList to the lowest point possible"
"./src/main/java/org/junit/runners/Parameterized.java","7ceaea00ee1af6168d737b785460a803d6f3c50c","Thu, 13 Dec 2007 07:57:28 +0000","dsaff","Remove some anemic Request implementations"
"./src/main/java/org/junit/runners/Parameterized.java","09fcafc04e07b3481ef60159de2d6ae3464b98ac","Thu, 13 Dec 2007 07:44:57 +0000","dsaff","Make ParentRunner.fTestClass private"
"./src/main/java/org/junit/runners/Parameterized.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/runners/Parameterized.java","478900d7d7af563a3b75b6ca9d7d44e37e2aff5b","Mon, 10 Dec 2007 19:31:40 +0000","kbeck","Steps towards eliminating CompositeRunner"
"./src/main/java/org/junit/runners/Parameterized.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/runners/Parameterized.java","44fabd25eb7d8c5291094b033007c32b7a1b8da2","Fri, 7 Dec 2007 19:06:00 +0000","dsaff","Reorganize ParentRunner and children"
"./src/main/java/org/junit/runners/Parameterized.java","3a791ec79fff66aebc332fe4e4cbf626e39bd3d3","Fri, 7 Dec 2007 16:54:31 +0000","dsaff","- Organize ParentRunner better"
"./src/main/java/org/junit/runners/Parameterized.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/main/java/org/junit/runners/Parameterized.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runners/model/FrameworkMember.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/model/FrameworkMember.java","fbb1efed56f2b495d68a598d5345cbc95b118d35","Mon, 23 Dec 2013 00:02:07 +0100","Stefan Birkner","Remove duplicate code."
"./src/main/java/org/junit/runners/model/FrameworkMember.java","9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403","Thu, 14 Nov 2013 18:11:13 +0100","Stefan Ferstl","Verify that all (base-) classes declaring @ClassRules are public - Add the new method getDeclaringClass() to FrameworkMember   - FrameworkMethod will return the class where the method is actually     declared   - FrameworkField will return the class where the field is actually     declared - Add validation logic to RuleFieldValidator - Add test for validation logic"
"./src/main/java/org/junit/runners/model/FrameworkMember.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/FrameworkMember.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/FrameworkMember.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/model/FrameworkMember.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/model/FrameworkMember.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/main/java/org/junit/runners/model/Statement.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/Statement.java","caefa620d3a82613461420987fe8a88fc1e6f988","Fri, 1 Jun 2012 21:20:25 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/Statement.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/Statement.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/model/Statement.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/model/RunnerBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/RunnerBuilder.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/RunnerBuilder.java","f09cff79b941a525271f3f2838a9742b4c5c8d36","Wed, 12 May 2010 00:42:59 -0400","dsaff","alpha-ready implementation of SuiteBuilder"
"./src/main/java/org/junit/runners/model/RunnerBuilder.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/model/RunnerBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/model/FrameworkField.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/model/FrameworkField.java","fbb1efed56f2b495d68a598d5345cbc95b118d35","Mon, 23 Dec 2013 00:02:07 +0100","Stefan Birkner","Remove duplicate code."
"./src/main/java/org/junit/runners/model/FrameworkField.java","0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7","Sun, 22 Dec 2013 23:23:17 +0100","Stefan Birkner","Override toString() with meaningful implementation."
"./src/main/java/org/junit/runners/model/FrameworkField.java","4e9f1a65ca8d794db54260b4f2e5b078d949fdda","Sun, 22 Dec 2013 23:05:06 +0100","Stefan Birkner","Prevent creation of FrameworkMethod or FrameworkField without underlying member."
"./src/main/java/org/junit/runners/model/FrameworkField.java","9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403","Thu, 14 Nov 2013 18:11:13 +0100","Stefan Ferstl","Verify that all (base-) classes declaring @ClassRules are public - Add the new method getDeclaringClass() to FrameworkMember   - FrameworkMethod will return the class where the method is actually     declared   - FrameworkField will return the class where the field is actually     declared - Add validation logic to RuleFieldValidator - Add test for validation logic"
"./src/main/java/org/junit/runners/model/FrameworkField.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/FrameworkField.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/FrameworkField.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/model/FrameworkField.java","db8c72be9df8e7d605600cc5f370dffa35112362","Thu, 14 Jul 2011 21:40:16 +0200","Stefan Birkner","applied code review"
"./src/main/java/org/junit/runners/model/FrameworkField.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/main/java/org/junit/runners/model/FrameworkField.java","4abb65c56382cdd4ff453ddceb70b5944e6e0b38","Mon, 19 Oct 2009 16:59:38 +0800","Alistair A. Israel","Proof-of-concept for class-level @Rule support"
"./src/main/java/org/junit/runners/model/FrameworkField.java","df85817595e97082eaf8d6c95e2c269b86afff20","Mon, 20 Jul 2009 22:34:15 -0400","David Saff","org.junit is javadoced except internal and experimental"
"./src/main/java/org/junit/runners/model/FrameworkField.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/main/java/org/junit/runners/model/FrameworkField.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/model/FrameworkField.java","1e54b68d2fe7c4238993b360c7be6fbb05d30528","Tue, 26 May 2009 22:27:24 -0400","David Saff","Using getAnnotatedFields in Interceptors, now correctly"
"./src/main/java/org/junit/runners/model/FrameworkField.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","88f7a12d472b1157639db5148b29c8a8825802a3","Sun, 6 Apr 2014 00:02:03 +0200","Stefan Birkner","Don't verify the visibility of a method's declaring class."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","cb0c4e9f7c9be8be7c11e4934f6bd71a312102ec","Fri, 28 Mar 2014 15:49:42 -0500","Paul Holser","For #855, remove FrameworkMethod.getParameterSignatures()"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","fbb1efed56f2b495d68a598d5345cbc95b118d35","Mon, 23 Dec 2013 00:02:07 +0100","Stefan Birkner","Remove duplicate code."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","52e93b4fe3c4133118f33635ea8517a13ff05321","Sun, 22 Dec 2013 23:40:55 +0100","Stefan Birkner","Change visibility of field fMethod to private."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","0e1a559e1371aa9929ca4f61f87cf8f9a5923ce7","Sun, 22 Dec 2013 23:23:17 +0100","Stefan Birkner","Override toString() with meaningful implementation."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","4e9f1a65ca8d794db54260b4f2e5b078d949fdda","Sun, 22 Dec 2013 23:05:06 +0100","Stefan Birkner","Prevent creation of FrameworkMethod or FrameworkField without underlying member."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403","Thu, 14 Nov 2013 18:11:13 +0100","Stefan Ferstl","Verify that all (base-) classes declaring @ClassRules are public - Add the new method getDeclaringClass() to FrameworkMember   - FrameworkMethod will return the class where the method is actually     declared   - FrameworkField will return the class where the field is actually     declared - Add validation logic to RuleFieldValidator - Add test for validation logic"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","5cdd702717c5ca7dd3002e95847232681c445127","Wed, 23 Oct 2013 23:16:10 +0200","flpa","Moved isIgnored-check from FrameworkMethod to BlockJUnit4ClassRunner - the method overrides an empty default implementation in ParentRunner."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","e9b0dda59f37f491052e3c6f71c7f1c281492a9f","Tue, 22 Oct 2013 00:20:58 +0200","flpa","organized imports in framework method"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","4f7ed2bdf1856b0582e9b982aa0ba594498c6b45","Sun, 20 Oct 2013 16:47:02 +0200","flpa","simplified isIgnored check in Framework, using it in BlockJUnit4ClassRuner"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","91b2d357c370519e052fdb386b664f0ac1d52628","Sun, 20 Oct 2013 16:14:18 +0200","flpa","Added isIgnored() to FrameworkMethod."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","89ffd7eda43f939f7dc210cfe21a196067ab08d6","Fri, 8 Jul 2011 21:13:43 -0500","Paul Holser","Adding additional javadoc context for deprecated FrameworkMethod#producesType. Adding acknowledgements entry for pholser. Starting 4.9.1 release notes."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","9c4e365ea50ea6f983e4b4770de66553a806c806","Tue, 5 Jul 2011 20:03:40 -0500","Paul Holser","Attempt 2: Setting up for resolving issue 64, Theories honoring generic type parameters. This commit comprises only those changes required in the core of JUnit -- basically adding a validator that the Theories runner can call to reject theories with generic type variables (that are hard to resolve), and deprecating FrameworkMethod#producesType, which only the Theories runner uses, and which will be supplanted by an equivalent method on ParameterSignature. Other required changes will be added to the Theories experiment once it migrates over to junit.contrib."
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","82169027cce65df0e48f1b0824f6aad308ea8f13","Tue, 7 Jul 2009 23:34:31 -0400","David Saff","Fix javadoc warnings"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","90bf3119a6326671cc467386036302cc6040f752","Sat, 20 Dec 2008 15:36:48 +0000","kbeck","Description seems to be heading towards Composite. Added "getTestName""
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","a36466e1aed381e2973e5550969474a043879611","Tue, 5 Aug 2008 17:15:45 +0000","kbeck","Cleaned up formatting"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","b5bf89de628350e58514421150839318c1338c55","Thu, 31 Jul 2008 14:29:15 +0000","dsaff","Javadoc on FrameworkMethod augmented"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","50b9c949876189d8c4871471ec346988e4ccae06","Thu, 31 Jul 2008 14:28:18 +0000","dsaff","Better validation in Theories"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/model/FrameworkMethod.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/model/TestTimedOutException.java","f03bc79e913f70a6efd4e05e26436a6942efc53f","Tue, 7 Jan 2014 09:22:19 +0100","Andreas Skoog","minor javadoc change"
"./src/main/java/org/junit/runners/model/TestTimedOutException.java","26c25f3dbf524f4efd90e97f41c6df10345e78a9","Wed, 25 Dec 2013 15:21:10 +0100","Andreas Skoog","Rename TestFailedOnTimeoutException -> TestTimedOutException"
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","cb818f191ea2b9fe563aa20c581b16f3f23b7c4c","Thu, 12 Sep 2013 22:01:56 -0700","Kevin Cooney","Change signature of MultipleFailureException.assertEmpty() to throw Exception."
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","8f11e709cd7dc7207002b3cf31c6da9462da1a1e","Fri, 15 Feb 2013 08:40:14 -0800","Kevin Cooney","Remove incorrect copyrights"
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","346bad2d3fb82c9a8378758b12979f7c9fe584e3","Tue, 11 Jan 2011 21:09:50 -0800","Kevin Cooney","MultipleFailureException cleanup."
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","708ed373c02b467422890d5163fff46d1f32ab01","Tue, 4 Jan 2011 20:32:50 -0800","Kevin Cooney","Fix typos in comments"
"./src/main/java/org/junit/runners/model/MultipleFailureException.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/runners/model/InitializationError.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/InitializationError.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/InitializationError.java","ce810b763e5021629248702993f226e3bf969db8","Mon, 19 Oct 2009 22:51:12 -0400","David Saff","Multiple categories on tests, category inheritance, production classes in production package."
"./src/main/java/org/junit/runners/model/InitializationError.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/model/InitializationError.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/runners/model/TestClass.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/main/java/org/junit/runners/model/TestClass.java","3e08f69912d69189e895c279b1bece0c7c0840f4","Thu, 21 Nov 2013 08:45:04 +0100","Stefan Birkner","Create a class TestWithParameters."
"./src/main/java/org/junit/runners/model/TestClass.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/model/TestClass.java","dc5f4661240f98469f498e6ab69a1512c8b39d0c","Wed, 13 Nov 2013 22:08:16 -0500","Craig P. Motlin","Allow custom test runners to create their own TestClasses and customize the scanning of annotations."
"./src/main/java/org/junit/runners/model/TestClass.java","f5e7e1ff180bb17e4f9df702a038e06a974f78f6","Sun, 6 Oct 2013 14:39:02 +1100","Ricky","added the since 4.12 where appropriate"
"./src/main/java/org/junit/runners/model/TestClass.java","862f41cbc1757a4783b725c23588d41219735b72","Thu, 19 Sep 2013 18:12:41 +1000","Ricky","refactored copying of maps to unmodfiableMaps in TestClass"
"./src/main/java/org/junit/runners/model/TestClass.java","df88873d5013e400489550cf15e9b51dc438eb4b","Thu, 19 Sep 2013 09:33:37 +1000","Ricky","- replaced null object pattern with null check in ParentRunner for validators - added a comment regarding sorting of declared fields - iterated over map using entry sets and not key sets in TestClass"
"./src/main/java/org/junit/runners/model/TestClass.java","c75dcc28810aeb1c918ee7430981b31f41742ea7","Tue, 17 Sep 2013 07:03:16 +1000","Ricky","- Sorted fields before iterating through them for annotations in TestClass - Removed redundant wrapping of unmodifiableMap in getters of annotationToFields/Methods"
"./src/main/java/org/junit/runners/model/TestClass.java","88e2a7611e0c9e93aefca75056ac52c46fb5799b","Mon, 16 Sep 2013 18:27:10 +1000","Ricky","- Moved expect in tests to be right before test method is called - Fixed javadoc comment in map getAnnotationToMethods/getAnnotationToFields methods - Fixed duplicate test for annotationToMethods"
"./src/main/java/org/junit/runners/model/TestClass.java","d3ee5d06c0b797ce812cbfe35addc6146d5f07cb","Mon, 16 Sep 2013 14:27:47 +1000","Ricky","More changes after feedback - ParentRunner now has null object pattern for null annotation validators - unmodifiableLists are now inserted into the maps of fMethodsForAnnotations and fFieldsForAnnotations - null value check has been added to the AnnotationValidatorFactory"
"./src/main/java/org/junit/runners/model/TestClass.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/main/java/org/junit/runners/model/TestClass.java","bae4bd80513360c5e884e760447000d9c96ffd72","Thu, 29 Aug 2013 16:57:37 +1000","Ricky","Changes from more feedback - extracted creation of annotation validator into a factory - added thread saftey around collections"
"./src/main/java/org/junit/runners/model/TestClass.java","85f9d8397bfd96261c3214284672180c522e2d38","Mon, 3 Jun 2013 22:27:53 +1000","Ricky","changes after feedback"
"./src/main/java/org/junit/runners/model/TestClass.java","48af7e797dbefa1fc47e80394c7f74ef87c3c7ab","Tue, 28 May 2013 15:36:45 +1000","Ricky","adding annotation validators functionality"
"./src/main/java/org/junit/runners/model/TestClass.java","d0cd805df54673c2d1376c58bcee23b6e32fb4ee","Wed, 3 Jul 2013 23:23:05 +0200","Tibor Digana","renamed parameter to "fillIfAbsent""
"./src/main/java/org/junit/runners/model/TestClass.java","68e59d6de3c48be43bfe2d6104fdb6e8280b1232","Thu, 20 Jun 2013 00:21:48 +0200","Tibor Digana","getAnnotatedMethodValues/Field return modifiable collection: no internal data to protect"
"./src/main/java/org/junit/runners/model/TestClass.java","68b4e393388627201265eb3924f3628b1c27e6ff","Sat, 8 Jun 2013 11:24:09 +0200","Tibor Digana","shorten line, renamed var, removed unnecessary empty array in varargs."
"./src/main/java/org/junit/runners/model/TestClass.java","ede492496de0f3c0872216ac9c9b88a00fdef09e","Tue, 4 Jun 2013 02:19:13 +0200","Tibor Digana","changes with unmodifiable collections"
"./src/main/java/org/junit/runners/model/TestClass.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/runners/model/TestClass.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/TestClass.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/TestClass.java","f0319c2af61edbf587b958e9aa2f0f75eed2b375","Tue, 31 Jan 2012 14:49:10 -0500","Jesse Glick","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/main/java/org/junit/runners/model/TestClass.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/runners/model/TestClass.java","e0f84b71fcc34ab4fe244340f18753225b74128b","Mon, 19 Sep 2011 17:34:50 -0400","Jesse Glick","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/main/java/org/junit/runners/model/TestClass.java","1014436692b0829a7287fbab81ef8720309d7945","Sun, 18 Sep 2011 23:20:46 +0200","Stefan Birkner","Fixes gh-42 (error message for non-static inner class)"
"./src/main/java/org/junit/runners/model/TestClass.java","cb69050a45f1688ad8c6e817cc511cfa67401f63","Fri, 26 Aug 2011 13:13:27 -0400","Jesse Glick","Preditably sort (test) methods in a class. The JVM does not guarantee any order. Visible here as an occasional failure in ParentRunnerTest.useChildHarvester on JDK 7 prior to fix."
"./src/main/java/org/junit/runners/model/TestClass.java","eef732f8e686d719c109a1ca66aed0dc8bba8808","Wed, 13 Jul 2011 22:14:25 +0200","Stefan Birkner","renamed eachField to each"
"./src/main/java/org/junit/runners/model/TestClass.java","b23ffd790b06f561290239ef3b7a5239ba755f10","Wed, 13 Jul 2011 21:45:28 +0200","Stefan Birkner","extracted validation to RuleFieldValidator; moved validation to collectInitializationErrors(...)"
"./src/main/java/org/junit/runners/model/TestClass.java","42325d56aa22e9369c535410dfc545d3729592ae","Sat, 9 Jul 2011 23:07:48 +0200","Stefan Birkner","deleted abandoned import"
"./src/main/java/org/junit/runners/model/TestClass.java","d04a0d02ac8418c4fdbf926bdcfcb7b2bafee936","Sat, 9 Jul 2011 22:59:09 +0200","Stefan Birkner","TestClass.getAnnotatedFieldValues(...) throws exception with helpful message for non static fields (fixes issue #257)."
"./src/main/java/org/junit/runners/model/TestClass.java","0c114780df6a4f096493730dd004bccd44b13e15","Sat, 9 Jul 2011 22:14:10 +0200","Stefan Birkner","Throw exception with helpful message if annotated field is not public (fixes issue #260)."
"./src/main/java/org/junit/runners/model/TestClass.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/runners/model/TestClass.java","1bbab715de4c64943948ecc3739c8d5569378672","Mon, 8 Feb 2010 23:10:47 -0500","David Saff","CategoriesMark2 reuse code properly from TestClass"
"./src/main/java/org/junit/runners/model/TestClass.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/main/java/org/junit/runners/model/TestClass.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/runners/model/TestClass.java","1e54b68d2fe7c4238993b360c7be6fbb05d30528","Tue, 26 May 2009 22:27:24 -0400","David Saff","Using getAnnotatedFields in Interceptors, now correctly"
"./src/main/java/org/junit/runners/model/TestClass.java","85d42f2ef0ce94448700c90ed99372def66dc2a2","Mon, 25 May 2009 22:03:53 -0400","David Saff","All tests pass"
"./src/main/java/org/junit/runners/model/TestClass.java","bbcb8f416628bc168a2ed8353a30b4e9647abf6f","Mon, 25 May 2009 21:51:47 -0400","David Saff","Getting there with FrameworkField, but checking in before everything works, to demo squeezing"
"./src/main/java/org/junit/runners/model/TestClass.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/runners/model/TestClass.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/runners/model/TestClass.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runners/model/Annotatable.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java","9c4e365ea50ea6f983e4b4770de66553a806c806","Tue, 5 Jul 2011 20:03:40 -0500","Paul Holser","Attempt 2: Setting up for resolving issue 64, Theories honoring generic type parameters. This commit comprises only those changes required in the core of JUnit -- basically adding a validator that the Theories runner can call to reject theories with generic type variables (that are hard to resolve), and deprecating FrameworkMethod#producesType, which only the Theories runner uses, and which will be supplanted by an equivalent method on ParameterSignature. Other required changes will be added to the Theories experiment once it migrates over to junit.contrib."
"./src/main/java/org/junit/runners/model/RunnerScheduler.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runners/model/RunnerScheduler.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runners/model/RunnerScheduler.java","df85817595e97082eaf8d6c95e2c269b86afff20","Mon, 20 Jul 2009 22:34:15 -0400","David Saff","org.junit is javadoced except internal and experimental"
"./src/main/java/org/junit/runners/model/RunnerScheduler.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/main/java/org/junit/AssumptionViolatedException.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","1827bfd929d49e0f397b425e8d681c18a3518196","Wed, 22 Aug 2012 13:28:37 +0200","Marc Philipp","Workaround for compilation problem on non-recent JDKs."
"./src/main/java/org/junit/matchers/JUnitMatchers.java","a37fd9ac8b2afc54384fd32f470b54aa69dc620a","Fri, 20 Jul 2012 11:42:16 +0200","Marc Philipp","Rename withStacktrace() to isException()/isThrowable()"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","620ccfdd8b06dfa1fc5b4c3d3f014a45caeebccb","Sun, 15 Jul 2012 14:10:46 +0200","Marc Philipp","Remove unused import"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","40375ef1fc08b1f666b21d299d8b52b10a53e6fb","Sun, 15 Jul 2012 14:03:49 +0200","Marc Philipp","Update Hamcrest from 1.3.RC2 to 1.3"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","e381886b42fb190e3ebb82503330e8ca2788a929","Thu, 24 May 2012 17:05:26 +0200","arjenw","Files referring to the new CauseMatcher including the CauseMatcher itself"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","231241782c199d39943f742d0abe57057b0b785c","Wed, 25 Apr 2012 20:31:16 +0200","unknown","Reworked based on suggestions * Fixed the javadoc of ResultMatchers.failureIs() * Made the ResultMatchers.failureIs() matcher based on PrintableResult instead of Result * Introduced method 'getFailures()' in PrintableResult to achieve that * Moved causedBy() matcher from ResultMatchers to JUnitMatchers (as it is a Throwable matcher) * Introduced the required tests at the right places"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","4f1dbfc8619f5827a919106d14d42777b838638a","Tue, 3 Apr 2012 21:24:05 +0200","Marc Philipp","Remove everyItem matcher now provided by Hamcrest"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","351af6fa6a08ddf51f03525d8cc4616d45f5caf1","Fri, 15 Apr 2011 15:39:15 -0400","David Saff","Fix javadoc for either."
"./src/main/java/org/junit/matchers/JUnitMatchers.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","0b57f033a94caca38ab1369b117baa1589d7d6d3","Mon, 1 Jun 2009 14:43:37 -0400","David Saff","Minor updates to assertThat and isAnyOf"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","89c38cee73bdcc7505da15d7e5de60cdf45a6c0e","Mon, 1 Jun 2009 13:13:17 -0400","David Saff","Improved documentation of new matchers"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","3762b9a6f23454691ad4d61000b148a00edaeace","Mon, 1 Jun 2009 11:08:41 -0400","David Saff","JUnitMatchers.matches creates any type"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","9164fdee10603ebdb2b4a7d78ab00046fa3ad37f","Fri, 29 May 2009 11:56:22 -0400","David Saff","Hamcrest 1.2 documented in release notes"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","67c31453db464a17bd907a8b4ccfb9103ef946f0","Fri, 29 May 2009 11:20:30 -0400","David Saff","I think this is the end of hamcrest generics"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","e3f50a17c8c6fb7a33bd8a7afb36235b22422346","Fri, 29 May 2009 10:39:33 -0400","David Saff","Better tests of both"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","7dd6711cb9e552cee8091893d4085fdc3f9996b0","Fri, 29 May 2009 09:57:31 -0400","David Saff","Undeprectated JUnitMatchers.either and .both, with different typing, and created JUnitMatchers.matches"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","fd925dc6b23c4fa68de2eab06dc162c4f06ff224","Fri, 29 May 2009 09:19:05 -0400","David Saff","Needed to mostly compile"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/matchers/JUnitMatchers.java","f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd","Tue, 10 Jun 2008 19:50:14 +0000","dsaff","Javadoc for JUnitMatchers, final missing javadoc"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","5c61adf678d0f736846e95cf7062b9102a51afa9","Tue, 10 Jun 2008 18:08:34 +0000","kbeck","Half done doc'ing JUnitMatchers"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/matchers/JUnitMatchers.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/matchers/JUnitMatchers.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/matchers/package-info.java","d0c70cac5b28861803d97d59ab93dfcb10d2c4d3","Thu, 3 Dec 2009 15:21:05 -0500","David Saff","Make release notes compilable, add announce list to building task list, fix generics issues."
"./src/main/java/org/junit/matchers/package-info.java","1c1a6f8020c615c9d723f79a8405e57f1c66ea1e","Mon, 11 Aug 2008 20:08:18 +0000","dsaff","Tagged old version as 4.5.  Docs now say 4.6, and doc'ed a few missing classes"
"./src/main/java/org/junit/Assume.java","27defc432bb2c44ee77c78e27476ed87eaa9dad3","Fri, 21 Mar 2014 10:52:30 +0000","Lukasz Kryger","@ displayed incorrectly in javadocs"
"./src/main/java/org/junit/Assume.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/Assume.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/Assume.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Assume.java","3bb48f0a58eb44f36b6e03538a7db05b6c6da335","Tue, 21 Aug 2012 18:15:02 +0200","Matthew Farwell","Fixes #355 Improve Assume to allow custom message"
"./src/main/java/org/junit/Assume.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/Assume.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Assume.java","4f1dbfc8619f5827a919106d14d42777b838638a","Tue, 3 Apr 2012 21:24:05 +0200","Marc Philipp","Remove everyItem matcher now provided by Hamcrest"
"./src/main/java/org/junit/Assume.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/main/java/org/junit/Assume.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/main/java/org/junit/Assume.java","56dcf5286f5bbb90532f39d407e12e4255670fb9","Thu, 29 May 2008 13:31:06 +0000","dsaff","Remove Assume.fail, which is uncalled"
"./src/main/java/org/junit/Assume.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/Assume.java","b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c","Wed, 7 May 2008 00:32:09 +0000","kbeck","Cleaned up javadoc and ant build problems."
"./src/main/java/org/junit/Assume.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/main/java/org/junit/Assume.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/Assume.java","2a6d6365c593149da094d7512028a2d008ea6cff","Fri, 7 Dec 2007 19:05:27 +0000","dsaff","Use single-arg assumptionFailureException constructor to beautify reporting"
"./src/main/java/org/junit/Assume.java","ea47086066445ba537d1573fd7458de8875d6c45","Fri, 7 Dec 2007 18:52:01 +0000","dsaff","Allow AssumptionFailedExceptions to have a simple, string based reason"
"./src/main/java/org/junit/Assume.java","1e2c9d6451e587981d7be7a1a01dd5f3a722ca4d","Fri, 7 Dec 2007 16:31:40 +0000","dsaff","Added Assume.fail"
"./src/main/java/org/junit/Assume.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/Test.java","84dcb64cf07eba08fd7ef4de3a6aaf21f4944157","Wed, 29 Jan 2014 01:07:02 +0100","Stefan Birkner","Add reference to ExpectedException. Fixes #806."
"./src/main/java/org/junit/Test.java","879ab235ef1f7b4e529a3a1fd8faa862dc399d9b","Sat, 10 Aug 2013 07:49:11 +0800","Russell Santos","Re #686: Added thread safety warnings to @Test javadoc."
"./src/main/java/org/junit/Test.java","bce37741338625944a6e5589e130b8a4bae8151d","Tue, 4 Jun 2013 21:09:53 -0400","Alex Reece","add disclaimer and example"
"./src/main/java/org/junit/Test.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/Test.java","dd297dd9cb1436ac4464dacae9b43ab69aa47fc1","Tue, 5 Feb 2013 12:50:21 -0500","Thomas Nappo","Documentation fix: 'iff' becomes 'if and only if'"
"./src/main/java/org/junit/Test.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Test.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Test.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/ComparisonFailure.java","674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2","Thu, 20 Mar 2014 16:56:24 +0300","Alex Yursha","Make code more readable"
"./src/main/java/org/junit/ComparisonFailure.java","4c1758d3b8003d4b3589fe80af16f590c2e6abe8","Mon, 6 May 2013 15:51:17 +0200","Arie van Deursen","Refactoring ensuring fSuffix is equal to length of suffix."
"./src/main/java/org/junit/ComparisonFailure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/ComparisonFailure.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/ComparisonFailure.java","217bb1bf62aafc466cb5ee794983e589513650fb","Thu, 29 May 2008 13:32:06 +0000","dsaff","org.junit base package all javadoc'ed"
"./src/main/java/org/junit/ComparisonFailure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/AfterClass.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/AfterClass.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/AfterClass.java","de15ca2183f9955be7644c59d19aa3e4931a02d8","Mon, 17 Sep 2012 13:39:07 -0700","Arup Malakar","[Issue #394] [review incorporated] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/AfterClass.java","6adb3ad892ed858849f4a80cd051441e8024226e","Fri, 14 Sep 2012 13:39:32 -0700","Arup Malakar","[Issue #394] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/AfterClass.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/AfterClass.java","71ad947417f7e99014a7ffa1b431bbc2f15bfa36","Mon, 20 Apr 2009 16:02:51 -0400","David Saff","Fixed AfterClass javadoc"
"./src/main/java/org/junit/AfterClass.java","0b65be5d4d0aaf5867ed414765c0c48ceeb00e18","Thu, 31 Jul 2008 23:44:19 +0000","kbeck","Fixed AfterClass javadoc and added a ValidationTest that appears to already be working in spite of complaints to the contrary."
"./src/main/java/org/junit/AfterClass.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/Ignore.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/Ignore.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Ignore.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Ignore.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/Rule.java","967438d490ac741cd188999946b51d6b5b348acf","Thu, 19 Dec 2013 18:40:50 +0100","Robin Stevens","Fixed typo and added link to the RuleChain class"
"./src/main/java/org/junit/Rule.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/Rule.java","b1db2bb47b95aced929b7f801c9185045481da05","Wed, 24 Oct 2012 12:34:27 -0700","Kevin Cooney","Remove tabs"
"./src/main/java/org/junit/Rule.java","bb91daf8e0939d787ffb5a3eda05c2d626cd9851","Wed, 24 Oct 2012 12:31:00 -0700","Kevin Cooney","Fix formatting"
"./src/main/java/org/junit/Rule.java","dc44abf520611a8722e75ba1d32df6a28183e4e3","Wed, 24 Oct 2012 11:58:14 -0700","Kevin Cooney","Merge branch 'master' into undeprecate"
"./src/main/java/org/junit/Rule.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Rule.java","bbacbd93334540a5054bb50488f662c3f81a9c00","Sat, 29 Sep 2012 12:12:35 -0700","Kevin Cooney","Remove @Deprecated from MethodRule and related methods."
"./src/main/java/org/junit/Rule.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Rule.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/Rule.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/main/java/org/junit/Rule.java","d6ccf5b0fa4e0d62eac42425a593b870af1247bd","Tue, 11 Jan 2011 20:28:05 -0800","Kevin Cooney","Merge branch 'master' into abstract-test-rule"
"./src/main/java/org/junit/Rule.java","9d8bb069f68e2194db742981972c8930381b62c2","Tue, 11 Jan 2011 15:56:46 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/Rule.java","7f6173aa593b07856c1ca73ffaf87ff10ea15d4c","Fri, 7 Jan 2011 17:44:42 -0800","Kevin Cooney","Revert "Make TestRule an abstract class. Specify target of the rule annotations.""
"./src/main/java/org/junit/Rule.java","e7a0111ce26bbce9c81f471ff925653fe0ead70d","Fri, 7 Jan 2011 13:35:20 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/Rule.java","5f25ca318bc2b35ecf8526c08a1e3b3e17d375da","Fri, 7 Jan 2011 13:03:18 -0500","David Saff","Fix bad javadoc and bad release notes"
"./src/main/java/org/junit/Rule.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/Rule.java","8d26b450670647c847aa0ba1dd47a9c54865c63d","Tue, 28 Dec 2010 09:46:14 -0500","David Saff","further documentation cleanup, especially around TestRule"
"./src/main/java/org/junit/Rule.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/Rule.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/package-info.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/Result.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/main/java/org/junit/runner/Result.java","5a65d17014d44850d4e19ac3cdd667985a00e1c5","Wed, 7 Nov 2012 03:20:02 +0100","Tibor Digana","Treatment Of Long Variables and thread-safe constructor for List"
"./src/main/java/org/junit/runner/Result.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Result.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Result.java","4311a62451755c3bb0a2c9c8cb737bda9d09d4c7","Fri, 25 May 2012 12:45:01 +0200","Matthew Farwell","Fixes #295 clarify javadoc for Result"
"./src/main/java/org/junit/runner/Result.java","b4fc7138cbf62c471ab5526d86a89757acffd755","Sat, 1 May 2010 21:17:32 +1000","Rob Dawson","Implemented serializable on Description, Result and failure, to enable their use in RMI, as per http://github.com/KentBeck/junit/issues/issue/101."
"./src/main/java/org/junit/runner/Result.java","81b50e9f3bdb66543d07e7349026bd3b447f433e","Tue, 16 Nov 2010 10:18:17 -0500","David Saff","TODO cleanup for 4.9 lead-up"
"./src/main/java/org/junit/runner/Result.java","f8ee06baeb1ffa935c14c80aef5c5e6d28faefbd","Mon, 16 Nov 2009 23:24:20 -0500","David Saff","Our own cleanup"
"./src/main/java/org/junit/runner/Result.java","28d398d01c7a294ca9db34b90e2b1e3c874a8bc0","Mon, 5 Oct 2009 12:17:49 +0200","Kristian Rosenvold","Readed concurrency patch because I had messed up"
"./src/main/java/org/junit/runner/Result.java","b0c9945e21e66efcc947b3859f947185a87c59a9","Mon, 9 Feb 2009 23:17:49 -0500","David Saff","Removed misguided fIgnoredDuringRun flag"
"./src/main/java/org/junit/runner/Result.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/main/java/org/junit/runner/Result.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/runner/Result.java","af9634a3656bcd9c3988692c32381d0772077584","Thu, 10 Jan 2008 04:59:22 +0000","dsaff","Organized classes and methods for reporting ignored and invalid tests"
"./src/main/java/org/junit/runner/Result.java","497ebf11c284bcc2b32eecc4a063589b4f17d250","Thu, 10 Jan 2008 04:26:23 +0000","dsaff","Rename testFailedAssumption to testInvalidAssumption, and update documentation"
"./src/main/java/org/junit/runner/Result.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/main/java/org/junit/runner/Result.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/runner/Result.java","77ecd2119d3124b72935038effffadf7b98eccd9","Fri, 7 Dec 2007 16:36:33 +0000","dsaff","Properly handles ignore notifications from inside a started/ended block"
"./src/main/java/org/junit/runner/Result.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/RunWith.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/RunWith.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/RunWith.java","2e63af604c9487b9e8acbe002cf9a27230d1d7a0","Fri, 28 Aug 2009 15:24:22 +0800","alanharder","Fix @SuiteClasses example in javadoc"
"./src/main/java/org/junit/runner/RunWith.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/JUnitCore.java","5a439ed68829d8d839ef21268656e1c7041adc8e","Mon, 29 Jul 2013 20:54:19 +0200","Stefan Birkner","Fix JavaDoc."
"./src/main/java/org/junit/runner/JUnitCore.java","fc2d506725525f81ba61c1cd1bd830d7cf246b36","Mon, 29 Jul 2013 20:28:45 +0200","Stefan Birkner","Merge main(...) and runMainAndExit(...)."
"./src/main/java/org/junit/runner/JUnitCore.java","b026c088d800013fa73ffb9647c13d3a87cdf55d","Mon, 27 May 2013 11:01:55 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/runner/JUnitCore.java","fa5df4e972db64249046b789b3dc730657f11c58","Mon, 27 May 2013 09:36:07 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/runner/JUnitCore.java","56193048f411846a58c0e0377a5f1ccfecd3d2f9","Mon, 1 Apr 2013 14:53:38 -0700","Noel Yap","Command parsing errors internalized such that JUnitCore doesn't have to know about them."
"./src/main/java/org/junit/runner/JUnitCore.java","74cab2dc9b8c32482d2c86a66a0dd9318930b4bc","Mon, 18 Mar 2013 09:02:55 -0700","Noel Yap","crlf fixed."
"./src/main/java/org/junit/runner/JUnitCore.java","15c6048229bd16c4bfdd80b23f37357a58226d20","Fri, 15 Mar 2013 16:26:32 -0700","Noel Yap","More tests added."
"./src/main/java/org/junit/runner/JUnitCore.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/runner/JUnitCore.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/runner/JUnitCore.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/runner/JUnitCore.java","196c4ed79cbaca37709643b54913b361b677ae04","Thu, 28 Feb 2013 15:43:28 -0800","Noel Yap","--filter option implemented."
"./src/main/java/org/junit/runner/JUnitCore.java","e81be4536f5156b105fff4b7328fc3e4e7a24931","Sat, 5 Jan 2013 10:40:59 -0800","Kevin Cooney","Fix rawtype compiler warnings found when compiling with JDK7"
"./src/main/java/org/junit/runner/JUnitCore.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/JUnitCore.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/JUnitCore.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/main/java/org/junit/runner/JUnitCore.java","143c33485395a64b795da13ca1e74897666d5df4","Wed, 28 Sep 2011 01:49:21 +0200","Stefan Birkner","Removed explicit constructor of JUnitCore"
"./src/main/java/org/junit/runner/JUnitCore.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/JUnitCore.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/runner/JUnitCore.java","cb1d4dfd390718002349f2cbb456ec9ea769ff2b","Tue, 30 Jun 2009 22:30:54 -0400","David Saff","TODO cleanup"
"./src/main/java/org/junit/runner/JUnitCore.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/main/java/org/junit/runner/JUnitCore.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runner/JUnitCore.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/runner/JUnitCore.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/main/java/org/junit/runner/JUnitCore.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/main/java/org/junit/runner/JUnitCore.java","fab8f0da7e35f0436b80bf5cfe799882b2cb4db5","Tue, 28 Oct 2008 20:03:43 +0000","kbeck","Eclipse isn't quite calling Max just yet. Keep sinning until it does."
"./src/main/java/org/junit/runner/JUnitCore.java","df48b66e73c740acb15f065eb7a4bad433930891","Tue, 28 Oct 2008 19:50:31 +0000","kbeck","AllTests passes, but Eclipse doesn't cal JUnitCore, so first attempt at dogfooding failed."
"./src/main/java/org/junit/runner/JUnitCore.java","ce7bda3346278aab6ccebedcd5b8c8d4ab27ba02","Tue, 28 Oct 2008 19:17:15 +0000","kbeck","Persistence for MaxCore"
"./src/main/java/org/junit/runner/JUnitCore.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/main/java/org/junit/runner/JUnitCore.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/main/java/org/junit/runner/JUnitCore.java","c732aa178a822671d3de88e5ece05f9bf464172b","Thu, 10 Jan 2008 04:52:51 +0000","dsaff","Remove unnecessary code, and document Suite constructors"
"./src/main/java/org/junit/runner/JUnitCore.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/FilterFactory.java","fa5df4e972db64249046b789b3dc730657f11c58","Mon, 27 May 2013 09:36:07 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactory.java","c85a267605d4484121afeccef972a7266481ee7c","Thu, 2 May 2013 09:06:44 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactory.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/main/java/org/junit/runner/FilterFactory.java","114025fce0f28c5d7daa2204c7b91537c62f9f09","Wed, 27 Mar 2013 15:41:13 -0700","Noel Yap","public keyword removed from methods of interface."
"./src/main/java/org/junit/runner/FilterFactory.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/main/java/org/junit/runner/FilterFactory.java","40b8761099da900ad219fe9b06060cda1e212f83","Thu, 21 Mar 2013 13:44:27 -0700","Noel Yap","JavaDoc added."
"./src/main/java/org/junit/runner/FilterFactory.java","9d9899bce3506e7d87ebc6352a3cf3d25ea20f54","Thu, 21 Mar 2013 09:35:25 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactory.java","5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee","Wed, 20 Mar 2013 15:04:26 -0700","Noel Yap","API simplified. FilterFactory.parseArgs() removed. FilterFactoryParams made final."
"./src/main/java/org/junit/runner/FilterFactory.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/runner/FilterFactory.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/runner/FilterFactory.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/runner/FilterFactory.java","196c4ed79cbaca37709643b54913b361b677ae04","Thu, 28 Feb 2013 15:43:28 -0800","Noel Yap","--filter option implemented."
"./src/main/java/org/junit/runner/Computer.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Computer.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Computer.java","23ffc6baf5768057e366e183e53f4dfa86fbb005","Mon, 20 Jul 2009 23:35:01 -0400","David Saff","Updated version to RC1"
"./src/main/java/org/junit/runner/Computer.java","cc24890c002286ca583518c471b16d143a69a62a","Mon, 20 Jul 2009 22:23:33 -0400","David Saff","org.junit.runner is javadoced"
"./src/main/java/org/junit/runner/Computer.java","3d08ecc6a661f09520559637794c9a161db90f3d","Mon, 4 May 2009 16:38:26 -0400","David Saff","Removed duplication in ParallelComputer.  Cure worse than disease?"
"./src/main/java/org/junit/runner/Computer.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/main/java/org/junit/runner/Computer.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/main/java/org/junit/runner/Request.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/runner/Request.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Request.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Request.java","cb1d4dfd390718002349f2cbb456ec9ea769ff2b","Tue, 30 Jun 2009 22:30:54 -0400","David Saff","TODO cleanup"
"./src/main/java/org/junit/runner/Request.java","3d08ecc6a661f09520559637794c9a161db90f3d","Mon, 4 May 2009 16:38:26 -0400","David Saff","Removed duplication in ParallelComputer.  Cure worse than disease?"
"./src/main/java/org/junit/runner/Request.java","f3c211455b9e09be36e4bf7ccc499fbdd35a527a","Tue, 10 Mar 2009 10:44:22 -0400","David Saff","Finished release notes, I think"
"./src/main/java/org/junit/runner/Request.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runner/Request.java","fa6483264ce2530585b374c276c2266d0d0c4ef0","Thu, 13 Nov 2008 19:32:26 +0000","kbeck","closing in on 3.8 multiple run defect"
"./src/main/java/org/junit/runner/Request.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/main/java/org/junit/runner/Request.java","fab8f0da7e35f0436b80bf5cfe799882b2cb4db5","Tue, 28 Oct 2008 20:03:43 +0000","kbeck","Eclipse isn't quite calling Max just yet. Keep sinning until it does."
"./src/main/java/org/junit/runner/Request.java","a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071","Fri, 17 Oct 2008 22:35:23 +0000","kbeck","Clean up parallel execution naming."
"./src/main/java/org/junit/runner/Request.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/main/java/org/junit/runner/Request.java","095d3f8df0708f98d41f5894a892388b6985c44f","Thu, 31 Jul 2008 14:20:56 +0000","dsaff","Validation of constructors that can take parameters, commenting about an exception that should never occur"
"./src/main/java/org/junit/runner/Request.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/runner/Request.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/runner/Request.java","f691c8f29653e75a8bac5e7bec1861e948966978","Tue, 3 Jun 2008 17:14:15 +0000","dsaff","Javadocs for three more classes"
"./src/main/java/org/junit/runner/Request.java","ae725a017f8193955719e373352caa20278ddee4","Mon, 12 May 2008 15:46:26 +0000","dsaff","Javadoc cleanup"
"./src/main/java/org/junit/runner/Request.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/runner/Request.java","c732aa178a822671d3de88e5ece05f9bf464172b","Thu, 10 Jan 2008 04:52:51 +0000","dsaff","Remove unnecessary code, and document Suite constructors"
"./src/main/java/org/junit/runner/Request.java","d148bce8682505082a3cc634acbd36ac13a10c9a","Thu, 10 Jan 2008 04:12:53 +0000","dsaff","A SuiteBuilder can be explicitly passed to a Runner class that needs one in its constructor.  This eliminates the ugly global constant SuiteBuilder in Suite, and breaks the cyclic dependency between runners and requests"
"./src/main/java/org/junit/runner/Request.java","7ceaea00ee1af6168d737b785460a803d6f3c50c","Thu, 13 Dec 2007 07:57:28 +0000","dsaff","Remove some anemic Request implementations"
"./src/main/java/org/junit/runner/Request.java","5e4f8e7fb82919d992887fca1741bb04ef1c8f4a","Thu, 13 Dec 2007 07:43:13 +0000","dsaff","New Suite implementation makes ClassesRequest crazy simple"
"./src/main/java/org/junit/runner/Request.java","75f789242bd1859cf6798c3c49f45a9216ff553f","Fri, 7 Dec 2007 16:55:10 +0000","dsaff","Removed nascent category implementation"
"./src/main/java/org/junit/runner/Request.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/Runner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Runner.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Runner.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/Runner.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/runner/Runner.java","c3873cf7b17abba564374522af2bdc02abcc509d","Wed, 23 Dec 2009 13:40:13 -0500","David Saff","Max uses Plan rather than Description now"
"./src/main/java/org/junit/runner/Runner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/StoppedByUserException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/notification/StoppedByUserException.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/notification/StoppedByUserException.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/Failure.java","8a6ada28b1b763d1eecb009716e8c75660271565","Wed, 19 Feb 2014 00:48:14 +0700","Vladislav Bauer","Remove unnecessary usage of StringBuilder class (Java compiler will do it)"
"./src/main/java/org/junit/runner/notification/Failure.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/main/java/org/junit/runner/notification/Failure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/notification/Failure.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/notification/Failure.java","b4fc7138cbf62c471ab5526d86a89757acffd755","Sat, 1 May 2010 21:17:32 +1000","Rob Dawson","Implemented serializable on Description, Result and failure, to enable their use in RMI, as per http://github.com/KentBeck/junit/issues/issue/101."
"./src/main/java/org/junit/runner/notification/Failure.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/runner/notification/Failure.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/main/java/org/junit/runner/notification/Failure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/RunListener.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/runner/notification/RunListener.java","bf985739143186aa34729a16c50e2db71ab9c741","Thu, 7 Mar 2013 11:55:14 -0500","Dustin Lam","Fix more inconsistencies in javadocs."
"./src/main/java/org/junit/runner/notification/RunListener.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/main/java/org/junit/runner/notification/RunListener.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/notification/RunListener.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/notification/RunListener.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/notification/RunListener.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/runner/notification/RunListener.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/main/java/org/junit/runner/notification/RunListener.java","b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c","Wed, 7 May 2008 00:32:09 +0000","kbeck","Cleaned up javadoc and ant build problems."
"./src/main/java/org/junit/runner/notification/RunListener.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/runner/notification/RunListener.java","497ebf11c284bcc2b32eecc4a063589b4f17d250","Thu, 10 Jan 2008 04:26:23 +0000","dsaff","Rename testFailedAssumption to testInvalidAssumption, and update documentation"
"./src/main/java/org/junit/runner/notification/RunListener.java","1fb24143dc38d0b00f7e7b13b23e6619cc216f9b","Sun, 30 Dec 2007 22:02:05 +0000","dsaff","Assumption failures and ignore are different events"
"./src/main/java/org/junit/runner/notification/RunListener.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/runner/notification/RunListener.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/RunNotifier.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","e0726d382256f25c0ce981cbe4f55a2b938742d0","Wed, 7 Aug 2013 12:47:31 +0200","Stefan Birkner","Simplify JavaDoc of RunNotifier.fireTestFinished(...)."
"./src/main/java/org/junit/runner/notification/RunNotifier.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/main/java/org/junit/runner/notification/RunNotifier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","7b47d564b120c92855e9d64536a6c17dc742a4c4","Thu, 12 Apr 2012 12:05:27 -0700","David Saff","Merge pull request #411 from kcooney/please-stop-threadsafe"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","6d551f321d7bdcdafc2acbe0b5a3988bdc91b10f","Mon, 2 Apr 2012 23:08:57 -0700","Kevin Cooney","RunNotifier.pleaseStop() is now thread-safe"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","0ce06206263ed060bd0ede049c1713286c2487ea","Sat, 10 Mar 2012 02:05:14 +0100","Stefan Birkner","Don't remove listeners, which throw exceptions (fixes #209 and #395)"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","f8ee06baeb1ffa935c14c80aef5c5e6d28faefbd","Mon, 16 Nov 2009 23:24:20 -0500","David Saff","Our own cleanup"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","28d398d01c7a294ca9db34b90e2b1e3c874a8bc0","Mon, 5 Oct 2009 12:17:49 +0200","Kristian Rosenvold","Readed concurrency patch because I had messed up"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/main/java/org/junit/runner/notification/RunNotifier.java","65ff7563cc41bc7158d05e69ea0e1ec7bc0f6bd5","Mon, 9 Jun 2008 15:19:20 +0000","dsaff","Finishing javadoc for org.junit.runner.*"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","497ebf11c284bcc2b32eecc4a063589b4f17d250","Thu, 10 Jan 2008 04:26:23 +0000","dsaff","Rename testFailedAssumption to testInvalidAssumption, and update documentation"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","1fb24143dc38d0b00f7e7b13b23e6619cc216f9b","Sun, 30 Dec 2007 22:02:05 +0000","dsaff","Assumption failures and ignore are different events"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","65e9f226760647823a2d4b08bc4d2317ab62fc7d","Mon, 10 Dec 2007 18:57:12 +0000","dsaff","Added TODOs to finish 4.5"
"./src/main/java/org/junit/runner/notification/RunNotifier.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/notification/SynchronizedRunListener.java","72af03c49fdad5f10e36c7eb4e7045feb971d253","Wed, 6 Mar 2013 07:33:22 -0800","David Saff","Make RunNotifier code concurrent."
"./src/main/java/org/junit/runner/FilterFactories.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactories.java","c85a267605d4484121afeccef972a7266481ee7c","Thu, 2 May 2013 09:06:44 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactories.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/main/java/org/junit/runner/FilterFactories.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/main/java/org/junit/runner/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/Describable.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Describable.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Describable.java","1c1a6f8020c615c9d723f79a8405e57f1c66ea1e","Mon, 11 Aug 2008 20:08:18 +0000","dsaff","Tagged old version as 4.5.  Docs now say 4.6, and doc'ed a few missing classes"
"./src/main/java/org/junit/runner/Describable.java","f691c8f29653e75a8bac5e7bec1861e948966978","Tue, 3 Jun 2008 17:14:15 +0000","dsaff","Javadocs for three more classes"
"./src/main/java/org/junit/runner/Describable.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/Filterable.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/manipulation/Filterable.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/manipulation/Filterable.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/Filter.java","039329fa41a35b9c313cdcdd6ec868c9a920dd5a","Fri, 21 Feb 2014 21:35:50 +0700","Vladislav Bauer","Close possibility to make reassignment for some constant-fields"
"./src/main/java/org/junit/runner/manipulation/Filter.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/manipulation/Filter.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/manipulation/Filter.java","a4c5380ffe636edc0acbab144080adbc709d668c","Mon, 30 May 2011 20:28:12 -0700","Kevin Cooney","Optimize Filter.intersect() for common cases - ALL.intersect(filter) - filter.intersect(ALL) - filter.intersect(filter)"
"./src/main/java/org/junit/runner/manipulation/Filter.java","669bb577583f2edd8cd65008a7c9ac19ebc350ea","Fri, 15 Apr 2011 13:35:45 -0400","David Saff","Fixes issue #39, by having multiple calls to ParentRunner.filter result in the intersection of filters, rather than just the last one used."
"./src/main/java/org/junit/runner/manipulation/Filter.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/manipulation/Filter.java","02fc1f509a670de3632417bbf33168989bfcf872","Tue, 5 Jan 2010 11:51:45 -0500","David Saff","merged with master"
"./src/main/java/org/junit/runner/manipulation/Filter.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/runner/manipulation/Filter.java","2f9b53dbecad010dbb7e7cfff3a11476b7d2208a","Mon, 21 Dec 2009 22:30:10 -0500","David Saff","Simplify Filter implementations"
"./src/main/java/org/junit/runner/manipulation/Filter.java","7cd277620b4c888ae4101bb3f4768af83b85313a","Fri, 18 Dec 2009 09:50:45 -0500","David Saff","Better documentation of Filter method, which allows a more succinct definition of ParentRunner"
"./src/main/java/org/junit/runner/manipulation/Filter.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/runner/manipulation/Filter.java","f3c211455b9e09be36e4bf7ccc499fbdd35a527a","Tue, 10 Mar 2009 10:44:22 -0400","David Saff","Finished release notes, I think"
"./src/main/java/org/junit/runner/manipulation/Filter.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runner/manipulation/Filter.java","fa6483264ce2530585b374c276c2266d0d0c4ef0","Thu, 13 Nov 2008 19:32:26 +0000","kbeck","closing in on 3.8 multiple run defect"
"./src/main/java/org/junit/runner/manipulation/Filter.java","42beed3ad166a9cceefc59f6c79a16844cae0d02","Mon, 10 Dec 2007 18:38:41 +0000","dsaff","ParentRunner handles filtering and sorting for all runners, now including CompositeRunner"
"./src/main/java/org/junit/runner/manipulation/Filter.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/runner/manipulation/Filter.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/Sortable.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/manipulation/Sortable.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/manipulation/Sortable.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/NoTestsRemainException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/manipulation/NoTestsRemainException.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/manipulation/NoTestsRemainException.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/manipulation/Sorter.java","736c9226f2d963b439f38e4ad6074c4ed1dac5df","Fri, 4 Jan 2013 23:43:10 +0100","Tibor Digana","Sorter#NULL seems to be a constant"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","82169027cce65df0e48f1b0824f6aad308ea8f13","Tue, 7 Jul 2009 23:34:31 -0400","David Saff","Fix javadoc warnings"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","8e3f361443ddf8bca21c3db661c75d374fe78dba","Wed, 16 Jul 2008 00:21:15 +0000","kbeck","Refactored to eliminate Notifier and its subclasses. You don't pull your weight around here and you're history."
"./src/main/java/org/junit/runner/manipulation/Sorter.java","d8b6eb74e0e3466d66c9ff75e55f087c09a959b1","Thu, 10 Jul 2008 01:02:06 +0000","kbeck","Cleaned up ParentRunner in search of the elusive filter bug"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","42beed3ad166a9cceefc59f6c79a16844cae0d02","Mon, 10 Dec 2007 18:38:41 +0000","dsaff","ParentRunner handles filtering and sorting for all runners, now including CompositeRunner"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/runner/manipulation/Sorter.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","ae1fc256c8a56f0bd4ad88acd1190503002726f7","Thu, 2 May 2013 09:56:19 -0700","Noel Yap","Javadoc removed. Comments to be created by @kcooney."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","b0c0aafae2f3008c27ba06babd2b2dec15af53e8","Tue, 30 Apr 2013 09:27:16 -0700","Noel Yap","Further changes due to code review from @kcooney."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","40b8761099da900ad219fe9b06060cda1e212f83","Thu, 21 Mar 2013 13:44:27 -0700","Noel Yap","JavaDoc added."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee","Wed, 20 Mar 2013 15:04:26 -0700","Noel Yap","API simplified. FilterFactory.parseArgs() removed. FilterFactoryParams made final."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/runner/FilterFactoryParams.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/runner/Description.java","96af9a2a520a40404971968ee14a183d0aed1c4b","Thu, 18 Apr 2013 22:49:21 +0200","Tibor Digana","Description#getChildren() JavaDoc"
"./src/main/java/org/junit/runner/Description.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/runner/Description.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/runner/Description.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/runner/Description.java","e8f86f3e2660804adca60d739e5794862ce01c02","Thu, 6 Sep 2012 17:17:49 -0400","Jesse Glick","Avoiding use of return value of assignment operator."
"./src/main/java/org/junit/runner/Description.java","390d5e365ab47c770c36cbee45f282d5a0d62f26","Thu, 6 Sep 2012 13:45:00 -0400","Jesse Glick","Make getClassName more reliable when fTestClass defined."
"./src/main/java/org/junit/runner/Description.java","23e6e92b774e1e3910acc6a903293972bc562500","Thu, 6 Sep 2012 10:02:33 -0400","Jesse Glick","Reorder assignments to match order of parameters."
"./src/main/java/org/junit/runner/Description.java","785c7859cd87dc5cb3872fef476ce2f86c9259dd","Thu, 6 Sep 2012 09:57:55 -0400","Jesse Glick","https://github.com/KentBeck/junit/pull/498 review comments."
"./src/main/java/org/junit/runner/Description.java","8134371705a43fa2b2a8913678d4336d867f6647","Wed, 5 Sep 2012 20:36:30 -0400","Jesse Glick","Description.getTestClass() did not work reliably. Was assuming that the ClassLoader used for JUnit could also load test classes. While this may be true in a simple test runner based on a flat classpath, it is not true in all test runners. When we are given a Class object, keep it—do not try to reconstruct it from its name alone."
"./src/main/java/org/junit/runner/Description.java","09f3e35b7f006006d44de0daccd1b4cf2c500be1","Fri, 10 Aug 2012 09:21:42 +0200","Petter Måhlén","improved the javadoc description of the added factory method"
"./src/main/java/org/junit/runner/Description.java","303d2e64aa53a6563e57ecb3d1a6e84bdcfb28c3","Fri, 3 Aug 2012 10:11:50 +0200","Petter Måhlén","re-added createTestDescription(Class, String), and fixed javadoc comment that had ended up in the wrong place"
"./src/main/java/org/junit/runner/Description.java","cfeb6042db521ba752ab379b2340ae6c79005986","Thu, 2 Aug 2012 10:08:00 +0200","Petter Måhlén","reformatted a comment as per code review"
"./src/main/java/org/junit/runner/Description.java","2e699926f4e8c79407338e5973ec198bd3844212","Fri, 15 Jun 2012 14:51:13 +0200","Petter Måhlén","changed back to using Serializable as the necessary Gherkin change has been made"
"./src/main/java/org/junit/runner/Description.java","accece2b35f804f86f47ff7d6a76cdb296b76e34","Fri, 15 Jun 2012 14:28:30 +0200","Petter Måhlén","Merge remote-tracking branch 'kentbeck/master'"
"./src/main/java/org/junit/runner/Description.java","14f9868962aee5bcba8a7595287be1d5fed54b7d","Mon, 4 Jun 2012 14:35:20 +0200","Petter Måhlén","cucumber-jvm issue #322, added a new Description factory method and temporarily changed from Serializable back to Object for the unique id; this needs a change to Gherkin"
"./src/main/java/org/junit/runner/Description.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/runner/Description.java","3637f328439c9c8ab2d165cbf328fb131f8716a2","Mon, 23 Apr 2012 21:58:19 +0100","Aslak Hellesøy","Making sure uniqueId is Serializable in order to respect Description's Serializable contract"
"./src/main/java/org/junit/runner/Description.java","24f9b5223c2801a5cba0611e447e66677069b837","Thu, 22 Mar 2012 11:51:45 +0000","Aslak Hellesøy","Allow creation of Description with a unique id. Needed for Cucumber-JVM."
"./src/main/java/org/junit/runner/Description.java","b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9","Mon, 5 Mar 2012 13:52:06 -0800","David Saff","Merge pull request #362 from nkeywal/eb307fa6f37ac8ec695b2f556e543969503418f5"
"./src/main/java/org/junit/runner/Description.java","7944e8f8afbeaff17d337304df52dac227034423","Mon, 28 Nov 2011 22:23:18 +0100","Stefan Birkner","Improved Description class."
"./src/main/java/org/junit/runner/Description.java","eb307fa6f37ac8ec695b2f556e543969503418f5","Fri, 11 Nov 2011 03:51:23 -0800","N.Keywal","Fix for #359"
"./src/main/java/org/junit/runner/Description.java","b4fc7138cbf62c471ab5526d86a89757acffd755","Sat, 1 May 2010 21:17:32 +1000","Rob Dawson","Implemented serializable on Description, Result and failure, to enable their use in RMI, as per http://github.com/KentBeck/junit/issues/issue/101."
"./src/main/java/org/junit/runner/Description.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/main/java/org/junit/runner/Description.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/runner/Description.java","4de916220b9e70d08eccf7e7e292fe9e54157e92","Tue, 2 Feb 2010 23:35:20 -0500","David Saff","Started on a new API for categories (and filters in general)"
"./src/main/java/org/junit/runner/Description.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/runner/Description.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/runner/Description.java","c503e40d9ec79ba76b69dd31d7dd32648fa13cf2","Mon, 4 Jan 2010 22:40:54 -0500","David Saff","Deleted huge time-tripling test, MaxCore uses Plan for recursive descent"
"./src/main/java/org/junit/runner/Description.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/runner/Description.java","d3e86b059db787af5c0d58ddf3f69af5b42865b8","Thu, 17 Dec 2009 23:59:38 -0500","David Saff","About to do surgery on ParentRunner"
"./src/main/java/org/junit/runner/Description.java","cb1d4dfd390718002349f2cbb456ec9ea769ff2b","Tue, 30 Jun 2009 22:30:54 -0400","David Saff","TODO cleanup"
"./src/main/java/org/junit/runner/Description.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/main/java/org/junit/runner/Description.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/runner/Description.java","90bf3119a6326671cc467386036302cc6040f752","Sat, 20 Dec 2008 15:36:48 +0000","kbeck","Description seems to be heading towards Composite. Added "getTestName""
"./src/main/java/org/junit/runner/Description.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/runner/Description.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/runner/Description.java","65ff7563cc41bc7158d05e69ea0e1ec7bc0f6bd5","Mon, 9 Jun 2008 15:19:20 +0000","dsaff","Finishing javadoc for org.junit.runner.*"
"./src/main/java/org/junit/runner/Description.java","f691c8f29653e75a8bac5e7bec1861e948966978","Tue, 3 Jun 2008 17:14:15 +0000","dsaff","Javadocs for three more classes"
"./src/main/java/org/junit/runner/Description.java","75f789242bd1859cf6798c3c49f45a9216ff553f","Fri, 7 Dec 2007 16:55:10 +0000","dsaff","Removed nascent category implementation"
"./src/main/java/org/junit/runner/Description.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/runner/JUnitCommandLineParseResult.java","07447b5f98989e4456be8ee8acd01cfb3d20b8c0","Sun, 6 Apr 2014 21:17:18 +0400","Brazhnikov","Small fixes, mainly in throws signatures"
"./src/main/java/org/junit/runner/JUnitCommandLineParseResult.java","b026c088d800013fa73ffb9647c13d3a87cdf55d","Mon, 27 May 2013 11:01:55 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/BeforeClass.java","e203f4bef50e711b2fe974ad987a53debb304548","Fri, 28 Mar 2014 13:12:21 +0200","Alex Yursha","Fix a typo in BeforeClass"
"./src/main/java/org/junit/BeforeClass.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/BeforeClass.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/BeforeClass.java","de15ca2183f9955be7644c59d19aa3e4931a02d8","Mon, 17 Sep 2012 13:39:07 -0700","Arup Malakar","[Issue #394] [review incorporated] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/BeforeClass.java","6adb3ad892ed858849f4a80cd051441e8024226e","Fri, 14 Sep 2012 13:39:32 -0700","Arup Malakar","[Issue #394] Added javadoc mentioning special case when subclass overrides/shadows superclass methods"
"./src/main/java/org/junit/BeforeClass.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/BeforeClass.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/ClassRule.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/ClassRule.java","b1db2bb47b95aced929b7f801c9185045481da05","Wed, 24 Oct 2012 12:34:27 -0700","Kevin Cooney","Remove tabs"
"./src/main/java/org/junit/ClassRule.java","bb91daf8e0939d787ffb5a3eda05c2d626cd9851","Wed, 24 Oct 2012 12:31:00 -0700","Kevin Cooney","Fix formatting"
"./src/main/java/org/junit/ClassRule.java","dc44abf520611a8722e75ba1d32df6a28183e4e3","Wed, 24 Oct 2012 11:58:14 -0700","Kevin Cooney","Merge branch 'master' into undeprecate"
"./src/main/java/org/junit/ClassRule.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/ClassRule.java","bbacbd93334540a5054bb50488f662c3f81a9c00","Sat, 29 Sep 2012 12:12:35 -0700","Kevin Cooney","Remove @Deprecated from MethodRule and related methods."
"./src/main/java/org/junit/ClassRule.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/ClassRule.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/ClassRule.java","8a249206c730845fcb4a1efdee055f8509380808","Tue, 9 Aug 2011 23:00:11 +0200","Stefan Birkner","Fixed JavaDoc links."
"./src/main/java/org/junit/ClassRule.java","73c15ac3097078d2de1478dfecf4317a616346a3","Wed, 6 Jul 2011 21:55:37 +0200","Stefan Birkner","Fixes #254: replaced @Rule by @ClassRule"
"./src/main/java/org/junit/ClassRule.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/main/java/org/junit/ClassRule.java","d6ccf5b0fa4e0d62eac42425a593b870af1247bd","Tue, 11 Jan 2011 20:28:05 -0800","Kevin Cooney","Merge branch 'master' into abstract-test-rule"
"./src/main/java/org/junit/ClassRule.java","9d8bb069f68e2194db742981972c8930381b62c2","Tue, 11 Jan 2011 15:56:46 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/ClassRule.java","7f6173aa593b07856c1ca73ffaf87ff10ea15d4c","Fri, 7 Jan 2011 17:44:42 -0800","Kevin Cooney","Revert "Make TestRule an abstract class. Specify target of the rule annotations.""
"./src/main/java/org/junit/ClassRule.java","e7a0111ce26bbce9c81f471ff925653fe0ead70d","Fri, 7 Jan 2011 13:35:20 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/ClassRule.java","5f25ca318bc2b35ecf8526c08a1e3b3e17d375da","Fri, 7 Jan 2011 13:03:18 -0500","David Saff","Fix bad javadoc and bad release notes"
"./src/main/java/org/junit/ClassRule.java","19b0d51f397571ee8ab7810521718e555b520f4a","Fri, 7 Jan 2011 11:20:04 -0500","David Saff","Fixed a javadoc problem.  More remain."
"./src/main/java/org/junit/ClassRule.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/ClassRule.java","96da6a59e6f8186a8cba427acfb45639d47f3909","Mon, 3 Jan 2011 14:09:16 -0500","David Saff","Further documentation updates.  No obvious changes from 4.8.2 missing, now."
"./src/main/java/org/junit/ClassRule.java","b310cd56f1039389aa360fbf51c6349e7a8e1f02","Mon, 3 Jan 2011 13:33:50 -0500","David Saff","Update JUnit version, improve ClassRule javadoc, update release notes"
"./src/main/java/org/junit/ClassRule.java","8d26b450670647c847aa0ba1dd47a9c54865c63d","Tue, 28 Dec 2010 09:46:14 -0500","David Saff","further documentation cleanup, especially around TestRule"
"./src/main/java/org/junit/ClassRule.java","308768863b78f3a6345e25d7f9d35892c2de5a01","Tue, 9 Nov 2010 09:45:14 -0500","David Saff","Renamed TestRuleTestWatchman to TestWatcher, updated docs"
"./src/main/java/org/junit/ClassRule.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/ClassRule.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/main/java/org/junit/ClassRule.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","96cfed79612de559e454a1a91724a061e8615ae4","Tue, 8 Apr 2014 23:19:46 +0400","Alexander Jipa","fixes #177"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","fa5df4e972db64249046b789b3dc730657f11c58","Mon, 27 May 2013 09:36:07 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","c85a267605d4484121afeccef972a7266481ee7c","Thu, 2 May 2013 09:06:44 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","56193048f411846a58c0e0377a5f1ccfecd3d2f9","Mon, 1 Apr 2013 14:53:38 -0700","Noel Yap","Command parsing errors internalized such that JUnitCore doesn't have to know about them."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","432e3e27df0b072f3bab066cd33214913f4c7f32","Tue, 9 Sep 2008 20:46:02 +0000","kbeck","Run methods and classes in parallel"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","3dd6b9fca5ccbd02a4d1cb5c5b3c921e369662a0","Fri, 1 Aug 2008 15:28:05 +0000","dsaff","validation errors in JUnit4ClassRunner are again reported."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","94d454a32857d85e08600e38728418863478501c","Thu, 31 Jul 2008 13:59:26 +0000","dsaff","Remove bogus TODO"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","e07e59eb9d24f6e4fa85dd99f311c1feca6ea983","Wed, 30 Jul 2008 02:56:52 +0000","dsaff","ErrorReportingRunner is not a ParentRunner.  This means that all ParentRunners validate, for sure, during construction."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","65ff7563cc41bc7158d05e69ea0e1ec7bc0f6bd5","Mon, 9 Jun 2008 15:19:20 +0000","dsaff","Finishing javadoc for org.junit.runner.*"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","7ceaea00ee1af6168d737b785460a803d6f3c50c","Thu, 13 Dec 2007 07:57:28 +0000","dsaff","Remove some anemic Request implementations"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","5af049cac0c976c586d955607fa459aacb778d3c","Thu, 13 Dec 2007 07:43:48 +0000","dsaff","Remove unnecessary comments"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","9c8d59d9869280a698c3f3a119eb69f0e897c94b","Thu, 13 Dec 2007 06:35:44 +0000","dsaff","Remove CompositeRunner, which has nothing to add to Suite"
"./src/main/java/org/junit/internal/runners/ErrorReportingRunner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/MethodValidator.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/MethodValidator.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/MethodValidator.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/MethodRoadie.java","26c25f3dbf524f4efd90e97f41c6df10345e78a9","Wed, 25 Dec 2013 15:21:10 +0100","Andreas Skoog","Rename TestFailedOnTimeoutException -> TestTimedOutException"
"./src/main/java/org/junit/internal/runners/MethodRoadie.java","b645d2b5055f8eb96cf8511e15c3eb5edf5e4dc9","Fri, 29 Nov 2013 12:31:04 +0100","Andreas Skoog","Use TestFailedOnTimeoutException when test times out"
"./src/main/java/org/junit/internal/runners/MethodRoadie.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/MethodRoadie.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/MethodRoadie.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/FailedBefore.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/FailedBefore.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/FailedBefore.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","3a961b7fd1e7a85b5e293f9e32ea6ced3f361f69","Tue, 19 Aug 2008 18:54:34 +0000","dsaff","Indicate when deprecation is likely to end"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","6ff2381af213bf699e62244315debec66b373d81","Thu, 14 Feb 2008 21:37:51 +0000","kbeck","Found a final home for runBefores() and runAfters()"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","cde32fb62ad8f5a05d700ce3189e131fa51739cb","Mon, 21 Jan 2008 20:35:00 +0000","dsaff","Theories are a lot faster, by caching the @Before and @After methods and sharing them between all Theory method invocations."
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","5af049cac0c976c586d955607fa459aacb778d3c","Thu, 13 Dec 2007 07:43:48 +0000","dsaff","Remove unnecessary comments"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","44fabd25eb7d8c5291094b033007c32b7a1b8da2","Fri, 7 Dec 2007 19:06:00 +0000","dsaff","Reorganize ParentRunner and children"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","23415d78793163c399ec376bed6c72cc86d885e3","Fri, 7 Dec 2007 17:44:01 +0000","dsaff","Complete moving filtering and sorting to ParentRunner"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","3a791ec79fff66aebc332fe4e4cbf626e39bd3d3","Fri, 7 Dec 2007 16:54:31 +0000","dsaff","- Organize ParentRunner better"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/TestMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/TestMethod.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/TestMethod.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","eaa2799d6c25950b38f76efe05a17eed077e6776","Mon, 28 Oct 2013 10:36:01 -0700","David Saff","Merge pull request #723 from brettchabot/master"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","d56c7296efd21e517c2c5bead01021f8796b31a7","Wed, 21 Aug 2013 11:47:49 -0700","Brett Chabot","Properly handle case where filter removes all JUnit3 tests in suite."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","53e940c3a1eafc32996135025655d3c91d0dcf5e","Tue, 20 Aug 2013 15:16:21 -0700","David Saff","Merge pull request #716 from brettchabot/master"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","810536929044271a608e019255e87c756235bb97","Wed, 14 Aug 2013 18:25:20 -0700","Brett Chabot","Fix annotation collection from super classes of JUnit3 tests."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","5a6d47cac587286a8d5a1266bcded6ec67cd539f","Tue, 6 Aug 2013 22:35:40 +0200","Stefan Birkner","Clean up JavaDoc of JUnit38ClassRunner.getAnnotations(...)."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","e1bf14b4d5b7aecf4611fd400417359424121544","Mon, 8 Jul 2013 17:00:26 -0700","David Saff","Merge pull request #666 from Tibor17/junit.fix"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","c6e3d2cf121ce6e371bafefa59f216054167845b","Wed, 1 May 2013 19:06:57 -0700","Brett Chabot","Cleaned up whitespace in JUnit38ClassRunner. Added a unit test."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","0fa3f12d9b69cb8c97021507bce367be386be338","Tue, 2 Apr 2013 11:44:10 -0700","Brett Chabot","Collect annotations for JUnit3 tests."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","cb1d4dfd390718002349f2cbb456ec9ea769ff2b","Tue, 30 Jun 2009 22:30:54 -0400","David Saff","TODO cleanup"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","c7874453182cde8e7b38cf3ce356d16d3d1dcde8","Wed, 29 Apr 2009 14:19:36 -0700","KentBeck","Fixed error message for malformed JUnit 3.8 test."
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","b294a12beffb7952de6aef3198d47f7cd08486d7","Thu, 13 Nov 2008 19:30:29 +0000","kbeck","*** empty log message ***"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","8964b10541f840e559a3308a043b64a8c1f6af57","Mon, 10 Dec 2007 18:37:55 +0000","dsaff","Removed unnecessary SuppressWarnings"
"./src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/SuiteMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/SuiteMethod.java","58d1b6209b82451ff54f443bd265eef96135bca0","Fri, 28 Dec 2007 19:48:32 +0000","dsaff","Remove unnecessary @SuppressWarnings"
"./src/main/java/org/junit/internal/runners/SuiteMethod.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/ClassRoadie.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/internal/runners/ClassRoadie.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/ClassRoadie.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/ClassRoadie.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/statements/ExpectException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/ExpectException.java","ab51452ac565d286b7bbd5a13767253c317bb29f","Mon, 3 May 2010 22:23:59 -0400","dsaff","Fixes github#98: assumptions with expected exceptions"
"./src/main/java/org/junit/internal/runners/statements/ExpectException.java","d5af0e46c1cd912ef0932ce868517b1e8335531e","Mon, 1 Jun 2009 16:37:05 -0400","David Saff","ExpectedException drastically simplified"
"./src/main/java/org/junit/internal/runners/statements/ExpectException.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/ExpectException.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/statements/InvokeMethod.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/InvokeMethod.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/InvokeMethod.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/runners/statements/InvokeMethod.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/statements/RunBefores.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/RunBefores.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/internal/runners/statements/RunBefores.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/RunBefores.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/runners/statements/RunBefores.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","c52397d4d704a85499a17e9d3a2c1bcb8c5f0906","Mon, 14 Apr 2014 11:52:28 -0400","Mike Drob","fixes #875"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","26c25f3dbf524f4efd90e97f41c6df10345e78a9","Wed, 25 Dec 2013 15:21:10 +0100","Andreas Skoog","Rename TestFailedOnTimeoutException -> TestTimedOutException"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","9c5a2f28935a2d816ac14894d6c7cfb3c32a98f6","Wed, 25 Dec 2013 15:12:01 +0100","Andreas Skoog","Merge remote-tracking branch 'upstream/master'"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","619f4ff569542e0d03787bdb76ad3d4e3ec3e423","Fri, 29 Nov 2013 12:30:28 +0100","Andreas Skoog","Improvements after code review. Move Exception to non internal package and provide getters for timeout and time unit"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","dcc298cf98108fde395495e78ac4f28a9cdc496e","Thu, 28 Nov 2013 18:51:06 +0100","Andreas Skoog","Throw TestFailedOnTimeoutException instead of plain Exception on timeout. Fixes #771"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","c1895d120e68c17d6dd4378884e53be0cc351369","Fri, 15 Nov 2013 12:06:50 -0800","Adam Beneschan","changes to address kcooney's concerns about thread safety on issue #742"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","13ff0f993803b7df6d155e95495410e7290da732","Thu, 31 Oct 2013 13:24:26 -0700","Adam Beneschan","replaced use of Arrays.copyOf for Java 1.5 compatibility"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","dd395b49be740e7c57ffe06fc6db07625c1e1d26","Fri, 18 Oct 2013 19:02:19 -0700","Adam Beneschan","added note that feature is experimental"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","3e8e865039fe6531666afb860961d787065b589e","Fri, 11 Oct 2013 16:58:18 -0700","Adam Beneschan","Check for stuck threads now must be enabled in a Rule"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","35b428a24bdd2eddd9653189632896d4f5b1ce42","Thu, 3 Oct 2013 18:11:14 -0700","Adam Beneschan","style improvements"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","fba19ba73a93dcc2d18942b3cf4992ce010afdb2","Wed, 2 Oct 2013 10:32:27 -0700","Adam Beneschan","improvements suggested by dsaff, and added self-test"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","5ca9da987a7d4dc00e082aaf552cbd8ee8c7bd33","Mon, 30 Sep 2013 16:29:13 -0700","Adam Beneschan","improvements suggested by David Saff"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","1768d08d029dc3bf1ab88e26df0a9b40ae61227f","Tue, 24 Sep 2013 15:34:27 -0700","Adam Beneschan","fail on timeout displays stack of stuck thread (Issue #727)"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","85b7c26e63f851004ce20d4a00fbf1b46607ab0c","Sat, 30 Mar 2013 23:30:21 -0700","Kevin Cooney","Simplify FailOnTimeout by using FutureTask"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","78f5fa85b492353ad062f54d1f0ceec745537761","Tue, 11 Dec 2012 17:16:25 +0100","Tibor Digana","no #deleteOnExit, no inline comment, added space in comment"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","7783b6af52624957599680145471fd684ad1f47a","Tue, 11 Dec 2012 00:42:01 +0100","Tibor Digana","fRecordedStackTrace used by one thread -no volatile"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","71a912dc0e2450ec9c5fa277ab673f47408d8baf","Tue, 11 Dec 2012 00:33:29 +0100","Tibor Digana","why volatile and final"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","23715924c0442850b9c9cdc8404438501977745c","Tue, 11 Dec 2012 00:11:57 +0100","Tibor Digana","thread.setDaemon(true);//Let the process/application complete after timeout expired."
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","ec534ffac48977be6b7011e4e531b83a0a767704","Fri, 16 Nov 2012 21:52:13 +0100","Tibor Digana","A fix for semicolon."
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","794abc271d82fa48681657b41e35eabb420e5172","Fri, 16 Nov 2012 20:52:27 +0100","Tibor Digana","one tmp file per test, reasons for volatile and daemon thread"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","b28fe09d1a54955bed2e4db5352c14fae195a418","Thu, 15 Nov 2012 18:39:45 +0100","Tibor Digana","fixes for #544 and #545"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a","Tue, 13 Nov 2012 20:53:00 +0100","Tibor Digana","param=millis in old constructor, original units, added infinite loop test"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","544e5ba3a3034932879604b72fb6f8526d27eb50","Mon, 12 Nov 2012 23:33:29 +0100","Tibor Digana","forked from #450 and improved"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","f634102cf058ed5761b2e4ef66761e2f397b6160","Wed, 15 Feb 2012 21:27:20 +0100","Peter De Maeyer","Timeout exception contains the real cause of the timeout (#384)"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","1ad3a59952f3528914d1225d51bbb04adb62c22f","Tue, 9 Aug 2011 22:45:17 +0200","Stefan Birkner","Fixed FailOnTimeout class (issue #265)"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","480b98e7f1bce46382e47fc30db2ef1a98a58b66","Fri, 17 Apr 2009 15:27:26 -0400","David Saff","Holy cow, vanilla threads work"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","39545426e07dcb3bb3d71c930451514ba54c5999","Fri, 9 Sep 2011 01:17:39 +0200","Stefan Birkner","fixed issue #289 (removed useless code)"
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","11258fcfd07dd63754fbea374bbba59ea82bc685","Thu, 4 Jun 2009 00:52:28 -0400","David Saff","Added Verifier and ErrorCollector"
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/runners/statements/RunAfters.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/statements/Fail.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/statements/Fail.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/runners/statements/Fail.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/InitializationError.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/InitializationError.java","3a961b7fd1e7a85b5e293f9e32ea6ced3f361f69","Tue, 19 Aug 2008 18:54:34 +0000","dsaff","Indicate when deprecation is likely to end"
"./src/main/java/org/junit/internal/runners/InitializationError.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/runners/InitializationError.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","ca6d91f41d566b21b643b013e843732e1315652f","Thu, 31 Jul 2008 14:57:25 +0000","dsaff","Failing assumptions can be listened for."
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","1fb24143dc38d0b00f7e7b13b23e6619cc216f9b","Sun, 30 Dec 2007 22:02:05 +0000","dsaff","Assumption failures and ignore are different events"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","56ac86372fa1ff9b3840ffdbfd30106f10c203a5","Mon, 10 Dec 2007 18:39:11 +0000","dsaff","Added TODO about statically ignored tests"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","2a6d6365c593149da094d7512028a2d008ea6cff","Fri, 7 Dec 2007 19:05:27 +0000","dsaff","Use single-arg assumptionFailureException constructor to beautify reporting"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","647e9ff7881d796ea6b87472e3c1bd40e2e19c76","Fri, 7 Dec 2007 16:36:05 +0000","dsaff","Removed old TODO comment"
"./src/main/java/org/junit/internal/runners/model/EachTestNotifier.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/model/MultipleFailureException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/model/MultipleFailureException.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/internal/runners/model/MultipleFailureException.java","11258fcfd07dd63754fbea374bbba59ea82bc685","Thu, 4 Jun 2009 00:52:28 -0400","David Saff","Added Verifier and ErrorCollector"
"./src/main/java/org/junit/internal/runners/model/MultipleFailureException.java","5042f695491027730cca2918616399d869de3973","Fri, 25 Jan 2008 14:11:31 +0000","dsaff","By passing TestClass to AllMembersSupplier, we can reuse the annotation parsing already supplied, and improve performance"
"./src/main/java/org/junit/internal/runners/model/MultipleFailureException.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/model/ReflectiveCallable.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/model/ReflectiveCallable.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/runners/TestClass.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/TestClass.java","cb69050a45f1688ad8c6e817cc511cfa67401f63","Fri, 26 Aug 2011 13:13:27 -0400","Jesse Glick","Preditably sort (test) methods in a class. The JVM does not guarantee any order. Visible here as an occasional failure in ParentRunnerTest.useChildHarvester on JDK 7 prior to fix."
"./src/main/java/org/junit/internal/runners/TestClass.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/runners/TestClass.java","8c61443793e4c2e90a4056ee528c3880febb53d2","Thu, 26 Jun 2008 15:20:39 +0000","dsaff","Move deprecated classes back where they used to be."
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","56a03468f394f23a95f3a0cd2e80f2671963941d","Sat, 3 May 2014 09:17:38 +0200","ancosen","Fixes #880: Added new error message relative to static @Rule and @ClassRule"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403","Thu, 14 Nov 2013 18:11:13 +0100","Stefan Ferstl","Verify that all (base-) classes declaring @ClassRules are public - Add the new method getDeclaringClass() to FrameworkMember   - FrameworkMethod will return the class where the method is actually     declared   - FrameworkField will return the class where the field is actually     declared - Add validation logic to RuleFieldValidator - Add test for validation logic"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","b4f0afa639b42fa551fdcb26d9c1855ae4d778cf","Sun, 16 Oct 2011 14:18:05 +0200","Marc Philipp","@Rule fields/methods must not be static"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","faba199e389e3c977fc5573315790a5cde5f7611","Fri, 23 Sep 2011 20:52:33 +0200","Matthew Farwell","This is a fix for #83 support @Rule on methods Extend rules to support @Rule public MethodRule someRule() { return new SomeRule(); }"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java","a19e98f00e972333edd2bbbde8270612aa588c42","Thu, 28 Jul 2011 09:54:37 +0200","Stefan Birkner","moved RuleFieldValidator from org.junit.rules to org.junit.internal.runners.rules"
"./src/main/java/org/junit/internal/ExactComparisonCriteria.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/ExactComparisonCriteria.java","8088946a72634d8d6f91db157f4cbe9a2931d4ea","Mon, 15 Jun 2009 22:33:36 -0700","David Saff","Clean up TODOs in ComparisonCriteria and subclasses"
"./src/main/java/org/junit/internal/ExactComparisonCriteria.java","11f0abd09655be84d94d3013cf0c46f8239369e6","Thu, 30 Apr 2009 14:52:12 -0400","David Saff","Finishing the work of ComparisonCriteria"
"./src/main/java/org/junit/internal/AssumptionViolatedException.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/internal/AssumptionViolatedException.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/internal/AssumptionViolatedException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/AssumptionViolatedException.java","3bb48f0a58eb44f36b6e03538a7db05b6c6da335","Tue, 21 Aug 2012 18:15:02 +0200","Matthew Farwell","Fixes #355 Improve Assume to allow custom message"
"./src/main/java/org/junit/internal/AssumptionViolatedException.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java","a7c4d033c831765b5e651f2c7c4ce69c2b60ce4a","Fri, 20 Jul 2012 14:01:06 +0200","Marc Philipp","Extract matchers to separate classes (refactoring)"
"./src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java","a7c4d033c831765b5e651f2c7c4ce69c2b60ce4a","Fri, 20 Jul 2012 14:01:06 +0200","Marc Philipp","Extract matchers to separate classes (refactoring)"
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","5f2ecdacca8db679081ff6dede52cb0d8970d730","Tue, 31 Jan 2012 14:54:56 -0500","Jesse Glick","Using MethodSorter here too, just in case it matters."
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/main/java/org/junit/internal/matchers/TypeSafeMatcher.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java","a37fd9ac8b2afc54384fd32f470b54aa69dc620a","Fri, 20 Jul 2012 11:42:16 +0200","Marc Philipp","Rename withStacktrace() to isException()/isThrowable()"
"./src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/main/java/org/junit/internal/ArrayComparisonFailure.java","3189af007b26d74ca459f823d57ef77b9c1697b8","Mon, 3 Mar 2014 16:57:12 -0500","Paul Krause","Remove redundant field fCause"
"./src/main/java/org/junit/internal/ArrayComparisonFailure.java","8a6ada28b1b763d1eecb009716e8c75660271565","Wed, 19 Feb 2014 00:48:14 +0700","Vladislav Bauer","Remove unnecessary usage of StringBuilder class (Java compiler will do it)"
"./src/main/java/org/junit/internal/ArrayComparisonFailure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/ArrayComparisonFailure.java","98555e6c5b77b59017eeaa6b54f65c1717c16b72","Mon, 12 May 2008 15:48:00 +0000","dsaff","JavaDoc cleanup"
"./src/main/java/org/junit/internal/ArrayComparisonFailure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/Throwables.java","a2a0b1a6403cd049b18ffcab1cebca545aa52fe9","Fri, 13 Sep 2013 18:02:58 -0700","Kevin Cooney","Fix typo in Javadoc"
"./src/main/java/org/junit/internal/Throwables.java","cb818f191ea2b9fe563aa20c581b16f3f23b7c4c","Thu, 12 Sep 2013 22:01:56 -0700","Kevin Cooney","Change signature of MultipleFailureException.assertEmpty() to throw Exception."
"./src/main/java/org/junit/internal/Classes.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/main/java/org/junit/internal/RealSystem.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/RealSystem.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/main/java/org/junit/internal/RealSystem.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/requests/FilterRequest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/requests/FilterRequest.java","82169027cce65df0e48f1b0824f6aad308ea8f13","Tue, 7 Jul 2009 23:34:31 -0400","David Saff","Fix javadoc warnings"
"./src/main/java/org/junit/internal/requests/FilterRequest.java","7ceaea00ee1af6168d737b785460a803d6f3c50c","Thu, 13 Dec 2007 07:57:28 +0000","dsaff","Remove some anemic Request implementations"
"./src/main/java/org/junit/internal/requests/FilterRequest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/requests/ClassRequest.java","0ce71108da6f487d76c0f4dc46cde41e11dd3daa","Wed, 1 May 2013 23:11:59 +0200","Tibor Digana","requested improvements in ParentRunner, + DCL in ClassRequest"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","6faa0075887c8b51a46b347dab54bbd37ece362d","Thu, 18 Apr 2013 22:34:59 +0200","Tibor Digana","simplified ClassRequest"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","41540137ced4df4aaf0cee69ca43f5d95503c21d","Mon, 2 Apr 2012 23:48:28 -0700","Kevin Cooney","Make ClassRequest memoize the runner. Creating the runner can be an expensive operation. Other types of requests are written in such a way that the runner is already memoized."
"./src/main/java/org/junit/internal/requests/ClassRequest.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","d148bce8682505082a3cc634acbd36ac13a10c9a","Thu, 10 Jan 2008 04:12:53 +0000","dsaff","A SuiteBuilder can be explicitly passed to a Runner class that needs one in its constructor.  This eliminates the ugly global constant SuiteBuilder in Suite, and breaks the cyclic dependency between runners and requests"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","e37e11647893739777a7b4739822def1aa996ba3","Fri, 28 Dec 2007 19:48:09 +0000","dsaff","Added TODO to remove cyclic dependency"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","7ceaea00ee1af6168d737b785460a803d6f3c50c","Thu, 13 Dec 2007 07:57:28 +0000","dsaff","Remove some anemic Request implementations"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","9a5dfd996ab7007994fcf60752441835dbdbb5d0","Fri, 7 Dec 2007 16:34:18 +0000","dsaff","Moved InitializationError into proper package"
"./src/main/java/org/junit/internal/requests/ClassRequest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/requests/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/requests/SortingRequest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/requests/SortingRequest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/TextListener.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/TextListener.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/internal/TextListener.java","af9634a3656bcd9c3988692c32381d0772077584","Thu, 10 Jan 2008 04:59:22 +0000","dsaff","Organized classes and methods for reporting ignored and invalid tests"
"./src/main/java/org/junit/internal/TextListener.java","a916d4133c7e394130d7953da427aae9917ab92c","Thu, 10 Jan 2008 03:32:15 +0000","dsaff","Invalid assumptions, failed tests, and ignored tests now all print similarly"
"./src/main/java/org/junit/internal/TextListener.java","95bd62b2ffd80394d1a17e9078a4d79478423030","Thu, 13 Dec 2007 06:35:04 +0000","dsaff","Start separating the idea of failed assumptions from ignored tests"
"./src/main/java/org/junit/internal/TextListener.java","a7c07de664a4562c3ff171102729f06a5f572d9b","Fri, 7 Dec 2007 18:43:03 +0000","dsaff","Remove duplication between printing failures and ignorances"
"./src/main/java/org/junit/internal/TextListener.java","2b56dbb49ba6595e54baa0285b76ddaae35f0c33","Fri, 7 Dec 2007 16:33:31 +0000","dsaff","Moved Ignorance into proper package"
"./src/main/java/org/junit/internal/TextListener.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/builders/JUnit4Builder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/JUnit4Builder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/JUnit4Builder.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/internal/builders/JUnit4Builder.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/main/java/org/junit/internal/builders/JUnit4Builder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/JUnit3Builder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/JUnit3Builder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/JUnit3Builder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/NullBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/NullBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/NullBuilder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","00711f69af5f74d1a5cce573290847b78ce34cec","Sun, 9 Feb 2014 13:51:27 +0100","Stefan Bechtold"," #816: Support for hierarchical context hierarchies - RunWith annotation will be resolved along the hierarchy of non-static member classes."
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","e1bf14b4d5b7aecf4611fd400417359424121544","Mon, 8 Jul 2013 17:00:26 -0700","David Saff","Merge pull request #666 from Tibor17/junit.fix"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","3cd86b7018f2c57f10d671d007d08caa74463c09","Wed, 19 Jun 2013 23:45:36 +0200","Tibor Digana","Unnecessary array in varargs in AnnotatedBuildrer: Constructor#newInstance(Object ... initargs)"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","83a25d440d118b7d10779a884d35f31045949e27","Fri, 12 Apr 2013 01:11:44 +0200","Tibor Digana","Treatments for parallel execution"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/internal/builders/AnnotatedBuilder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/IgnoredClassRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/IgnoredClassRunner.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/SuiteMethodBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/SuiteMethodBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/SuiteMethodBuilder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/builders/IgnoredBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/builders/IgnoredBuilder.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/internal/builders/IgnoredBuilder.java","67e3edf20613b1278f4be05353b31b5129e21882","Wed, 19 Mar 2008 02:57:33 +0000","dsaff","Broke out runner construction into a list of RunnerBuilders"
"./src/main/java/org/junit/internal/JUnitSystem.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/JUnitSystem.java","917a88fad06ce108a596a8fdb4607b1a2fbb3f3e","Tue, 3 Jan 2012 22:49:19 +0100","Matthew Farwell","Added MainRunner. This removes the need for public methods in JUnitCore MainRunner installs a SecurityManager which traps the System.exit(), thereby removing the need to have runMainAndExit and runMain public in JUnitCore. MainRunner is only used in the tests of course."
"./src/main/java/org/junit/internal/JUnitSystem.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/internal/ComparisonCriteria.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/ComparisonCriteria.java","7aac4b19d359285041ccb51d575235339a1a8be0","Tue, 27 Oct 2009 08:52:06 -0400","David Saff","Fixed assertNull issue"
"./src/main/java/org/junit/internal/ComparisonCriteria.java","cc24890c002286ca583518c471b16d143a69a62a","Mon, 20 Jul 2009 22:23:33 -0400","David Saff","org.junit.runner is javadoced"
"./src/main/java/org/junit/internal/ComparisonCriteria.java","8088946a72634d8d6f91db157f4cbe9a2931d4ea","Mon, 15 Jun 2009 22:33:36 -0700","David Saff","Clean up TODOs in ComparisonCriteria and subclasses"
"./src/main/java/org/junit/internal/ComparisonCriteria.java","0dc3de7fbcf997ca8465ed9e7793a0b4f730121b","Mon, 4 May 2009 15:47:26 -0400","David Saff","arrayEquals is a better name than internalArrayEquals"
"./src/main/java/org/junit/internal/ComparisonCriteria.java","11f0abd09655be84d94d3013cf0c46f8239369e6","Thu, 30 Apr 2009 14:52:12 -0400","David Saff","Finishing the work of ComparisonCriteria"
"./src/main/java/org/junit/internal/MethodSorter.java","039329fa41a35b9c313cdcdd6ec868c9a920dd5a","Fri, 21 Feb 2014 21:35:50 +0700","Vladislav Bauer","Close possibility to make reassignment for some constant-fields"
"./src/main/java/org/junit/internal/MethodSorter.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/MethodSorter.java","8424e265a3f96bebb2ee4dbced7c3e3e128f91f5","Thu, 31 May 2012 09:09:24 -0400","Ian Beauregard","changes as suggested by kcooney"
"./src/main/java/org/junit/internal/MethodSorter.java","ec7fd69b48a677123c32a630d45518f3cfb0fce9","Wed, 30 May 2012 22:41:04 -0400","Ian Beauregard","NAME_ASCENDING comparator is now more clear, DEFAULT delegates to NAME_ASCENDING in case the hash codes are equal. no more private compare method"
"./src/main/java/org/junit/internal/MethodSorter.java","32330b13f2ded8603665264f8400ddf1f6dd969a","Wed, 30 May 2012 07:38:31 -0400","Ian Beauregard","make MethodSorter.NAME_ASCENDING a deterministic comparator, with Method.toString used as a tiebreaker"
"./src/main/java/org/junit/internal/MethodSorter.java","c360ca09cd3305eaf6e3f3026a6ee96d7e1ba65d","Tue, 29 May 2012 01:54:37 -0400","Ian Beauregard","Changed incorrect comments in MethodSorter and MethodSorters."
"./src/main/java/org/junit/internal/MethodSorter.java","24da9244b61f2dce4664a602e73ad060a4f68ce7","Mon, 21 May 2012 14:27:03 -0500","Kent R. Spillner","Restore deterministic test ordering."
"./src/main/java/org/junit/internal/MethodSorter.java","7924760d2d64f5f7651e9e57d1ca01e1bcce74e0","Fri, 6 Apr 2012 23:20:45 +0200","Matthew Farwell","Following feedback from dsaff"
"./src/main/java/org/junit/internal/MethodSorter.java","35916619de9d9c3e7ec3d793ab3072c9e78db258","Wed, 4 Apr 2012 23:34:08 +0200","Matthew Farwell","Changes after review by kcooney"
"./src/main/java/org/junit/internal/MethodSorter.java","c610a49727858597d9a10289bed0a0174053a69f","Sun, 19 Feb 2012 11:36:18 +0100","Matthew Farwell","SortMethodsWith allows the user to choose the order of execution of the methods within a test class."
"./src/main/java/org/junit/internal/MethodSorter.java","5d9e0022d3f6db1367d530579de6332b9c8802e3","Wed, 21 Sep 2011 17:48:06 -0400","Jesse Glick","Switching to method sort based on hash code - deterministic but hard to abuse."
"./src/main/java/org/junit/internal/MethodSorter.java","785a33b478d358e79a3b6592754ad9ec051e4278","Mon, 19 Sep 2011 18:01:09 -0400","Jesse Glick","If bytecode cannot be located or parsed, at least alpha sort."
"./src/main/java/org/junit/internal/MethodSorter.java","b40493d53dab022c8a58c80284c01605b71d1d92","Mon, 19 Sep 2011 17:56:05 -0400","Jesse Glick","Use bytecode order of methods when possible."
"./src/main/java/org/junit/internal/MethodSorter.java","cb69050a45f1688ad8c6e817cc511cfa67401f63","Fri, 26 Aug 2011 13:13:27 -0400","Jesse Glick","Preditably sort (test) methods in a class. The JVM does not guarantee any order. Visible here as an occasional failure in ParentRunnerTest.useChildHarvester on JDK 7 prior to fix."
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","0333e7efdc9ecf81df4212f82c3a59c6ff0fab19","Fri, 24 Jun 2011 22:54:01 -0700","Juan Cortez","Fixes issue #219 where Assert.assertArrayEquals(float[],float[],float) displays an error message with doubles instead of floats"
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","7aac4b19d359285041ccb51d575235339a1a8be0","Tue, 27 Oct 2009 08:52:06 -0400","David Saff","Fixed assertNull issue"
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","11f0abd09655be84d94d3013cf0c46f8239369e6","Thu, 30 Apr 2009 14:52:12 -0400","David Saff","Finishing the work of ComparisonCriteria"
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","68e5927ecf49bb21c396c423c3669ada15b7fe1b","Mon, 6 Apr 2009 22:31:18 -0400","David Saff","Last changes with Kent."
"./src/main/java/org/junit/internal/InexactComparisonCriteria.java","41cbbf7e228b8f7908e672a79863ff970316b120","Tue, 18 Nov 2008 22:51:29 +0000","dsaff","Asserting on arrays of doubles"
"./src/main/java/org/junit/validator/AnnotationValidatorFactory.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/validator/AnnotationValidatorFactory.java","f5e7e1ff180bb17e4f9df702a038e06a974f78f6","Sun, 6 Oct 2013 14:39:02 +1100","Ricky","added the since 4.12 where appropriate"
"./src/main/java/org/junit/validator/AnnotationValidatorFactory.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/validator/PublicClassValidator.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/main/java/org/junit/validator/AnnotationValidator.java","d9054149988487750679e35a349df7e0e2df5870","Wed, 25 Sep 2013 10:04:04 +1000","Ricky","changed arguments to validate methods to use JUnit classes as opposed to java.lang.reflect"
"./src/main/java/org/junit/validator/AnnotationValidator.java","fe5d86eba71a1f59dbbed09de4add01cc20420c0","Tue, 24 Sep 2013 12:51:40 +1000","Ricky","- statically imported Collections where appropriate - refactored the construction of the incompatiable annotations of CategoryValidator to be initialized immediately"
"./src/main/java/org/junit/validator/AnnotationValidator.java","f5e7e1ff180bb17e4f9df702a038e06a974f78f6","Sun, 6 Oct 2013 14:39:02 +1100","Ricky","added the since 4.12 where appropriate"
"./src/main/java/org/junit/validator/AnnotationValidator.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/validator/TestClassValidator.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/main/java/org/junit/validator/AnnotationsValidator.java","1d97da73fdafce8f5cf9d722f23c5cba41b26b70","Sat, 5 Apr 2014 22:24:27 +0200","Stefan Birkner","Verify that test classes are public."
"./src/main/java/org/junit/validator/AnnotationsValidator.java","9d3821f6411ad85a683b8d38e4d42411229f2eec","Fri, 27 Sep 2013 01:13:22 +0200","Stefan Birkner","Extract annotations validation to a single class."
"./src/main/java/org/junit/validator/ValidateWith.java","f5e7e1ff180bb17e4f9df702a038e06a974f78f6","Sun, 6 Oct 2013 14:39:02 +1100","Ricky","added the since 4.12 where appropriate"
"./src/main/java/org/junit/validator/ValidateWith.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/Assert.java","6f817017ec28e93d83bd75aa052a8b24cf3be473","Sat, 21 Dec 2013 18:49:53 +0100","Robin Stevens","Added missing javadoc for delta parameter in the assertArrayEquals methods"
"./src/main/java/org/junit/Assert.java","9ac4cc842d70dc7ef266f4d677d90d9b177e4be6","Fri, 11 Oct 2013 10:18:58 +0100","Peter Lawrey","Use explicit auto-boxing."
"./src/main/java/org/junit/Assert.java","063004dca462777a969ab1e0002dd3053014381c","Tue, 8 Oct 2013 17:40:46 +0100","Peter Lawrey","Don't create objects without a failure."
"./src/main/java/org/junit/Assert.java","26d34db6c2c12b0fee9ae3d307b3f18fe0ee62da","Sat, 9 Feb 2013 21:44:21 +0000","pimterry","Added boolean assertArrayEquals"
"./src/main/java/org/junit/Assert.java","f5c7fe43447b008b4db13e031b7c0c3551ae9ddd","Sun, 13 Jan 2013 13:05:05 -0500","Craig P. Motlin","Change failure message in assertNotEquals() to show actual instead of unexpected, to be consistent with assertNotSame()."
"./src/main/java/org/junit/Assert.java","78b4a8975523d0288a6f20f0ae7862b45cb55038","Sun, 13 Jan 2013 12:46:31 -0500","Craig P. Motlin","Implement assertNotEquals() for float parameters."
"./src/main/java/org/junit/Assert.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/Assert.java","f1be7f250156ecc0e6b6c9d7005abb53359fe2fe","Thu, 19 Jul 2012 14:38:43 +0200","Marc Philipp","Introduce withStacktrace() matcher"
"./src/main/java/org/junit/Assert.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/Assert.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/Assert.java","aff46c491d590ff2fcc43d0eaa0049593f6169b4","Sun, 27 May 2012 15:56:07 -0300","plasticle","closed method assertEquals with }"
"./src/main/java/org/junit/Assert.java","688854ba468c53884b74952f4daf938a99c44e8c","Fri, 25 May 2012 14:48:29 -0700","David Saff","Merge pull request #416 from jcortez/master"
"./src/main/java/org/junit/Assert.java","0c38750119accdea92004723c8c177d7cc65b16c","Thu, 24 May 2012 23:17:34 -0700","Juan Cortez","Fixed merge artifacts"
"./src/main/java/org/junit/Assert.java","2238ad20fefadf546a71725f46a6dc463c9d58ad","Thu, 24 May 2012 23:07:09 -0700","Juan Cortez","Rebased changes"
"./src/main/java/org/junit/Assert.java","17f7dfc72624253461022acff1d3aa6b9c4056cf","Thu, 24 May 2012 21:57:26 +0200","arjenw","Merge branch 'master' of git://github.com/KentBeck/junit"
"./src/main/java/org/junit/Assert.java","07045d97024b77023df481f808ea687e006fb338","Thu, 24 May 2012 17:00:18 +0200","arjenw","Renamed ThrowableMatcher to CauseMatcher (including accompanying test) and fixed the oddly indented brace"
"./src/main/java/org/junit/Assert.java","811b0efc7f90a75b2913f8ecea0011b2434cd4ff","Wed, 9 May 2012 11:54:11 -0700","David Saff","Merge pull request #418 from detinho/_issue_22"
"./src/main/java/org/junit/Assert.java","8d783ef4a517cfa7d6dbe7d1a13113d72489f485","Tue, 1 May 2012 13:46:33 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/Assert.java","72e10d3ca80ae76af8920091736882a6dc0a5036","Fri, 27 Apr 2012 16:41:06 -0700","Juan Cortez","Fixed problems with style and other small issues"
"./src/main/java/org/junit/Assert.java","c19ffebced2cfda962d868ba76e0dbfb3504cc37","Sun, 22 Apr 2012 15:00:42 +0600","Andrey Hitrin","Fixed #170: display actual object value in assertNull()"
"./src/main/java/org/junit/Assert.java","93346b959c96b3e90e4f3f3b015f7049ed4624ed","Fri, 13 Apr 2012 22:35:26 -0700","Juan Cortez","Merge remote-tracking branch 'upstream/master'"
"./src/main/java/org/junit/Assert.java","330b556dc7e46ffb141846b5e740229d316a665d","Wed, 11 Apr 2012 23:06:44 -0300","Marcos Vinícius da Silva","Identation."
"./src/main/java/org/junit/Assert.java","689231a6bb9debe771b26be72221a412970cfd4e","Wed, 11 Apr 2012 23:06:01 -0300","Marcos Vinícius da Silva","Identation."
"./src/main/java/org/junit/Assert.java","c28663267220fcb4660f51b663d3de76a7af23ff","Wed, 11 Apr 2012 23:03:20 -0300","Marcos Vinícius da Silva","Fixing identation and some tests."
"./src/main/java/org/junit/Assert.java","a0eea1357f0a0f4faea1245197f20ceee5ca3a5a","Tue, 3 Apr 2012 21:37:49 +0200","Marc Philipp","assertThat uses org.hamcrest.MatcherAssert"
"./src/main/java/org/junit/Assert.java","0b62513fa20ea3975a580e5b89dad265f54d6112","Thu, 2 Feb 2012 22:33:41 -0200","Marcos Vinícius da Silva","Simplifying isEqualsRegardingNull."
"./src/main/java/org/junit/Assert.java","53929101b4d9606d92dfd8d52e87f5dda467d51a","Tue, 17 Jan 2012 12:13:16 +0100","Arjen Wisse","Implemented the change now on org.junit.Assert.assertThat() as I think that's a better place and has cleaner code than the original. Included tests for both scenario's (assertThat as well as the ExpectedException)."
"./src/main/java/org/junit/Assert.java","8c2f7890154618b9409ef2baf7d96ccebec8d1ba","Wed, 5 Oct 2011 21:56:28 +0800","fbarber","Use <? super T> in Assert.assertThat"
"./src/main/java/org/junit/Assert.java","1cff207ea15039aea63ea63254a056d516ca690b","Wed, 28 Sep 2011 21:01:56 +0800","fbarber","Use <? super T> in Assert.assertThat"
"./src/main/java/org/junit/Assert.java","ad67ca583c925e8e8cf3d2b495203de79cd75acd","Thu, 28 Jul 2011 09:24:06 +0200","Stefan Birkner","fixed issue #134 (wrong JavaDoc of Assert)"
"./src/main/java/org/junit/Assert.java","7a65992af084650c52dc69380ae1ac24b107715c","Sat, 6 Aug 2011 09:27:55 -0300","Marcos Vinícius da Silva","Adding assertNotEquals to Object, long and double"
"./src/main/java/org/junit/Assert.java","0333e7efdc9ecf81df4212f82c3a59c6ff0fab19","Fri, 24 Jun 2011 22:54:01 -0700","Juan Cortez","Fixes issue #219 where Assert.assertArrayEquals(float[],float[],float) displays an error message with doubles instead of floats"
"./src/main/java/org/junit/Assert.java","766343797294634c86186664c519d65d7d984c96","Fri, 7 Jan 2011 20:36:11 -0800","Kevin Cooney","Fix AssertionError.toString() when no messages are passed."
"./src/main/java/org/junit/Assert.java","cc24890c002286ca583518c471b16d143a69a62a","Mon, 20 Jul 2009 22:23:33 -0400","David Saff","org.junit.runner is javadoced"
"./src/main/java/org/junit/Assert.java","15815f55d2e9ae567ef8fe0a172f498b87a3a880","Mon, 20 Jul 2009 22:01:25 -0400","David Saff","Last errors gone from Hamcrest rollback"
"./src/main/java/org/junit/Assert.java","0b57f033a94caca38ab1369b117baa1589d7d6d3","Mon, 1 Jun 2009 14:43:37 -0400","David Saff","Minor updates to assertThat and isAnyOf"
"./src/main/java/org/junit/Assert.java","9164fdee10603ebdb2b4a7d78ab00046fa3ad37f","Fri, 29 May 2009 11:56:22 -0400","David Saff","Hamcrest 1.2 documented in release notes"
"./src/main/java/org/junit/Assert.java","0dc3de7fbcf997ca8465ed9e7793a0b4f730121b","Mon, 4 May 2009 15:47:26 -0400","David Saff","arrayEquals is a better name than internalArrayEquals"
"./src/main/java/org/junit/Assert.java","11f0abd09655be84d94d3013cf0c46f8239369e6","Thu, 30 Apr 2009 14:52:12 -0400","David Saff","Finishing the work of ComparisonCriteria"
"./src/main/java/org/junit/Assert.java","2b9ba5540f5051239a9fde65f195cefc532efadc","Wed, 29 Apr 2009 16:02:24 -0400","David Saff","Fix assertArrayEquals(float[], float[]) javadoc"
"./src/main/java/org/junit/Assert.java","68e5927ecf49bb21c396c423c3669ada15b7fe1b","Mon, 6 Apr 2009 22:31:18 -0400","David Saff","Last changes with Kent."
"./src/main/java/org/junit/Assert.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/Assert.java","41cbbf7e228b8f7908e672a79863ff970316b120","Tue, 18 Nov 2008 22:51:29 +0000","dsaff","Asserting on arrays of doubles"
"./src/main/java/org/junit/Assert.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/Assert.java","b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c","Wed, 7 May 2008 00:32:09 +0000","kbeck","Cleaned up javadoc and ant build problems."
"./src/main/java/org/junit/Assert.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/main/java/org/junit/Assert.java","a90f320bbb189f07ff2fca81a9b5e4e0c8381978","Tue, 5 Feb 2008 22:06:47 +0000","kbeck","Fixed 1857283, assertEquals(null, "null)"
"./src/main/java/org/junit/Assert.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/runners/Enclosed.java","0fac8c9bba348bb894ffa548c75f0e02380e24bf","Mon, 29 Jul 2013 21:44:40 +0200","Stefan Birkner","Remove JavaDoc reference to test class."
"./src/main/java/org/junit/experimental/runners/Enclosed.java","5698cfb8a603a968f7b53d14b9e691518ab84d88","Tue, 25 Dec 2012 00:27:42 +0100","Tibor Digana","Fixed formating in Enclosed Javadoc"
"./src/main/java/org/junit/experimental/runners/Enclosed.java","8675e5bf75f4865f3ff2d0f840d0d6022f1c59b6","Mon, 3 Dec 2012 10:25:15 -0500","Nicolas A. Bérard-Nault","Expanded tabs to spaces"
"./src/main/java/org/junit/experimental/runners/Enclosed.java","872aba6255a0ddcc02bd88418ea8b6b2a70fdb54","Fri, 5 Oct 2012 11:02:01 -0400","Nicolas A. Bérard-Nault","Added abstract-avoiding behavior to the javadoc."
"./src/main/java/org/junit/experimental/runners/Enclosed.java","45aed05bb9e75bc8228af8ffbb44d39626d02dd5","Sun, 24 Jun 2012 22:27:18 -0400","Nicolas A. Bérard-Nault","Implemented the changes proposed by kcooney:"
"./src/main/java/org/junit/experimental/runners/Enclosed.java","229490bbf8731ec07fd7ce6d68f0e22b502b9caf","Sat, 23 Jun 2012 13:52:48 -0400","Nicolas A. Bérard-Nault","Changed the filtered collection to an ArrayList from an HashSet to avoid re-ordering of existing order-dependant test suites, as per the comments of kcooney."
"./src/main/java/org/junit/experimental/runners/Enclosed.java","ebb9d7f536a5b1be8364c6cb7367cac8c3849caa","Thu, 21 Jun 2012 13:39:39 -0400","Nicolas A. Bérard-Nault","Implemented the changes proposed davidhart82"
"./src/main/java/org/junit/experimental/runners/Enclosed.java","0c458a8796cc5ffcda5286ee4a367c8e31ae7c88","Wed, 20 Jun 2012 17:45:28 -0400","Nicolas A. Bérard-Nault","Changed Enclosed runner to ignore abstract classes. Before this change, an abstract enclosed class caused jUnit to throw an exception."
"./src/main/java/org/junit/experimental/runners/Enclosed.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/experimental/runners/Enclosed.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/org/junit/experimental/ParallelComputer.java","5627d209836c904bb308a353e7c69cafc3a428b7","Sun, 21 Oct 2012 13:20:10 +0200","Marc Philipp","Use TimeUnit.NANOSECONDS for JDK 5 compatibility"
"./src/main/java/org/junit/experimental/ParallelComputer.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/ParallelComputer.java","7898dd861deabd8afca60614f4bb546828c28d70","Sat, 22 Sep 2012 01:32:30 +0200","Tibor Digana","import"
"./src/main/java/org/junit/experimental/ParallelComputer.java","41e5c7ed5f82b5a588828584c3ac765b40a76cea","Sat, 22 Sep 2012 01:26:43 +0200","Tibor Digana","improved implementation using Executors"
"./src/main/java/org/junit/experimental/ParallelComputer.java","97afc5e205e1c6ac0f5a9aefabed92d58d88ab81","Wed, 15 Jul 2009 22:12:32 -0400","David Saff","No more Interceptors.  Everything is rules"
"./src/main/java/org/junit/experimental/ParallelComputer.java","b3ee106f9f95e1f4093adb505e13a163df77f341","Wed, 13 May 2009 11:23:02 -0400","David Saff","ParallelComputer doesn't have to assume BlockJUnit4Runner anymore"
"./src/main/java/org/junit/experimental/ParallelComputer.java","b737131b847c53bb4f1cf6dbf86f586008550eba","Mon, 11 May 2009 22:54:41 -0400","David Saff","Pairing approach to removing duplication from ParallelComputer, creating RunnerInterceptor."
"./src/main/java/org/junit/experimental/ParallelComputer.java","8b87e991c603ac14265fc3dd66b089c2395cb701","Tue, 5 May 2009 00:06:57 -0400","David Saff","Removed duplication by creating a delegating subclass of ParentRunner, and introducing temporary ugly public API."
"./src/main/java/org/junit/experimental/ParallelComputer.java","3d08ecc6a661f09520559637794c9a161db90f3d","Mon, 4 May 2009 16:38:26 -0400","David Saff","Removed duplication in ParallelComputer.  Cure worse than disease?"
"./src/main/java/org/junit/experimental/ParallelComputer.java","8b507d7908603bf6e36ea9e60921b76eb5923d0f","Mon, 4 May 2009 13:52:47 -0400","David Saff","Incorporated James Abbley's patch for ParallelComputer"
"./src/main/java/org/junit/experimental/ParallelComputer.java","015c02e04d940a4bffc6a8e687751c4610db19b8","Fri, 1 May 2009 22:42:43 +0800","James Abley","remove timeout and try reducing duplication between ParallelSuite and ParallelRunner"
"./src/main/java/org/junit/experimental/ParallelComputer.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","d9054149988487750679e35a349df7e0e2df5870","Wed, 25 Sep 2013 10:04:04 +1000","Ricky","changed arguments to validate methods to use JUnit classes as opposed to java.lang.reflect"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","fe5d86eba71a1f59dbbed09de4add01cc20420c0","Tue, 24 Sep 2013 12:51:40 +1000","Ricky","- statically imported Collections where appropriate - refactored the construction of the incompatiable annotations of CategoryValidator to be initialized immediately"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","f5e7e1ff180bb17e4f9df702a038e06a974f78f6","Sun, 6 Oct 2013 14:39:02 +1100","Ricky","added the since 4.12 where appropriate"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/experimental/categories/CategoryValidator.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/main/java/org/junit/experimental/categories/Category.java","e02beea07c6d3798e2db532d6c7cebe6cc21f30d","Wed, 18 Sep 2013 11:30:58 +1000","Ricky","- Moved validator package to org.junit.validator - Fixed up some imports"
"./src/main/java/org/junit/experimental/categories/Category.java","1273a35689bdcb3304f6634cdc3889c61f9b1b1f","Mon, 16 Sep 2013 12:13:48 +1000","Ricky","More changes after feedback. Moved validator to category packages. Changes around unmodifiable maps. Made AnnotationValidator abstract."
"./src/main/java/org/junit/experimental/categories/Category.java","85f9d8397bfd96261c3214284672180c522e2d38","Mon, 3 Jun 2013 22:27:53 +1000","Ricky","changes after feedback"
"./src/main/java/org/junit/experimental/categories/Category.java","48af7e797dbefa1fc47e80394c7f74ef87c3c7ab","Tue, 28 May 2013 15:36:45 +1000","Ricky","adding annotation validators functionality"
"./src/main/java/org/junit/experimental/categories/Category.java","27f927c42f251399899b39de89936f02529dc50e","Wed, 5 Dec 2012 21:47:38 +0100","Henning Gross","Enables Inheritance on Category.java by adding @Inherited"
"./src/main/java/org/junit/experimental/categories/Category.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/categories/Category.java","5f25ca318bc2b35ecf8526c08a1e3b3e17d375da","Fri, 7 Jan 2011 13:03:18 -0500","David Saff","Fix bad javadoc and bad release notes"
"./src/main/java/org/junit/experimental/categories/Category.java","ea80d1aa27f92ce103c43c0bf70a829d6e31111d","Tue, 8 Dec 2009 10:13:21 -0500","David Saff","Fix documentation reference to CategoryType"
"./src/main/java/org/junit/experimental/categories/Category.java","cec8e3ed1246c289ae156c4418d2e224bd793f4b","Mon, 23 Nov 2009 23:06:40 -0500","David Saff","Any class can be a category.  Added Category exclusion."
"./src/main/java/org/junit/experimental/categories/Category.java","46036e7146f9dd0ca44baaec490692b967edd0ce","Mon, 19 Oct 2009 23:11:19 -0400","David Saff","javadoc'ed, and with better names"
"./src/main/java/org/junit/experimental/categories/Category.java","ce810b763e5021629248702993f226e3bf969db8","Mon, 19 Oct 2009 22:51:12 -0400","David Saff","Multiple categories on tests, category inheritance, production classes in production package."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","ecd5f06988192bffed1ea4c94691e5f42347bfd9","Wed, 12 Feb 2014 02:41:13 -0800","Reinhold Füreder","#769 Fix many warnings (Eclipse 4.2/Juno based) - Ref: According to kcooney's comment change the signature of CategoryFilterFactory.createFilter() to take in a List<Class<?>> instead"
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","1064471b0be1d001265ae5a688f0b80e460d6154","Tue, 6 Aug 2013 22:28:20 +0200","Stefan Birkner","Rewrite JavaDoc of IncludeCategories.createFilter(Class<?>...)."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","40b8761099da900ad219fe9b06060cda1e212f83","Thu, 21 Mar 2013 13:44:27 -0700","Noel Yap","JavaDoc added."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","9d9899bce3506e7d87ebc6352a3cf3d25ea20f54","Thu, 21 Mar 2013 09:35:25 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/experimental/categories/IncludeCategories.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","ecd5f06988192bffed1ea4c94691e5f42347bfd9","Wed, 12 Feb 2014 02:41:13 -0800","Reinhold Füreder","#769 Fix many warnings (Eclipse 4.2/Juno based) - Ref: According to kcooney's comment change the signature of CategoryFilterFactory.createFilter() to take in a List<Class<?>> instead"
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","c86a84d3beed29c4f8389b1172fde95f72d2d6ed","Wed, 5 Jun 2013 12:59:24 -0700","Noel Yap","Make compilable under Java 1.5."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","b5084eb51ffdb2a3bd9bed7294afc941a733a693","Tue, 30 Apr 2013 15:55:14 -0700","Noel Yap","JavaDoc fixed."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","826529633261161edd2d9dc0f866b2c3c0420514","Mon, 29 Apr 2013 12:20:26 -0700","Noel Yap","Changes in response to code review from @kcooney."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","b01900fddca5ff54258e621025ccdbbc75f880f1","Wed, 27 Mar 2013 13:35:40 -0700","Noel Yap","FilterFactoryFactory renamed to FilterFactories and its methods made static. ClassUtil renamed to Classes for consistency."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","40b8761099da900ad219fe9b06060cda1e212f83","Thu, 21 Mar 2013 13:44:27 -0700","Noel Yap","JavaDoc added."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","9d9899bce3506e7d87ebc6352a3cf3d25ea20f54","Thu, 21 Mar 2013 09:35:25 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee","Wed, 20 Mar 2013 15:04:26 -0700","Noel Yap","API simplified. FilterFactory.parseArgs() removed. FilterFactoryParams made final."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","74cab2dc9b8c32482d2c86a66a0dd9318930b4bc","Mon, 18 Mar 2013 09:02:55 -0700","Noel Yap","crlf fixed."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/experimental/categories/Categories.java","cf870c0bebf6ca9631594845cd558e1f4fb78b29","Thu, 21 Nov 2013 22:18:44 -0800","reinholdfuereder","Fix many warnings (Eclipse 4.2/Juno based)"
"./src/main/java/org/junit/experimental/categories/Categories.java","5edfb4447b609c178d63a3d991172861076d143b","Thu, 7 Mar 2013 13:21:14 -0800","Noel Yap","Merge branch 'master' into filter-option"
"./src/main/java/org/junit/experimental/categories/Categories.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/experimental/categories/Categories.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/experimental/categories/Categories.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/experimental/categories/Categories.java","196c4ed79cbaca37709643b54913b361b677ae04","Thu, 28 Feb 2013 15:43:28 -0800","Noel Yap","--filter option implemented."
"./src/main/java/org/junit/experimental/categories/Categories.java","718bcbf31260c9be513c39485475d6d1156ce59a","Wed, 6 Feb 2013 11:58:48 -0500","Nayan Hajratwala","updated references from KentBeck github account to junit-team"
"./src/main/java/org/junit/experimental/categories/Categories.java","84e0814b94d0509f7ed123c9976ff1d0b8abfadb","Mon, 10 Dec 2012 19:46:26 +0100","Tibor Digana","ah"
"./src/main/java/org/junit/experimental/categories/Categories.java","298cc4459cf76298f4b790a903fbdb6e6d20887d","Mon, 10 Dec 2012 19:41:46 +0100","Tibor Digana","small optimization if-else"
"./src/main/java/org/junit/experimental/categories/Categories.java","de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a","Mon, 10 Dec 2012 19:33:01 +0100","Tibor Digana","Merge remote-tracking branch into junit.features"
"./src/main/java/org/junit/experimental/categories/Categories.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/categories/Categories.java","8d26b450670647c847aa0ba1dd47a9c54865c63d","Tue, 28 Dec 2010 09:46:14 -0500","David Saff","further documentation cleanup, especially around TestRule"
"./src/main/java/org/junit/experimental/categories/Categories.java","81b50e9f3bdb66543d07e7349026bd3b447f433e","Tue, 16 Nov 2010 10:18:17 -0500","David Saff","TODO cleanup for 4.9 lead-up"
"./src/main/java/org/junit/experimental/categories/Categories.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/main/java/org/junit/experimental/categories/Categories.java","95a8c63cb0a7867d58ee4a0777fec65bab39a1ec","Tue, 12 Oct 2010 23:20:49 -0400","David Saff","Add comment about next steps"
"./src/main/java/org/junit/experimental/categories/Categories.java","403f761da11bdaf9a03538139e7ae51601c36b0e","Tue, 12 Oct 2010 23:03:29 -0400","David Saff","Correctly doesn't try to parse categories for methods of parameterized test classes."
"./src/main/java/org/junit/experimental/categories/Categories.java","b3831d600d2d893ec6250ee930188cc373d81ee5","Mon, 30 Aug 2010 22:10:50 -0400","David Saff","Fixed direct category/parameterized conflict in a hacky way.  Next, error for method-level category annotations in parameterized class."
"./src/main/java/org/junit/experimental/categories/Categories.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/experimental/categories/Categories.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/experimental/categories/Categories.java","02fc1f509a670de3632417bbf33168989bfcf872","Tue, 5 Jan 2010 11:51:45 -0500","David Saff","merged with master"
"./src/main/java/org/junit/experimental/categories/Categories.java","b33b4b090c224c14415d0ffb68a078a097aeaf71","Mon, 4 Jan 2010 23:13:25 -0500","David Saff","RunNotifier.fireTestRunStarted(Plan) to replace fireTestRunStarted(Description)"
"./src/main/java/org/junit/experimental/categories/Categories.java","2f9b53dbecad010dbb7e7cfff3a11476b7d2208a","Mon, 21 Dec 2009 22:30:10 -0500","David Saff","Simplify Filter implementations"
"./src/main/java/org/junit/experimental/categories/Categories.java","7cd277620b4c888ae4101bb3f4768af83b85313a","Fri, 18 Dec 2009 09:50:45 -0500","David Saff","Better documentation of Filter method, which allows a more succinct definition of ParentRunner"
"./src/main/java/org/junit/experimental/categories/Categories.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/org/junit/experimental/categories/Categories.java","832bb8322f2ca09af52769a0198b276269b53988","Tue, 8 Dec 2009 10:15:44 -0500","David Saff","Clarify that annotating suite has no effect"
"./src/main/java/org/junit/experimental/categories/Categories.java","ea80d1aa27f92ce103c43c0bf70a829d6e31111d","Tue, 8 Dec 2009 10:13:21 -0500","David Saff","Fix documentation reference to CategoryType"
"./src/main/java/org/junit/experimental/categories/Categories.java","7d8f2b7f6e190e8e59efacc10bc617b6646d131b","Mon, 7 Dec 2009 23:00:43 -0500","David Saff","Annotations on classes are merged with method annotations for categories"
"./src/main/java/org/junit/experimental/categories/Categories.java","5a3a326096cf65a58272ee89a5ef1c164cfd9d33","Mon, 30 Nov 2009 23:08:09 -0500","David Saff","Final cleanup of Categories and release notes for 4.8"
"./src/main/java/org/junit/experimental/categories/Categories.java","cec8e3ed1246c289ae156c4418d2e224bd793f4b","Mon, 23 Nov 2009 23:06:40 -0500","David Saff","Any class can be a category.  Added Category exclusion."
"./src/main/java/org/junit/experimental/categories/Categories.java","46036e7146f9dd0ca44baaec490692b967edd0ce","Mon, 19 Oct 2009 23:11:19 -0400","David Saff","javadoc'ed, and with better names"
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","ecd5f06988192bffed1ea4c94691e5f42347bfd9","Wed, 12 Feb 2014 02:41:13 -0800","Reinhold Füreder","#769 Fix many warnings (Eclipse 4.2/Juno based) - Ref: According to kcooney's comment change the signature of CategoryFilterFactory.createFilter() to take in a List<Class<?>> instead"
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","31c422f63b1b6b930ad4df7a2372a2576cc12094","Tue, 6 Aug 2013 22:45:03 +0200","Stefan Birkner","Rewrite JavaDoc of ExcludeCategories.createFilter(Class<?>...)."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","cfaceb6d34390d999ff238d53fcb73898b32f98f","Mon, 6 May 2013 15:16:49 -0700","Noel Yap","Changes due to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","40b8761099da900ad219fe9b06060cda1e212f83","Thu, 21 Mar 2013 13:44:27 -0700","Noel Yap","JavaDoc added."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","9d9899bce3506e7d87ebc6352a3cf3d25ea20f54","Thu, 21 Mar 2013 09:35:25 -0700","Noel Yap","Responses to code review from @dsaff."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","34336085d5aba69c997f8e6b244531561afebcd4","Thu, 14 Mar 2013 13:51:37 -0700","Noel Yap","Modification in response to code review from @kcooney and @dsaff."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","318adee43493447e22bbea89e0f17260e0186a14","Tue, 5 Mar 2013 09:04:19 -0800","Noel Yap","JavaDoc added. "--filter arg" support added (as opposed to "--filter=arg"). Command line parser factored into JUnitCommandLineParser class. Unit tests added."
"./src/main/java/org/junit/experimental/categories/ExcludeCategories.java","0a9a389570a171b67c3155d312f2e90bdab5aaaf","Fri, 1 Mar 2013 14:22:47 -0800","Noel Yap","Changes due to suggestions from @kcooney."
"./src/main/java/org/junit/experimental/results/FailureList.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/results/FailureList.java","4b549360e08dac944ee34b7c7bf1a95b41f72f35","Mon, 6 Jul 2009 21:44:02 -0400","David Saff","FailureList isn't public"
"./src/main/java/org/junit/experimental/results/FailureList.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/results/PrintableResult.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","01b427b3b89ce04d01f0ddbd746d13a175feec5b","Fri, 29 Apr 2011 14:24:46 -0400","David Saff","Fix for github#38: ParentRunner filters more than once"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","b0b1c80075abf53597839e6bb430804b17d5c24a","Mon, 20 Jul 2009 22:09:23 -0400","David Saff","experimental.results is javadoced"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc","Fri, 17 Jul 2009 17:30:24 -0400","David Saff","Re-deleted interceptor classes"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d","Mon, 6 Jul 2009 23:50:14 -0400","David Saff","Fixing Interceptor->Rule name changes"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","e727dd6b1cb2caa1699da3b2df7625c9554adc36","Thu, 13 Dec 2007 06:34:26 +0000","dsaff","Remove unnecessary SuppressWarnings"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","b52e4af4eb7b26619e1d80537952aed7276766cb","Fri, 7 Dec 2007 16:31:54 +0000","dsaff","Remove"
"./src/main/java/org/junit/experimental/results/PrintableResult.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","b0b1c80075abf53597839e6bb430804b17d5c24a","Mon, 20 Jul 2009 22:09:23 -0400","David Saff","experimental.results is javadoced"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","4e2455b1f142bdf8f07383082638718695e51224","Mon, 20 Jul 2009 10:35:10 -0400","David Saff","Rollback to hamcrest 1.1"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc","Fri, 17 Jul 2009 17:30:24 -0400","David Saff","Re-deleted interceptor classes"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","e35fb32e07a4cfe69dd86024a79d9cb3b9132e55","Wed, 27 May 2009 13:57:07 -0400","David Saff","Upgraded to Hamcrest 1.2"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","d9c908b9aab5f610e2f42aba1863ce25e36423f2","Mon, 7 Apr 2008 17:59:21 +0000","dsaff","API clean-up before 4.5 release"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","e727dd6b1cb2caa1699da3b2df7625c9554adc36","Thu, 13 Dec 2007 06:34:26 +0000","dsaff","Remove unnecessary SuppressWarnings"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","0d6cd750d53486f01f12ddfee8657d94b5940574","Fri, 7 Dec 2007 18:42:28 +0000","dsaff","Remove old todo"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","70fcf98c69eace2e6cc6dc37b54e70fe57c490f1","Fri, 7 Dec 2007 18:27:49 +0000","dsaff","Improve description of hasFailureContaining"
"./src/main/java/org/junit/experimental/results/ResultMatchers.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","c60d087c2064f5903086e95906e6bc636e3fa083","Mon, 18 Mar 2013 21:25:48 +0000","pimterry","Tiny whitespace fix"
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","3209ce6e2d1b84ae2493a7906eecd76dfff1a8af","Thu, 14 Mar 2013 21:05:00 +0000","pimterry","Minor tweak to improve symmetric set up of convertable types in ParameterSignature"
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","b1832b23b6260561467a277d492b0db16f5ecd25","Thu, 14 Mar 2013 11:04:12 +0000","pimterry","Moved instance initialisation for type conversion map into static method"
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","e9d4de8e15255b03b60e935390e517d4de90a73b","Wed, 13 Mar 2013 23:13:10 +0000","pimterry","Single-datapoint methods are now only called if the return types could be relevant, and theory parameter signatures are compared with types via a prebuilt map rather than reflection."
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","cc8497f28e1d5a46d7940a0b36556154c83d6f7a","Mon, 11 Mar 2013 01:17:00 +0000","pimterry","Parameters are now matched on value, not defined type, for array and single-valued methods and fields."
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","4e8b0282c72c5da53b68d012e57ac41f36c73a68","Tue, 16 Oct 2012 11:05:51 +0200","sschroevers","Allow the array returned by a @DataPoints-annotated method to contain null values."
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","03411db6286fe1be8e5b549a8affec5de35fa10c","Sat, 8 Dec 2007 19:36:13 +0000","dsaff","Remove stale TODO comments"
"./src/main/java/org/junit/experimental/theories/ParameterSignature.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/DataPoints.java","b4b20702ea37f5a13750a899eac015c115cc73f0","Mon, 1 Apr 2013 20:03:02 +0100","pimterry","Updated DataPoints documentation for the new iterable datapoints"
"./src/main/java/org/junit/experimental/theories/DataPoints.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/main/java/org/junit/experimental/theories/DataPoints.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/experimental/theories/DataPoints.java","dbe8a972fadaed5d2b88f4dfa44328fa323b59a2","Tue, 12 Feb 2013 07:17:20 -0800","David Saff","Merge pull request #621 from pimterry/named-datapoints-#65"
"./src/main/java/org/junit/experimental/theories/DataPoints.java","62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa","Sat, 9 Feb 2013 20:57:33 +0000","pimterry","Improvements to DataPoints/FromDatapoints annotation javadoc"
"./src/main/java/org/junit/experimental/theories/DataPoints.java","72af29d7f52e6f3029fe8464c2b0bb63efab2fab","Wed, 6 Feb 2013 23:50:18 +0000","pimterry","Added specific targetting for the various theory annotations"
"./src/main/java/org/junit/experimental/theories/DataPoints.java","9b81f967ab997fa980c2eb1461c8ad4338c9a0b1","Wed, 6 Feb 2013 00:09:38 +0000","pimterry","Added JavaDoc to DataPoints and FromDataPoints"
"./src/main/java/org/junit/experimental/theories/DataPoints.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/DataPoints.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java","1df71004338faf30b9287b03b726e1ce4f1246be","Sat, 21 Apr 2012 21:56:51 +0200","Marc Philipp","Fix #88"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java","26ae50e44f114dcdc6aa031917be6484681a546a","Fri, 29 Mar 2013 01:07:53 +0000","pimterry","Added documentation to TestedOn and ParametersSuppliedBy"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java","72af29d7f52e6f3029fe8464c2b0bb63efab2fab","Wed, 6 Feb 2013 23:50:18 +0000","pimterry","Added specific targetting for the various theory annotations"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/suppliers/TestedOn.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java","26ae50e44f114dcdc6aa031917be6484681a546a","Fri, 29 Mar 2013 01:07:53 +0000","pimterry","Added documentation to TestedOn and ParametersSuppliedBy"
"./src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java","72af29d7f52e6f3029fe8464c2b0bb63efab2fab","Wed, 6 Feb 2013 23:50:18 +0000","pimterry","Added specific targetting for the various theory annotations"
"./src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/ParametersSuppliedBy.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/FromDataPoints.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/experimental/theories/FromDataPoints.java","62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa","Sat, 9 Feb 2013 20:57:33 +0000","pimterry","Improvements to DataPoints/FromDatapoints annotation javadoc"
"./src/main/java/org/junit/experimental/theories/FromDataPoints.java","9b81f967ab997fa980c2eb1461c8ad4338c9a0b1","Wed, 6 Feb 2013 00:09:38 +0000","pimterry","Added JavaDoc to DataPoints and FromDataPoints"
"./src/main/java/org/junit/experimental/theories/FromDataPoints.java","1963b424c176742b711fb4226ce8f314d431813c","Tue, 29 Jan 2013 01:11:47 +0000","pimterry","Refactored FromDataPoints functionality to use SpecificDataPointsSupplier as a normal ParameterSupplier, by allowing ParameterSuppliers to take TestClasses in their constructors."
"./src/main/java/org/junit/experimental/theories/FromDataPoints.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/ParameterSupplier.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/main/java/org/junit/experimental/theories/ParameterSupplier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/ParameterSupplier.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/Theories.java","07447b5f98989e4456be8ee8acd01cfb3d20b8c0","Sun, 6 Apr 2014 21:17:18 +0400","Brazhnikov","Small fixes, mainly in throws signatures"
"./src/main/java/org/junit/experimental/theories/Theories.java","cb0c4e9f7c9be8be7c11e4934f6bd71a312102ec","Fri, 28 Mar 2014 15:49:42 -0500","Paul Holser","For #855, remove FrameworkMethod.getParameterSignatures()"
"./src/main/java/org/junit/experimental/theories/Theories.java","ede492496de0f3c0872216ac9c9b88a00fdef09e","Tue, 4 Jun 2013 02:19:13 +0200","Tibor Digana","changes with unmodifiable collections"
"./src/main/java/org/junit/experimental/theories/Theories.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/main/java/org/junit/experimental/theories/Theories.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/main/java/org/junit/experimental/theories/Theories.java","2c6c142aa801cef3520ca668e75a670a32b4859a","Mon, 28 Jan 2013 23:06:29 +0000","pimterry","Added error validation to check that datapoints array fields are all static and public too, fixing #125"
"./src/main/java/org/junit/experimental/theories/Theories.java","fbcebcae05bc4aee3f8dcf24ebfcf69e6b245a0f","Tue, 8 Jan 2013 15:44:25 -0600","William Herbert Lichtenberger","Fix for #499 Assumes in tests run by Theories"
"./src/main/java/org/junit/experimental/theories/Theories.java","80b7fbad6e37f2b229a919f595a5263dd21da8fb","Wed, 12 Dec 2012 14:09:35 -0600","Paul Holser","Ensure no-generic-type-parms validator gets executed/tested."
"./src/main/java/org/junit/experimental/theories/Theories.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/Theories.java","7496008e2c712a908edce40496624e6e49ffed8f","Thu, 19 Jul 2012 16:08:10 +0200","David Hart","Move brace (code review)"
"./src/main/java/org/junit/experimental/theories/Theories.java","0deeda931d45a23413e1c84a1966469deadfdb83","Sun, 3 Jun 2012 11:38:01 +0100","davidhart82","DataPoints need to be Public"
"./src/main/java/org/junit/experimental/theories/Theories.java","54b657ce3d7042fc0adc13130400322b5dd70779","Wed, 10 Feb 2010 07:02:17 +0800","Berin Loritsch","Take care of the TODO to make the inner class static."
"./src/main/java/org/junit/experimental/theories/Theories.java","8dd7600e8634709c2e673e825e3f8cea58ff3c65","Mon, 1 Feb 2010 14:09:52 -0500","David Saff","Temporarily here to keep master clean"
"./src/main/java/org/junit/experimental/theories/Theories.java","fc7acc64dbbf5c28ef4bd3b142e35922d6294428","Tue, 30 Jun 2009 23:19:05 -0400","David Saff","FrameworkField TODO deletion"
"./src/main/java/org/junit/experimental/theories/Theories.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/main/java/org/junit/experimental/theories/Theories.java","50b9c949876189d8c4871471ec346988e4ccae06","Thu, 31 Jul 2008 14:28:18 +0000","dsaff","Better validation in Theories"
"./src/main/java/org/junit/experimental/theories/Theories.java","095d3f8df0708f98d41f5894a892388b6985c44f","Thu, 31 Jul 2008 14:20:56 +0000","dsaff","Validation of constructors that can take parameters, commenting about an exception that should never occur"
"./src/main/java/org/junit/experimental/theories/Theories.java","dd9ee989f3f322c7c6793f95a73b28f3cc11c11e","Thu, 31 Jul 2008 13:59:08 +0000","dsaff","Better name for validateConstructor"
"./src/main/java/org/junit/experimental/theories/Theories.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/experimental/theories/Theories.java","1fcd990f60518c941a44bae2596392021614a20b","Tue, 29 Jul 2008 18:55:58 +0000","kbeck","Javadoc and various cleanup"
"./src/main/java/org/junit/experimental/theories/Theories.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/experimental/theories/Theories.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/experimental/theories/Theories.java","29f117914afa33c2538479c785f349daa787bf60","Thu, 10 Jul 2008 20:48:29 +0000","kbeck","Refinement of BlockJUnit4ClassRunner to make it easier to override."
"./src/main/java/org/junit/experimental/theories/Theories.java","96d7dd609920deb1336cf85dc6c9a3a0d5e30d15","Tue, 1 Jul 2008 18:29:54 +0000","kbeck","Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?"
"./src/main/java/org/junit/experimental/theories/Theories.java","3ef1b3ac5d45cd0023afc18739aadf4f15b9d80c","Thu, 26 Jun 2008 13:55:23 +0000","kbeck","Turned off javadoc and deprecated warnings and deleted java.hprof.txt."
"./src/main/java/org/junit/experimental/theories/Theories.java","078e45bd31a9920e00633ad6ce658e22529304f2","Mon, 16 Jun 2008 17:52:02 +0000","kbeck","Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner."
"./src/main/java/org/junit/experimental/theories/Theories.java","6b182284c1a0452cf175852f2c808b08167c2f72","Thu, 29 May 2008 13:30:13 +0000","dsaff","If there are no data points that pass the assumption, the test fails."
"./src/main/java/org/junit/experimental/theories/Theories.java","d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0","Tue, 6 May 2008 16:42:11 +0000","kbeck","Adding javadoc and tweaking visibility."
"./src/main/java/org/junit/experimental/theories/Theories.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/Theories.java","cde32fb62ad8f5a05d700ce3189e131fa51739cb","Mon, 21 Jan 2008 20:35:00 +0000","dsaff","Theories are a lot faster, by caching the @Before and @After methods and sharing them between all Theory method invocations."
"./src/main/java/org/junit/experimental/theories/Theories.java","18299dc8f8aaae0e64345795b2884eb7f42ad460","Fri, 28 Dec 2007 19:47:37 +0000","dsaff","Assignments depends on TestClass, rather than directly on java.lang.Class"
"./src/main/java/org/junit/experimental/theories/Theories.java","8964b10541f840e559a3308a043b64a8c1f6af57","Mon, 10 Dec 2007 18:37:55 +0000","dsaff","Removed unnecessary SuppressWarnings"
"./src/main/java/org/junit/experimental/theories/Theories.java","7fe2a0e69eaa06c445238906739c4d05503973cc","Sat, 8 Dec 2007 19:45:41 +0000","dsaff","Remove stale TODO"
"./src/main/java/org/junit/experimental/theories/Theories.java","1e4a3ba03cca7cfc03b2565952f74d2ae964facc","Sat, 8 Dec 2007 19:36:58 +0000","dsaff","A method marked @Theory and @Test should only be executed once"
"./src/main/java/org/junit/experimental/theories/Theories.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/experimental/theories/Theories.java","5ca9ec43b61e5353296c69a307cd7b71e630b2e0","Fri, 7 Dec 2007 18:28:27 +0000","dsaff","Don't need to pass instance in to calculate values"
"./src/main/java/org/junit/experimental/theories/Theories.java","4892e000aa5b890795b5082f636d6623b6f3820d","Fri, 7 Dec 2007 16:57:39 +0000","dsaff","Inline invokeWithActualParameters"
"./src/main/java/org/junit/experimental/theories/Theories.java","3a791ec79fff66aebc332fe4e4cbf626e39bd3d3","Fri, 7 Dec 2007 16:54:31 +0000","dsaff","- Organize ParentRunner better"
"./src/main/java/org/junit/experimental/theories/Theories.java","81ef67251efba98fd6bb1065e9ab97c102dbcc24","Fri, 7 Dec 2007 16:32:57 +0000","dsaff","No matching parameters is now an assumption failure, not an assertion failure"
"./src/main/java/org/junit/experimental/theories/Theories.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/Theory.java","72af29d7f52e6f3029fe8464c2b0bb63efab2fab","Wed, 6 Feb 2013 23:50:18 +0000","pimterry","Added specific targetting for the various theory annotations"
"./src/main/java/org/junit/experimental/theories/Theory.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/Theory.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","38d91308c302eb4f0b5ed24e064ee56395f9fc01","Sun, 17 Mar 2013 12:26:09 +0000","pimterry","Failing single-datapoint methods keep their original stack trace"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","7a12b7070aaa88712ed449c0a746741fd7e0237a","Fri, 18 Jan 2013 00:21:29 +0000","pimterry","Formatting"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","39d8b9e93ff544880f39a3497fb428c6cba5288b","Fri, 18 Jan 2013 00:14:40 +0000","pimterry","Improved PotentialAssignment description with better formatting, and handling for failed toString() calls. Refactored tests into proper unit tests closer wrapping the relevant bit of this code too."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","0ebb59e0dec269db0816c63fda6113b006b3de52","Sun, 13 Jan 2013 20:01:45 +0000","pimterry","Simplification of theory parameter names, since format automatically deals with toString() and nulls."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","236883d575f709a6311cec6b2fa34aeabc3835c6","Sun, 13 Jan 2013 09:33:21 +0000","pimterry","Add test and check for null, to stop null datapoints failing in message creation"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","1c9a283f2ee2cc1e03b4eeb2749752bbf956ecac","Sun, 13 Jan 2013 09:26:11 +0000","pimterry","Updated enum error message improvement to apply to all objects, and to also show variable names for these errors."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","8ae9a7228e772aaec9f6acdc5059ec38dda1c90d","Sat, 12 Jan 2013 20:48:49 +0000","pimterry","Improved the naming of error values in the case where they're java enums, since those already have meaningful names we can use."
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","12b9b787a161d4b460d4d6a14da6ac53cac3713b","Mon, 25 Jan 2010 23:46:25 -0500","David Saff","Category filter can look all the way up the Description stack"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","03411db6286fe1be8e5b549a8affec5de35fa10c","Sat, 8 Dec 2007 19:36:13 +0000","dsaff","Remove stale TODO comments"
"./src/main/java/org/junit/experimental/theories/PotentialAssignment.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/DataPoint.java","93d773835c0c6f70bc89bbf5e4d273c289423a64","Thu, 21 Mar 2013 22:55:04 +0000","pimterry","Merge branch 'master' into datapoints-exceptions-#449"
"./src/main/java/org/junit/experimental/theories/DataPoint.java","7e97140108f06260bd8ae027db2c019abb8ceee7","Tue, 19 Mar 2013 15:00:56 +0000","pimterry","Tweaked DataPoint javadoc to depluralise references to datapoints where possible"
"./src/main/java/org/junit/experimental/theories/DataPoint.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/main/java/org/junit/experimental/theories/DataPoint.java","0a9761833834ff96d8079e01dc010050ba4cfea2","Sat, 16 Mar 2013 23:18:22 +0000","pimterry","Added javadoc to the DataPoint annotation"
"./src/main/java/org/junit/experimental/theories/DataPoint.java","dbe8a972fadaed5d2b88f4dfa44328fa323b59a2","Tue, 12 Feb 2013 07:17:20 -0800","David Saff","Merge pull request #621 from pimterry/named-datapoints-#65"
"./src/main/java/org/junit/experimental/theories/DataPoint.java","72af29d7f52e6f3029fe8464c2b0bb63efab2fab","Wed, 6 Feb 2013 23:50:18 +0000","pimterry","Added specific targetting for the various theory annotations"
"./src/main/java/org/junit/experimental/theories/DataPoint.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/DataPoint.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/internal/BooleanSupplier.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","74fa3d0957e59a3f1122ed8eb69b9e65ef924252","Thu, 20 Feb 2014 18:59:02 +0700","Vladislav Bauer","Fix possible NPE in method equals (ParameterizedAssertionError)"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","4512777f2f994283323a2d1d253386c8c797f701","Mon, 2 Dec 2013 02:57:24 +0000","pimterry","Make parameterized assertion error extend assertion error"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","b421d0ebd66701187c10c2b0c7f519dc435531ae","Sun, 31 Mar 2013 23:52:41 +0100","Tim Perry","Added support for iterable datapoints"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","dbe771125873b707dfbc95f066649b4be8f247b2","Fri, 22 Mar 2013 15:14:16 +0000","pimterry","Refactored out ignorable exception type-matching to minimise duplicating of that logic"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","93d773835c0c6f70bc89bbf5e4d273c289423a64","Thu, 21 Mar 2013 22:55:04 +0000","pimterry","Merge branch 'master' into datapoints-exceptions-#449"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","38d91308c302eb4f0b5ed24e064ee56395f9fc01","Sun, 17 Mar 2013 12:26:09 +0000","pimterry","Failing single-datapoint methods keep their original stack trace"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","ccf0c0af551df541e40edb07d19a57072a8b14b1","Sat, 16 Mar 2013 22:35:49 +0000","pimterry","Changed single-valued datapoints back to deferred execution"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","278d76f285c4729700276e875ff8d69ea2ecfbc2","Wed, 13 Mar 2013 23:24:01 +0000","pimterry","Further theory optimisation to avoid calling datapoint methods for multi-valued datapoints"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","e9d4de8e15255b03b60e935390e517d4de90a73b","Wed, 13 Mar 2013 23:13:10 +0000","pimterry","Single-datapoint methods are now only called if the return types could be relevant, and theory parameter signatures are compared with types via a prebuilt map rather than reflection."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","cc8497f28e1d5a46d7940a0b36556154c83d6f7a","Mon, 11 Mar 2013 01:17:00 +0000","pimterry","Parameters are now matched on value, not defined type, for array and single-valued methods and fields."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","2ade5fd3aad123d6507b59ed5d48c8f030314f00","Sun, 10 Mar 2013 20:37:48 +0000","pimterry","Changed AllMembersSupplier to call single-valued methods at parameter assignment time, not parameter use time."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","3375d1c3f489fc5d2b5c6629c55867bbfe2a033f","Fri, 1 Feb 2013 01:32:42 +0000","pimterry","Various improvements to named datapoint support after review."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","4e8b0282c72c5da53b68d012e57ac41f36c73a68","Tue, 16 Oct 2012 11:05:51 +0200","sschroevers","Allow the array returned by a @DataPoints-annotated method to contain null values."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","61326c93276d31e249e57815edf93b695df5669d","Mon, 20 Aug 2012 21:11:43 +0200","Arjan Wulder","Changed variable name and removed the space before the equal sign"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","48aabe1b16bd288f74ac4ff92e3a38792533be39","Fri, 17 Aug 2012 23:57:54 +0200","Arjan Wulder","Fix for issue #55"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","13885b99cf6d2f4bd2efa2211f57c103bbc03263","Wed, 14 Sep 2011 10:09:08 -0400","David Saff","Fixes gh-291: Categories + Parameterized still does not work"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","cc24890c002286ca583518c471b16d143a69a62a","Mon, 20 Jul 2009 22:23:33 -0400","David Saff","org.junit.runner is javadoced"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","34dd9f4e2bebbcf694dcb855a29edff9243a10d3","Tue, 6 Jan 2009 04:02:00 +0000","kbeck","Fixed 2191102 and 2196462."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","c4e7dfe1ea2722c7d8a29373744e9a4a4f2f9c66","Mon, 18 Aug 2008 14:54:26 +0000","dsaff","Remove unused imports"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","30a039854fd7f8cda135222054b247c158b91fa7","Wed, 30 Jul 2008 20:28:46 +0000","dsaff","All javadoc added"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","a9815c0f1419e20b6282c3944195083bb38deaa9","Tue, 22 Jul 2008 17:50:44 +0000","kbeck","4.5 release candidate minus javadoc and release notes (surprise, surprise)"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","5042f695491027730cca2918616399d869de3973","Fri, 25 Jan 2008 14:11:31 +0000","dsaff","By passing TestClass to AllMembersSupplier, we can reuse the annotation parsing already supplied, and improve performance"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","4f405a49eba4822fbdda0c9415d2dc4fd82fb14b","Fri, 25 Jan 2008 13:49:59 +0000","dsaff","By passing TestClass to AllMembersSupplier, we can reuse the annotation parsing already supplied, and improve performance"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","0fa19baf003c5808831c59f8a839cc871586f30e","Fri, 7 Dec 2007 19:14:40 +0000","dsaff","Small runner definition cleanup"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","4d1d0bb9ee6926b5a85ebc2ad077eb31f94e1181","Fri, 7 Dec 2007 17:53:27 +0000","dsaff","if DataPoints annotation present on a field, and looking for Object parameter, interpret as array, not object"
"./src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/internal/SpecificDataPointsSupplier.java","50e3d1bc87b4b16f0617b6212252363f499397ab","Sun, 17 Mar 2013 00:30:46 +0000","pimterry","Added parameter to annotation to mark exceptions in datapoint methods as ignorable."
"./src/main/java/org/junit/experimental/theories/internal/SpecificDataPointsSupplier.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","07447b5f98989e4456be8ee8acd01cfb3d20b8c0","Sun, 6 Apr 2014 21:17:18 +0400","Brazhnikov","Small fixes, mainly in throws signatures"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","93d773835c0c6f70bc89bbf5e4d273c289423a64","Thu, 21 Mar 2013 22:55:04 +0000","pimterry","Merge branch 'master' into datapoints-exceptions-#449"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","5c2070d7cf981e2e103aef6fd0ef64c473331325","Sun, 17 Feb 2013 14:23:26 +0000","pimterry","Fixes #449, stopping AllMembersSupplier hiding DataPoint method exceptions"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","45524a9ddcd387fde3a20740e9c9c90ed71fec3a","Tue, 12 Feb 2013 00:48:33 +0000","pimterry","Changed exception signature for assignments reflective methods to support older Java versions"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","0030e51f286ed52ad4c2c44857c4a28525c83f93","Tue, 29 Jan 2013 01:26:10 +0000","pimterry","Minor further refactoring of Theory ParameterSupplier setup"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","1963b424c176742b711fb4226ce8f314d431813c","Tue, 29 Jan 2013 01:11:47 +0000","pimterry","Refactored FromDataPoints functionality to use SpecificDataPointsSupplier as a normal ParameterSupplier, by allowing ParameterSuppliers to take TestClasses in their constructors."
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","043e82844ef2c3c0961d98a34771c84f7a950d1a","Sun, 27 Jan 2013 18:42:21 +0000","pimterry","Added named datapoint(s) support to theories, for #65."
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","cc24890c002286ca583518c471b16d143a69a62a","Mon, 20 Jul 2009 22:23:33 -0400","David Saff","org.junit.runner is javadoced"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","5d957024be0d1b181879d48b7915b3b8aad8f5d5","Wed, 30 Jul 2008 19:23:24 +0000","dsaff","TestClass documented, validation logic pushed, almost entirely, to BlockJUnit4ClassRunner, and some holes noted."
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","123432f737b8d6e54937cf9f2e939b1e8f882e76","Wed, 23 Jul 2008 20:39:42 +0000","dsaff","TestClass and ParentRunner presently published proudly.  TestMethod and TestElement die deserved deaths."
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","4f405a49eba4822fbdda0c9415d2dc4fd82fb14b","Fri, 25 Jan 2008 13:49:59 +0000","dsaff","By passing TestClass to AllMembersSupplier, we can reuse the annotation parsing already supplied, and improve performance"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","18299dc8f8aaae0e64345795b2884eb7f42ad460","Fri, 28 Dec 2007 19:47:37 +0000","dsaff","Assignments depends on TestClass, rather than directly on java.lang.Class"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","03411db6286fe1be8e5b549a8affec5de35fa10c","Sat, 8 Dec 2007 19:36:13 +0000","dsaff","Remove stale TODO comments"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","5ca9ec43b61e5353296c69a307cd7b71e630b2e0","Fri, 7 Dec 2007 18:28:27 +0000","dsaff","Don't need to pass instance in to calculate values"
"./src/main/java/org/junit/experimental/theories/internal/Assignments.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/org/junit/experimental/theories/internal/EnumSupplier.java","af692868db814126bbac29a1f28f5adf30c6ce1c","Sun, 17 Mar 2013 01:14:17 +0000","pimterry","DataPoints are now autogenerated for boolean and enum parameters, if no sources are otherwise specified"
"./src/main/java/org/junit/experimental/max/CouldNotReadCoreException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/max/CouldNotReadCoreException.java","5501ad5d546427b228b208da15cec997e0b13cc8","Thu, 2 Jul 2009 17:24:29 -0400","David Saff","Finished Max javadoc"
"./src/main/java/org/junit/experimental/max/CouldNotReadCoreException.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/main/java/org/junit/experimental/max/MaxCore.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/max/MaxCore.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/experimental/max/MaxCore.java","c503e40d9ec79ba76b69dd31d7dd32648fa13cf2","Mon, 4 Jan 2010 22:40:54 -0500","David Saff","Deleted huge time-tripling test, MaxCore uses Plan for recursive descent"
"./src/main/java/org/junit/experimental/max/MaxCore.java","409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d","Mon, 6 Jul 2009 23:50:14 -0400","David Saff","Fixing Interceptor->Rule name changes"
"./src/main/java/org/junit/experimental/max/MaxCore.java","5501ad5d546427b228b208da15cec997e0b13cc8","Thu, 2 Jul 2009 17:24:29 -0400","David Saff","Finished Max javadoc"
"./src/main/java/org/junit/experimental/max/MaxCore.java","223b34b516467bcd9cb7ebc7f49549f2e7362dca","Wed, 1 Jul 2009 13:43:53 -0400","David Saff","Getting started on Interceptors javadoc"
"./src/main/java/org/junit/experimental/max/MaxCore.java","be06ab8bfe4991ce64d4dae0655833b060362cda","Mon, 15 Jun 2009 22:25:14 -0700","David Saff","TODO clean-up"
"./src/main/java/org/junit/experimental/max/MaxCore.java","b2ebdc0a3e15d90fe695953fd334408ec1afad77","Mon, 15 Jun 2009 22:24:01 -0700","David Saff","Move emptySuite method to Suite"
"./src/main/java/org/junit/experimental/max/MaxCore.java","e9e9b31a483fc562af4ebf5c59e7c89a8ef83459","Mon, 15 Jun 2009 22:18:42 -0700","David Saff","Clean up TODO's, including unnecessary exception catch in max"
"./src/main/java/org/junit/experimental/max/MaxCore.java","68e5927ecf49bb21c396c423c3669ada15b7fe1b","Mon, 6 Apr 2009 22:31:18 -0400","David Saff","Last changes with Kent."
"./src/main/java/org/junit/experimental/max/MaxCore.java","f3c211455b9e09be36e4bf7ccc499fbdd35a527a","Tue, 10 Mar 2009 10:44:22 -0400","David Saff","Finished release notes, I think"
"./src/main/java/org/junit/experimental/max/MaxCore.java","9a2e993c544a2cd1a0b93c9f59340910f51366b4","Mon, 9 Mar 2009 23:10:54 -0400","David Saff","Got rid of unnecessary forget() method"
"./src/main/java/org/junit/experimental/max/MaxCore.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/main/java/org/junit/experimental/max/MaxCore.java","6eb76c8b08c738823546fe5b935b653951fc773e","Tue, 24 Feb 2009 00:00:44 -0500","David Saff","Experiment in filtering JUnit 3 warnings through to the command line"
"./src/main/java/org/junit/experimental/max/MaxCore.java","d9c81356e3a2fbb165c71b32d63d0cc39a1bd861","Wed, 28 Jan 2009 04:18:38 +0000","kbeck","Preparing for 4.6"
"./src/main/java/org/junit/experimental/max/MaxCore.java","421ab330509a53302f56b209595f55b23bfdfc0e","Tue, 18 Nov 2008 22:52:31 +0000","dsaff","Max now runs the right number of tests"
"./src/main/java/org/junit/experimental/max/MaxCore.java","8d9ac8d65204fe8cd7e1d9146f123a461952bae9","Wed, 12 Nov 2008 22:17:56 +0000","kbeck","Zeroing in on the JUnitMax error where it runs JUnit 3.8 tests multiple times."
"./src/main/java/org/junit/experimental/max/MaxCore.java","85578d48f6459a05665329faa9b52a861e9142cb","Thu, 6 Nov 2008 20:15:27 +0000","kbeck","Now sorting tests globally"
"./src/main/java/org/junit/experimental/max/MaxCore.java","d6662fcc06ec7b07c696eb703c47d3731e4e11c7","Fri, 31 Oct 2008 00:24:00 +0000","kbeck","Oops, checked in some scaffolding and temporary changes"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","d2da6a55bca4582c9a469f568df472a00e90ddf4","Wed, 15 Jul 2009 22:25:24 -0400","David Saff","merged"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","a1813f62876a6c7227ec5c866b621e01cda79664","Tue, 7 Jul 2009 23:58:33 -0400","David Saff","Done with interceptor javadoc"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","54917b88aab026dabb4541276ed875117c1e1faa","Tue, 7 Jul 2009 11:50:14 +0800","David Saff","Fixing Interceptor->Rule name changes"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","734ab5187c068599352e5fdc7374c1334d484fef","Tue, 7 Jul 2009 10:01:56 +0800","David Saff","StatementInterceptor takes Object target"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","303f74183714223503216efa037373bfb04bfe1a","Fri, 3 Jul 2009 05:24:29 +0800","David Saff","Finished Max javadoc"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","dc5b58961ab0edd69e5457b122a5ed9185ecd3ec","Tue, 16 Jun 2009 13:33:36 +0800","David Saff","Clean up TODOs in ComparisonCriteria and subclasses"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","24466485d2dfb58818ac3abf222558a230cbf4cb","Tue, 16 Jun 2009 13:29:46 +0800","David Saff","Clean up exceptions in readHistory"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","b4a19d903c5ec7e5ddad0776e8f611338b58be08","Tue, 16 Jun 2009 13:18:42 +0800","David Saff","Clean up TODO's, including unnecessary exception catch in max"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d","Mon, 6 Jul 2009 23:50:14 -0400","David Saff","Fixing Interceptor->Rule name changes"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","8e313a1e58a56694c0441b2fa60974fa8e1bfe31","Mon, 6 Jul 2009 22:01:56 -0400","David Saff","StatementInterceptor takes Object target"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","5501ad5d546427b228b208da15cec997e0b13cc8","Thu, 2 Jul 2009 17:24:29 -0400","David Saff","Finished Max javadoc"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","8088946a72634d8d6f91db157f4cbe9a2931d4ea","Mon, 15 Jun 2009 22:33:36 -0700","David Saff","Clean up TODOs in ComparisonCriteria and subclasses"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","fea583afc60dfdd67dec3349f0e0203d6cb3a69f","Mon, 15 Jun 2009 22:29:46 -0700","David Saff","Clean up exceptions in readHistory"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","e9e9b31a483fc562af4ebf5c59e7c89a8ef83459","Mon, 15 Jun 2009 22:18:42 -0700","David Saff","Clean up TODO's, including unnecessary exception catch in max"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a","Mon, 4 May 2009 15:46:46 -0400","David Saff","Reverted needless MaxHistory changes"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","4eec09ae1d6eb5cecfa82e222f0e7d085e96f0ba","Mon, 4 May 2009 15:30:55 -0400","David Saff","merged"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","c7874453182cde8e7b38cf3ce356d16d3d1dcde8","Wed, 29 Apr 2009 14:19:36 -0700","KentBeck","Fixed error message for malformed JUnit 3.8 test."
"./src/main/java/org/junit/experimental/max/MaxHistory.java","3d6e99e93d7ba7360bfed1c213114648e8c70849","Wed, 29 Apr 2009 16:02:52 -0400","David Saff","Removed commented-out code"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","9a2e993c544a2cd1a0b93c9f59340910f51366b4","Mon, 9 Mar 2009 23:10:54 -0400","David Saff","Got rid of unnecessary forget() method"
"./src/main/java/org/junit/experimental/max/MaxHistory.java","474df716f498aa2695c422cceb3e46cad999e972","Mon, 2 Mar 2009 23:49:40 -0500","David Saff","Some test edits for release notes, but especially experimenting with MaxComputerTest: can MaxCore be written in terms of the Computer abstraction?"
"./src/main/java/org/junit/rules/Verifier.java","05d81436e99447f08bf1537ea60b5f11ebda2107","Thu, 31 Jan 2013 05:52:53 -0500","Romero Silva","Fix for issue #587. Wrong use of round brackets on first line of code sample."
"./src/main/java/org/junit/rules/Verifier.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/Verifier.java","eaa8d51a642df066faaa8f3c33020889fd0b758c","Thu, 2 Aug 2012 14:04:10 -0700","David Saff","Merge pull request #436 from matthewfarwell/testrule-javadoc"
"./src/main/java/org/junit/rules/Verifier.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/Verifier.java","80d4bc3616b1024b627a968b18d03b86516de69b","Fri, 25 May 2012 15:06:56 +0200","Matthew Farwell","Fixes #51 Verifier is abstract to indicate that it should be extended"
"./src/main/java/org/junit/rules/Verifier.java","30ecbbc0ae0006da8b42468173bd9d95741982aa","Fri, 25 May 2012 14:29:19 +0200","Matthew Farwell","Fixes #427 inconsistent javadoc for test rules The examples for some test rules used"
"./src/main/java/org/junit/rules/Verifier.java","daa2e4d88de819b8b05c3d07f51f7a2e3adfa707","Thu, 19 Jan 2012 11:54:23 +0100","Matthew Farwell","Several javadoc referred to MethodRule when they should have referred to TestRule"
"./src/main/java/org/junit/rules/Verifier.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/Verifier.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/Verifier.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/rules/Verifier.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/TestWatchman.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/rules/TestWatchman.java","bb91daf8e0939d787ffb5a3eda05c2d626cd9851","Wed, 24 Oct 2012 12:31:00 -0700","Kevin Cooney","Fix formatting"
"./src/main/java/org/junit/rules/TestWatchman.java","dc44abf520611a8722e75ba1d32df6a28183e4e3","Wed, 24 Oct 2012 11:58:14 -0700","Kevin Cooney","Merge branch 'master' into undeprecate"
"./src/main/java/org/junit/rules/TestWatchman.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/TestWatchman.java","bbacbd93334540a5054bb50488f662c3f81a9c00","Sat, 29 Sep 2012 12:12:35 -0700","Kevin Cooney","Remove @Deprecated from MethodRule and related methods."
"./src/main/java/org/junit/rules/TestWatchman.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/TestWatchman.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/main/java/org/junit/rules/TestWatchman.java","308768863b78f3a6345e25d7f9d35892c2de5a01","Tue, 9 Nov 2010 09:45:14 -0500","David Saff","Renamed TestRuleTestWatchman to TestWatcher, updated docs"
"./src/main/java/org/junit/rules/TestWatchman.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/rules/TestWatchman.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/ExpectedException.java","15bd929c08059a6c7bf83363e9b84d116ef46540","Wed, 12 Feb 2014 00:07:06 -0500","dhasday","Create AssumptionViolatedException in org.junit and deprecate the one in org.junit.internal"
"./src/main/java/org/junit/rules/ExpectedException.java","f40f106b3721c9b3f9a7d535df1027588d64dcaf","Fri, 18 Oct 2013 01:13:22 +0200","Stefan Birkner","Allow expectation as parameter of custom message."
"./src/main/java/org/junit/rules/ExpectedException.java","8b35f0c0a07b80f068d78bf03025bcebef760a1e","Wed, 4 Sep 2013 01:43:27 +0200","Stefan Birkner","Extract isAnyExceptionExpected()."
"./src/main/java/org/junit/rules/ExpectedException.java","bb13b318cd79a68470e93c79635090c7bb565475","Wed, 4 Sep 2013 01:39:32 +0200","Stefan Birkner","Revert changes of 128553f. Fixes #687."
"./src/main/java/org/junit/rules/ExpectedException.java","41f96743522db61b14ef2c8ca7d719a226b9f153","Tue, 6 Aug 2013 22:10:12 +0200","Stefan Birkner","Rewrite parts of the documentation."
"./src/main/java/org/junit/rules/ExpectedException.java","6384edfffe7f8a2850d2bcde9a16a8e780734ebe","Sun, 23 Dec 2012 15:12:09 +0100","Urs Metz","fail when AssertionError expected but not thrown"
"./src/main/java/org/junit/rules/ExpectedException.java","cc87f655c2fe666d0f4e3322f37c570449ded9ff","Wed, 14 Nov 2012 16:52:18 -0500","Corey Vaillancourt","Fixed JDK5 backwards compatibility issue"
"./src/main/java/org/junit/rules/ExpectedException.java","2246c5a6de14ae94f3d29a82b165653e67ca93a1","Tue, 13 Nov 2012 18:50:06 -0500","Corey Vaillancourt","Converted tab to spaces"
"./src/main/java/org/junit/rules/ExpectedException.java","467dd0725eb20d018339ae843e895f9cabcfb988","Tue, 13 Nov 2012 18:48:31 -0500","Corey Vaillancourt","Refactored logic out of failDueToMissingException"
"./src/main/java/org/junit/rules/ExpectedException.java","b521f0caadb99cab821730ad5d451e826d38e0a9","Mon, 12 Nov 2012 04:59:41 -0500","Corey Vaillancourt","Fixed reportMissingExceptionWithMessage Javadoc"
"./src/main/java/org/junit/rules/ExpectedException.java","3791a960b08c0f14e2d6cb1c72b243f97d0a28e6","Sun, 11 Nov 2012 21:31:01 -0500","Corey Vaillancourt","Removed redundant phrase from parameter name"
"./src/main/java/org/junit/rules/ExpectedException.java","bcf2c17851197328bb7bc008f916a6648de193aa","Sun, 11 Nov 2012 21:29:12 -0500","Corey Vaillancourt","Converted tabs to spaces"
"./src/main/java/org/junit/rules/ExpectedException.java","a2ca18438f84e16d5dc1e456dcd9ec6be0cd4b7a","Sun, 11 Nov 2012 21:24:34 -0500","Corey Vaillancourt","Changed exception message method name"
"./src/main/java/org/junit/rules/ExpectedException.java","8f0902e5503f4b2fd5a7317ae954a136aa8af94b","Fri, 9 Nov 2012 23:03:25 -0500","Corey Vaillancourt","Implementation for issue #144"
"./src/main/java/org/junit/rules/ExpectedException.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/ExpectedException.java","4604008957de5f2dca07666c5c52092983b08853","Wed, 22 Aug 2012 13:31:36 +0200","Marc Philipp","Use org.junit.Assert instead of junit.framework.Assert"
"./src/main/java/org/junit/rules/ExpectedException.java","e77e1c45e873aa9bc1e15db632180eb81d62d5e2","Fri, 20 Jul 2012 14:18:42 +0200","Marc Philipp","Linear control flow in ExpectedExceptionStatement (refactoring)"
"./src/main/java/org/junit/rules/ExpectedException.java","ec1a5c3ffcc4b9b0dda6e9a683ea51103f55853e","Fri, 20 Jul 2012 14:13:12 +0200","Marc Philipp","ExpectedException uses builder instead of custom matcher"
"./src/main/java/org/junit/rules/ExpectedException.java","872faeab15115635b3260001979ae036e64e29bf","Thu, 19 Jul 2012 21:58:39 +0200","Marc Philipp","Rename `and` methods to `andAlso`"
"./src/main/java/org/junit/rules/ExpectedException.java","23793cd92c4c0f8449e2edaec745437c5ebbd619","Thu, 19 Jul 2012 13:07:43 +0200","Marc Philipp","Custom matcher for ExpectedException (refactoring)"
"./src/main/java/org/junit/rules/ExpectedException.java","ee037247a9a03d8ac2e584d52a544b9733f2c016","Sun, 15 Jul 2012 13:53:54 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/rules/ExpectedException.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/ExpectedException.java","4845736a4bc4c076cd676137407c55d63da8da4d","Mon, 21 May 2012 13:31:54 +0200","Petter Måhlén","switched to using tabs instead of spaces for indentation"
"./src/main/java/org/junit/rules/ExpectedException.java","39d30b21b3a632f158274c6937c13499cd0758f3","Sun, 22 Apr 2012 14:07:57 +0200","Petter Måhlén","merged with master"
"./src/main/java/org/junit/rules/ExpectedException.java","6b943e564adcc9a7106e54c24eb5d022bed1462f","Thu, 19 Apr 2012 14:05:53 +0200","Petter Måhlén","changed the expectedCause() method to accept a Matcher instead of an explicit Throwable and made some documentation changes"
"./src/main/java/org/junit/rules/ExpectedException.java","e01ccf14711bfcb6b0c2fb5ec4bf541e8e78b721","Thu, 12 Apr 2012 21:55:18 +0200","Marc Philipp","Merge remote-tracking branch 'KentBeck/master' into hamcrest-1.3"
"./src/main/java/org/junit/rules/ExpectedException.java","8b9dfefada78a74b6b1fa34ff0bab298267f8210","Tue, 3 Apr 2012 21:24:58 +0200","Marc Philipp","Deprecate TypeSafeMatcher which is now provided by Hamcrest"
"./src/main/java/org/junit/rules/ExpectedException.java","d9cccce5034bb9876221d271914471b205220061","Wed, 21 Mar 2012 22:48:38 +0100","Marc Philipp","Upgrade to Hamcrest 1.3.0 RC2"
"./src/main/java/org/junit/rules/ExpectedException.java","a538d25ae50887dc9395f2f59ad5040752c0ec4f","Tue, 6 Mar 2012 19:33:35 +0100","Stefan Birkner","Apply code review."
"./src/main/java/org/junit/rules/ExpectedException.java","3b8708636ffc1a9fc970b66db73c09095dabc2e2","Wed, 8 Feb 2012 17:08:12 +0100","Petter Måhlén","added an 'expectCause(Throwable cause)' to the ExpectedException rule"
"./src/main/java/org/junit/rules/ExpectedException.java","df70c1087de9d3827656ede187371bbe29d2a974","Tue, 27 Sep 2011 05:19:46 +0200","Stefan Birkner","the two handle... methods are returning the rule"
"./src/main/java/org/junit/rules/ExpectedException.java","128553fc50758932f02fc6e13a3e25ef6a711152","Thu, 22 Sep 2011 00:58:18 +0200","Stefan Birkner","Fixes gh-121 (ExpectedException handles JUnit exceptions)"
"./src/main/java/org/junit/rules/ExpectedException.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/ExpectedException.java","e857122bff2a9774c4f44df4a7d531b902e406df","Fri, 7 Jan 2011 20:53:42 -0800","Kevin Cooney","Fix issue 30. Make TestWatcher abstract."
"./src/main/java/org/junit/rules/ExpectedException.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/ExpectedException.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/rules/ExpectedException.java","4041354a3a7629b74970e0624b7564736c20e1e3","Tue, 9 Nov 2010 08:57:34 -0500","David Saff","Starting to get rid of deprecation warnings"
"./src/main/java/org/junit/rules/ExpectedException.java","15815f55d2e9ae567ef8fe0a172f498b87a3a880","Mon, 20 Jul 2009 22:01:25 -0400","David Saff","Last errors gone from Hamcrest rollback"
"./src/main/java/org/junit/rules/ExpectedException.java","c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc","Mon, 20 Jul 2009 10:41:18 -0400","David Saff","Cleaning up compile errors from reverting hamcrest change"
"./src/main/java/org/junit/rules/ExpectedException.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java","ec1a5c3ffcc4b9b0dda6e9a683ea51103f55853e","Fri, 20 Jul 2012 14:13:12 +0200","Marc Philipp","ExpectedException uses builder instead of custom matcher"
"./src/main/java/org/junit/rules/TestName.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/TestName.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/TestName.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/TestName.java","308768863b78f3a6345e25d7f9d35892c2de5a01","Tue, 9 Nov 2010 09:45:14 -0500","David Saff","Renamed TestRuleTestWatchman to TestWatcher, updated docs"
"./src/main/java/org/junit/rules/TestName.java","d21d4edb6a5c55a3d8930dd26762a26cad67d827","Tue, 9 Nov 2010 09:11:59 -0500","David Saff","Get rid of MethodRule deprecation warnings"
"./src/main/java/org/junit/rules/TestName.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/TemporaryFolder.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/TemporaryFolder.java","2568203bdebd5a4a4ad9aa74b1d8369d22f668a3","Mon, 13 Aug 2012 07:38:45 +0200","Arjan Wulder","Replaced IllegalArgumentException for IOException"
"./src/main/java/org/junit/rules/TemporaryFolder.java","59e5333b24d0e433de10d74c69e5de7700c6b744","Sun, 12 Aug 2012 20:22:55 +0200","Arjan Wulder","Fixed indenting on several lines"
"./src/main/java/org/junit/rules/TemporaryFolder.java","6b822aa3037d731669ace4a4bb6b859bf9986def","Sun, 12 Aug 2012 20:19:05 +0200","Arjan Wulder","Changes suggested by kcooney"
"./src/main/java/org/junit/rules/TemporaryFolder.java","6012fa3b4fe4e924311d42e05e216092e425cbf9","Sun, 12 Aug 2012 09:26:57 +0200","Arjan Wulder","Issue 478: Throw an IllegalStateException when the folder already exists"
"./src/main/java/org/junit/rules/TemporaryFolder.java","67e43ab827da24baa6477e33e4e883a36dfcf645","Tue, 19 Jun 2012 13:58:32 +0200","Matthew Farwell","Fixes #441 fix for issue 283 (recursive temp folders) caused incompatibility Put back in the method folder.newFolder(String) that was removed in #283. Tests that the method is there using reflection."
"./src/main/java/org/junit/rules/TemporaryFolder.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/TemporaryFolder.java","ecf0ea118c97bcf43ebe8bf3fd65794ca6c0301b","Tue, 22 May 2012 17:25:57 +0100","Simon Stewart","Responding to review comment"
"./src/main/java/org/junit/rules/TemporaryFolder.java","bd8b2df76a813d8b16242500b54d662e3e427a64","Tue, 22 May 2012 13:52:56 +0100","Simon Stewart","Responding to review comment"
"./src/main/java/org/junit/rules/TemporaryFolder.java","347c60e3dc0120029e2a3ad566b1ad2b0aac411f","Fri, 18 May 2012 11:50:52 +0100","Simon Stewart","Add the ability to define the root directory for the temporary folder"
"./src/main/java/org/junit/rules/TemporaryFolder.java","5baa714c5fe4d16dca9dea8c73c6d8702dfd71f2","Tue, 10 Apr 2012 21:39:35 +0200","Arjen Stolk","TemporaryFolder.newFile should fail if file already exists (fixes #413)"
"./src/main/java/org/junit/rules/TemporaryFolder.java","2d3090bf96357c0d9387a4e8f87525f776e52799","Tue, 18 Oct 2011 00:33:35 +0200","unknown","Fixes for issue #342"
"./src/main/java/org/junit/rules/TemporaryFolder.java","e55796904be214741701070b723acd895b25e995","Tue, 13 Sep 2011 16:43:23 -0400","David Saff","Merge 4.9.1 into master"
"./src/main/java/org/junit/rules/TemporaryFolder.java","ce867738993339a28fd7b3a25ff1e74dbc0013aa","Tue, 24 May 2011 08:27:19 +0200","Daniel Rothmaler","Implemented random temp file/folder creation"
"./src/main/java/org/junit/rules/TemporaryFolder.java","b00a3cdcaaf0bb554ed0955f98d9f1d759710c27","Mon, 27 Jun 2011 22:00:39 -0300","Rodolfo Liviero","temporary tree folders"
"./src/main/java/org/junit/rules/TemporaryFolder.java","70fe94d031c7066899fc464cd4171db0884f1356","Sun, 7 Aug 2011 01:38:12 +0300","Esko Luontola","Fixes #278: TemporaryFolder creates files in the current working directory if applying the rule fails"
"./src/main/java/org/junit/rules/TemporaryFolder.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/Timeout.java","c52397d4d704a85499a17e9d3a2c1bcb8c5f0906","Mon, 14 Apr 2014 11:52:28 -0400","Mike Drob","fixes #875"
"./src/main/java/org/junit/rules/Timeout.java","c1895d120e68c17d6dd4378884e53be0cc351369","Fri, 15 Nov 2013 12:06:50 -0800","Adam Beneschan","changes to address kcooney's concerns about thread safety on issue #742"
"./src/main/java/org/junit/rules/Timeout.java","dd395b49be740e7c57ffe06fc6db07625c1e1d26","Fri, 18 Oct 2013 19:02:19 -0700","Adam Beneschan","added note that feature is experimental"
"./src/main/java/org/junit/rules/Timeout.java","3e8e865039fe6531666afb860961d787065b589e","Fri, 11 Oct 2013 16:58:18 -0700","Adam Beneschan","Check for stuck threads now must be enabled in a Rule"
"./src/main/java/org/junit/rules/Timeout.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/org/junit/rules/Timeout.java","337b6dc9bca623eab0820eab89245f42bbbb9570","Thu, 15 Nov 2012 01:03:54 +0100","Tibor Digana","cannonical style of infinite Java loop in Javadoc, new line avoided"
"./src/main/java/org/junit/rules/Timeout.java","11039f25897fe4daba274292a49a078afa87991b","Thu, 15 Nov 2012 00:08:53 +0100","Tibor Digana","deleted 2 examples and improved javadoc, improved javadoc in constructor, added factories, prepared for 4.12"
"./src/main/java/org/junit/rules/Timeout.java","5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a","Tue, 13 Nov 2012 20:53:00 +0100","Tibor Digana","param=millis in old constructor, original units, added infinite loop test"
"./src/main/java/org/junit/rules/Timeout.java","544e5ba3a3034932879604b72fb6f8526d27eb50","Mon, 12 Nov 2012 23:33:29 +0100","Tibor Digana","forked from #450 and improved"
"./src/main/java/org/junit/rules/Timeout.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/Timeout.java","eaa8d51a642df066faaa8f3c33020889fd0b758c","Thu, 2 Aug 2012 14:04:10 -0700","David Saff","Merge pull request #436 from matthewfarwell/testrule-javadoc"
"./src/main/java/org/junit/rules/Timeout.java","caefa620d3a82613461420987fe8a88fc1e6f988","Fri, 1 Jun 2012 21:20:25 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/Timeout.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/Timeout.java","30ecbbc0ae0006da8b42468173bd9d95741982aa","Fri, 25 May 2012 14:29:19 +0200","Matthew Farwell","Fixes #427 inconsistent javadoc for test rules The examples for some test rules used"
"./src/main/java/org/junit/rules/Timeout.java","daa2e4d88de819b8b05c3d07f51f7a2e3adfa707","Thu, 19 Jan 2012 11:54:23 +0100","Matthew Farwell","Several javadoc referred to MethodRule when they should have referred to TestRule"
"./src/main/java/org/junit/rules/Timeout.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/Timeout.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/Timeout.java","4041354a3a7629b74970e0624b7564736c20e1e3","Tue, 9 Nov 2010 08:57:34 -0500","David Saff","Starting to get rid of deprecation warnings"
"./src/main/java/org/junit/rules/Timeout.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/ExternalResource.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/ExternalResource.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/ExternalResource.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/ExternalResource.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/ExternalResource.java","81b50e9f3bdb66543d07e7349026bd3b447f433e","Tue, 16 Nov 2010 10:18:17 -0500","David Saff","TODO cleanup for 4.9 lead-up"
"./src/main/java/org/junit/rules/ExternalResource.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/rules/ExternalResource.java","c7895eb8695d79b14ff2f903fbb2fab3e52e4c43","Mon, 25 Oct 2010 22:49:47 -0400","David Saff","ClassRule uses a generic, horribly named BisectionRule, and category opt-out logic is more general"
"./src/main/java/org/junit/rules/ExternalResource.java","568e29c871ea144e12f273dc7e12c949a5a507da","Wed, 19 May 2010 22:24:16 -0400","dsaff","Adding ClassRules"
"./src/main/java/org/junit/rules/ExternalResource.java","a30e87b6ac67f14a42b97d427bb1c8c6ba18cd87","Thu, 8 Apr 2010 13:04:17 -0400","dsaff","Clean-up after review in github's compare view.  Thanks, github."
"./src/main/java/org/junit/rules/ExternalResource.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/org/junit/rules/ExternalResource.java","8dd7600e8634709c2e673e825e3f8cea58ff3c65","Mon, 1 Feb 2010 14:09:52 -0500","David Saff","Temporarily here to keep master clean"
"./src/main/java/org/junit/rules/ExternalResource.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/TestWatcher.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/org/junit/rules/TestWatcher.java","be6123772ffa7bc580ea44c2db488852255c401f","Wed, 24 Oct 2012 23:10:24 +0200","Mark Michaelis","Readjust due to Issue KentBeck/junit#426 coding style."
"./src/main/java/org/junit/rules/TestWatcher.java","6bc83a0d3a67e36adc2733a125bf928c49f702f9","Wed, 24 Oct 2012 22:45:46 +0200","Mark Michaelis","Merge Master to complete KentBeck/junit#521"
"./src/main/java/org/junit/rules/TestWatcher.java","6fb53a7e272a6ecc232840c96b4cfe5235a8f823","Wed, 24 Oct 2012 22:30:54 +0200","Mark Michaelis","Rename variable name for exception from "t" to "e""
"./src/main/java/org/junit/rules/TestWatcher.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/TestWatcher.java","c63e0913154a8f01e9f78fef9de23fffd7a1a717","Mon, 1 Oct 2012 08:57:53 +0200","Mark Michaelis","TestWatcher.skipped(): Make test pass"
"./src/main/java/org/junit/rules/TestWatcher.java","6caeeb1e1579cae1cd9ede58f38186e07da7f295","Mon, 27 Aug 2012 01:50:22 +0200","Mark Michaelis","Merge remote branch 'remotes/upstream/master'"
"./src/main/java/org/junit/rules/TestWatcher.java","eaa8d51a642df066faaa8f3c33020889fd0b758c","Thu, 2 Aug 2012 14:04:10 -0700","David Saff","Merge pull request #436 from matthewfarwell/testrule-javadoc"
"./src/main/java/org/junit/rules/TestWatcher.java","fbdf79366c3e23e19f17b89093aaa54442802edf","Thu, 2 Aug 2012 11:57:30 -0700","David Saff","Merge pull request #452 from davidhart82/issue433"
"./src/main/java/org/junit/rules/TestWatcher.java","08c3b3aa633385373b08285225e58c6ee0ab8092","Mon, 25 Jun 2012 19:54:41 +0200","Mark Michaelis","Continues Issue 296: TestWatchman.failed should not be invoked for AssumptionViolatedExceptions see https://github.com/KentBeck/junit/issues/296"
"./src/main/java/org/junit/rules/TestWatcher.java","2162def2d4eefae0c5668586b837af4ecd4aed91","Sun, 24 Jun 2012 16:41:43 +0100","davidhart82","More tests; fix case if failed and finished throw exceptions"
"./src/main/java/org/junit/rules/TestWatcher.java","8c1c0e7ee79860a603b68d8a9335ce0bce966160","Sun, 24 Jun 2012 16:02:03 +0100","davidhart82","Throw MulitpleFailureException"
"./src/main/java/org/junit/rules/TestWatcher.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/TestWatcher.java","30ecbbc0ae0006da8b42468173bd9d95741982aa","Fri, 25 May 2012 14:29:19 +0200","Matthew Farwell","Fixes #427 inconsistent javadoc for test rules The examples for some test rules used"
"./src/main/java/org/junit/rules/TestWatcher.java","f62f699850e96b31b46cc6241f10ce0e90637cf1","Thu, 24 May 2012 12:47:52 +0200","Matthew Farwell","TestWatcher javadoc was not correct for example method names"
"./src/main/java/org/junit/rules/TestWatcher.java","daa2e4d88de819b8b05c3d07f51f7a2e3adfa707","Thu, 19 Jan 2012 11:54:23 +0100","Matthew Farwell","Several javadoc referred to MethodRule when they should have referred to TestRule"
"./src/main/java/org/junit/rules/TestWatcher.java","ada8735cda0fe94c9cfea9b8fb2012488a3a44e6","Fri, 9 Sep 2011 02:32:53 +0200","Stefan Birkner","fixed issue #296 (TestWatcher and TestWatchman don't call fail when assumption is violated)"
"./src/main/java/org/junit/rules/TestWatcher.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/TestWatcher.java","e857122bff2a9774c4f44df4a7d531b902e406df","Fri, 7 Jan 2011 20:53:42 -0800","Kevin Cooney","Fix issue 30. Make TestWatcher abstract."
"./src/main/java/org/junit/rules/TestWatcher.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/TestWatcher.java","308768863b78f3a6345e25d7f9d35892c2de5a01","Tue, 9 Nov 2010 09:45:14 -0500","David Saff","Renamed TestRuleTestWatchman to TestWatcher, updated docs"
"./src/main/java/org/junit/rules/MethodRule.java","d45ae50b94e9473ad34d51be69ad4e7972fdbe44","Wed, 22 May 2013 22:05:58 +0200","Urs Metz","fix typo in javadoc"
"./src/main/java/org/junit/rules/MethodRule.java","bb91daf8e0939d787ffb5a3eda05c2d626cd9851","Wed, 24 Oct 2012 12:31:00 -0700","Kevin Cooney","Fix formatting"
"./src/main/java/org/junit/rules/MethodRule.java","dc44abf520611a8722e75ba1d32df6a28183e4e3","Wed, 24 Oct 2012 11:58:14 -0700","Kevin Cooney","Merge branch 'master' into undeprecate"
"./src/main/java/org/junit/rules/MethodRule.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/MethodRule.java","bbacbd93334540a5054bb50488f662c3f81a9c00","Sat, 29 Sep 2012 12:12:35 -0700","Kevin Cooney","Remove @Deprecated from MethodRule and related methods."
"./src/main/java/org/junit/rules/MethodRule.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/MethodRule.java","daa2e4d88de819b8b05c3d07f51f7a2e3adfa707","Thu, 19 Jan 2012 11:54:23 +0100","Matthew Farwell","Several javadoc referred to MethodRule when they should have referred to TestRule"
"./src/main/java/org/junit/rules/MethodRule.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/rules/MethodRule.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/ErrorCollector.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/ErrorCollector.java","caefa620d3a82613461420987fe8a88fc1e6f988","Fri, 1 Jun 2012 21:20:25 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/ErrorCollector.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/ErrorCollector.java","5c4d8c62e341acb7d46eff730a19b2ce041c2dfe","Mon, 23 May 2011 18:35:16 +0200","Daniel Rothmaler","invoke overloaded method with default value, instead of copy&paste"
"./src/main/java/org/junit/rules/ErrorCollector.java","da545cc5f425dd1392ffaa7d2cb8be3b2ef8a179","Fri, 20 May 2011 10:40:09 +0200","Daniel Rothmaler","added ErrorCollector.checkThat overload, that takes a reason"
"./src/main/java/org/junit/rules/ErrorCollector.java","b3789b3f879d34bbe968d5aa51d15c8856b9d102","Fri, 12 Nov 2010 17:30:03 -0800","Kevin Cooney","Create MultipleFailureException in org.junit.runners.model and deprecate the one in org.junit.internal.runners.model. Update MultipleFailureException to have a useful message."
"./src/main/java/org/junit/rules/ErrorCollector.java","99a84a542f2ac532a8425fa0a77884902b1c01b0","Wed, 15 Jul 2009 22:17:25 -0400","David Saff","org.junit.Rule, org.junit.Rules"
"./src/main/java/org/junit/rules/RunRules.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/RunRules.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/RunRules.java","0128bff582b2d10bffff9ff497c3e6f697958b83","Fri, 7 Jan 2011 19:24:41 -0800","Kevin Cooney","Replace TestRule.applyAll() with RunRules."
"./src/main/java/org/junit/rules/TestRule.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/TestRule.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/TestRule.java","8440169a16f2eec18a869dc5804e3686aafb25d8","Wed, 9 Feb 2011 22:18:37 -0800","Kevin Cooney","Change TestRule back to an interface. Fix TestWatcher methods to be protected."
"./src/main/java/org/junit/rules/TestRule.java","d6ccf5b0fa4e0d62eac42425a593b870af1247bd","Tue, 11 Jan 2011 20:28:05 -0800","Kevin Cooney","Merge branch 'master' into abstract-test-rule"
"./src/main/java/org/junit/rules/TestRule.java","9d8bb069f68e2194db742981972c8930381b62c2","Tue, 11 Jan 2011 15:56:46 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/rules/TestRule.java","0128bff582b2d10bffff9ff497c3e6f697958b83","Fri, 7 Jan 2011 19:24:41 -0800","Kevin Cooney","Replace TestRule.applyAll() with RunRules."
"./src/main/java/org/junit/rules/TestRule.java","7f6173aa593b07856c1ca73ffaf87ff10ea15d4c","Fri, 7 Jan 2011 17:44:42 -0800","Kevin Cooney","Revert "Make TestRule an abstract class. Specify target of the rule annotations.""
"./src/main/java/org/junit/rules/TestRule.java","c20ddf922ea1767eb9944cfb436dc9384b884d24","Fri, 7 Jan 2011 13:57:57 -0500","David Saff","javadoc fixes on TestRule"
"./src/main/java/org/junit/rules/TestRule.java","e7a0111ce26bbce9c81f471ff925653fe0ead70d","Fri, 7 Jan 2011 13:35:20 -0500","David Saff","Merge branch 'run-leaf' of https://github.com/kcooney/junit into kcooney-run-leaf"
"./src/main/java/org/junit/rules/TestRule.java","5f25ca318bc2b35ecf8526c08a1e3b3e17d375da","Fri, 7 Jan 2011 13:03:18 -0500","David Saff","Fix bad javadoc and bad release notes"
"./src/main/java/org/junit/rules/TestRule.java","8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf","Tue, 4 Jan 2011 21:09:02 -0800","Kevin Cooney","Make TestRule an abstract class. Specify target of the rule annotations."
"./src/main/java/org/junit/rules/TestRule.java","8d26b450670647c847aa0ba1dd47a9c54865c63d","Tue, 28 Dec 2010 09:46:14 -0500","David Saff","further documentation cleanup, especially around TestRule"
"./src/main/java/org/junit/rules/TestRule.java","0815c4d619b177431e64a2485baa0f746f3e2886","Mon, 25 Oct 2010 23:13:50 -0400","David Saff","Added TestRule, much better interface for a much better world."
"./src/main/java/org/junit/rules/RuleChain.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/org/junit/rules/RuleChain.java","eaa8d51a642df066faaa8f3c33020889fd0b758c","Thu, 2 Aug 2012 14:04:10 -0700","David Saff","Merge pull request #436 from matthewfarwell/testrule-javadoc"
"./src/main/java/org/junit/rules/RuleChain.java","caefa620d3a82613461420987fe8a88fc1e6f988","Fri, 1 Jun 2012 21:20:25 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/RuleChain.java","0e1aca2c28858ac1ad77ef40f704ec1b610c9d65","Fri, 1 Jun 2012 20:55:02 +0200","Matthew Farwell","Fixes #67 no since javadoc"
"./src/main/java/org/junit/rules/RuleChain.java","30ecbbc0ae0006da8b42468173bd9d95741982aa","Fri, 25 May 2012 14:29:19 +0200","Matthew Farwell","Fixes #427 inconsistent javadoc for test rules The examples for some test rules used"
"./src/main/java/org/junit/rules/RuleChain.java","e8349c5c609fea8706ca926b19fe9c9d0b637a8b","Wed, 14 Sep 2011 22:04:51 +0200","Stefan Birkner","Fixes gh-193 (allow explicit ordering of Rules)."
"./src/main/java/org/junit/rules/Stopwatch.java","103f204ada7363675fcd4a1e2e0a41030a15a9ae","Wed, 19 Dec 2012 00:33:32 +0100","Tibor Digana","Fix usage of actual/expected in #assertEquals"
"./src/main/java/org/junit/rules/Stopwatch.java","ebc674b2536e5bda7083dfd7841cf5c3c846b274","Sun, 9 Dec 2012 01:41:46 +0100","Tibor Digana","runtime in Stopwatch rule for Performace tests"
"./src/main/java/org/junit/rules/Stopwatch.java","ecb4de6a163e83471896956e1602dd5f4235952f","Fri, 23 Nov 2012 23:23:47 +0100","Tibor Digana","fixed grammar "own -> its own""
"./src/main/java/org/junit/rules/Stopwatch.java","9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3","Tue, 20 Nov 2012 20:25:16 +0100","Tibor Digana","standard JUnit class fields"
"./src/main/java/org/junit/rules/Stopwatch.java","96e051b21a8f277c03158c3db32e1b4e4b0389c2","Tue, 20 Nov 2012 10:56:55 +0100","Tibor Digana","getNanos() is a single thread confinement. Volatiles not needed!"
"./src/main/java/org/junit/rules/Stopwatch.java","cbcb29a2d80b04803566a3aaaffd9dceb53053bf","Mon, 19 Nov 2012 23:55:49 +0100","Tibor Digana","changes"
"./src/main/java/junit/framework/JUnit4TestAdapter.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/JUnit4TestAdapter.java","a30e87b6ac67f14a42b97d427bb1c8c6ba18cd87","Thu, 8 Apr 2010 13:04:17 -0400","dsaff","Clean-up after review in github's compare view.  Thanks, github."
"./src/main/java/junit/framework/JUnit4TestAdapter.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/junit/framework/JUnit4TestAdapter.java","9de3abe6c337247fd4b5d5af6406bdbb30403f50","Thu, 21 Jan 2010 15:52:21 -0500","David Saff","private fields and appropriate use of Plan"
"./src/main/java/junit/framework/JUnit4TestAdapter.java","7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f","Fri, 18 Dec 2009 09:05:43 -0500","David Saff","Big refactor"
"./src/main/java/junit/framework/JUnit4TestAdapter.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/AssertionFailedError.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/AssertionFailedError.java","1b809a4a2e914da039841ff3d1c457e8e5122ac3","Sun, 18 Sep 2011 22:59:27 +0200","Stefan Birkner","Fixed gh-318 (Empty message instead of null)"
"./src/main/java/junit/framework/AssertionFailedError.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/Protectable.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/Protectable.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/TestListener.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/framework/TestListener.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/TestListener.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/Test.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/Test.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/ComparisonFailure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/ComparisonFailure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/TestFailure.java","8a6ada28b1b763d1eecb009716e8c75660271565","Wed, 19 Feb 2014 00:48:14 +0700","Vladislav Bauer","Remove unnecessary usage of StringBuilder class (Java compiler will do it)"
"./src/main/java/junit/framework/TestFailure.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/main/java/junit/framework/TestFailure.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/TestFailure.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/TestCase.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/TestCase.java","dde798f89fbd1295bf7345ccfab17242ae9d01c0","Fri, 7 Sep 2012 00:26:06 +0200","Arjan Wulder","Issue #473 Implemented suggestions by kcooney"
"./src/main/java/junit/framework/TestCase.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/JUnit4TestAdapterCache.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/JUnit4TestAdapterCache.java","97402a3401c6cc2d45d395c0d9d636f483b5571c","Mon, 5 Apr 2010 14:13:46 -0400","dsaff","Most of the plans and mark2 nonsense gone"
"./src/main/java/junit/framework/JUnit4TestAdapterCache.java","f1f4fe290a3a35a9083d2e76e922b57350e05f34","Tue, 22 Dec 2009 11:18:29 -0500","David Saff","Cleaned up methods and method order"
"./src/main/java/junit/framework/JUnit4TestAdapterCache.java","6589127231db19458b696785bab3b839f9bde90f","Tue, 22 Dec 2009 10:52:53 -0500","David Saff","Added Plan, which knows about child relationships--we'll eventually deprecate children from Description.  Plan is first used in JUnit4TestAdapter"
"./src/main/java/junit/framework/JUnit4TestAdapterCache.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/TestResult.java","9a0aec8f0f59b2e58d691ef3326f2d0e5fcee60b","Thu, 20 Mar 2014 13:12:22 +0200","Alex Yursha","Remove redundant "extends" clause"
"./src/main/java/junit/framework/TestResult.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/framework/TestResult.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/TestResult.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/Assert.java","4802748c44552f844a8ccec16ba0cda2765db0f6","Fri, 14 Feb 2014 17:28:38 +0700","Vladislav Bauer","assertEquals: use old behavior (new Double, new Float)"
"./src/main/java/junit/framework/Assert.java","be322bce19656224268c0c4401792ab65e1db54f","Fri, 14 Feb 2014 00:05:25 +0700","Vladislav Bauer","Optimize memory consumption in deprecated junit.framework.Assert"
"./src/main/java/junit/framework/Assert.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/Assert.java","dde798f89fbd1295bf7345ccfab17242ae9d01c0","Fri, 7 Sep 2012 00:26:06 +0200","Arjan Wulder","Issue #473 Implemented suggestions by kcooney"
"./src/main/java/junit/framework/Assert.java","21fe96fa2262e7e1f3a725ef6b134bba74849883","Thu, 10 May 2012 13:28:45 -0500","a","style edit.  space after if"
"./src/main/java/junit/framework/Assert.java","2b4ea7d30d22341fb488df73901277a5194fd424","Thu, 10 May 2012 12:54:27 -0500","a","implementing kcooney's suggestion"
"./src/main/java/junit/framework/Assert.java","9237d8c9b3558b2adcb90ddc991c6bcb44c59dc0","Wed, 9 May 2012 14:47:22 -0500","a","deleted extra space"
"./src/main/java/junit/framework/Assert.java","a1b61ff5fa353842f57a4b9773c336f164f24f00","Sun, 8 Apr 2012 18:10:14 -0500","adriannistoruiuc","Addressing some style and performance issues with null error messages."
"./src/main/java/junit/framework/Assert.java","96a6ba68d16d00940d58151be5cb2ab642f6d51d","Fri, 29 Apr 2011 15:24:40 -0400","David Saff","Return us to Java 5 compatibility, a la github#187"
"./src/main/java/junit/framework/Assert.java","766343797294634c86186664c519d65d7d984c96","Fri, 7 Jan 2011 20:36:11 -0800","Kevin Cooney","Fix AssertionError.toString() when no messages are passed."
"./src/main/java/junit/framework/Assert.java","7aac4b19d359285041ccb51d575235339a1a8be0","Tue, 27 Oct 2009 08:52:06 -0400","David Saff","Fixed assertNull issue"
"./src/main/java/junit/framework/Assert.java","bf01cb023bf18d9c3ff3439886d62d5bb34d49ac","Sat, 1 Aug 2009 01:41:13 +0800","watisdit","Fixes sourceForge bug: When assertEquals(Object expected, Object actual) is failed, it outputs: java.lang.AssertionError: expected:<XXX> but was:<YYY>. assertNull(Object) could use the same message: expected:<null> but was:<YYY>."
"./src/main/java/junit/framework/Assert.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/JUnit4TestCaseFacade.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/JUnit4TestCaseFacade.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/ComparisonCompactor.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/ComparisonCompactor.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/framework/TestSuite.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/framework/TestSuite.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/junit/framework/TestSuite.java","e81be4536f5156b105fff4b7328fc3e4e7a24931","Sat, 5 Jan 2013 10:40:59 -0800","Kevin Cooney","Fix rawtype compiler warnings found when compiling with JDK7"
"./src/main/java/junit/framework/TestSuite.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/framework/TestSuite.java","cb69050a45f1688ad8c6e817cc511cfa67401f63","Fri, 26 Aug 2011 13:13:27 -0400","Jesse Glick","Preditably sort (test) methods in a class. The JVM does not guarantee any order. Visible here as an occasional failure in ParentRunnerTest.useChildHarvester on JDK 7 prior to fix."
"./src/main/java/junit/framework/TestSuite.java","70adacdc1a7f963c081a9752ba62200f8b798d56","Mon, 5 Apr 2010 21:43:42 -0400","dsaff","Improve handling of TestSuites"
"./src/main/java/junit/framework/TestSuite.java","c7874453182cde8e7b38cf3ce356d16d3d1dcde8","Wed, 29 Apr 2009 14:19:36 -0700","KentBeck","Fixed error message for malformed JUnit 3.8 test."
"./src/main/java/junit/framework/TestSuite.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/textui/TestRunner.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/textui/TestRunner.java","a254e9c8379cb021d1b85c49b2c0cdbd9b5d4e1d","Sun, 3 Mar 2013 01:27:40 -0500","Dustin Lam","Fix inconsistencies in javadocs."
"./src/main/java/junit/textui/TestRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/textui/TestRunner.java","17087303ee4f7f5c801e0d652a7e51a9f5d68297","Mon, 20 Apr 2009 13:57:25 -0400","David Saff","Fixed bug 1812200"
"./src/main/java/junit/textui/TestRunner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/textui/ResultPrinter.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/textui/ResultPrinter.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/textui/ResultPrinter.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/textui/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/runner/TestRunListener.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/runner/TestRunListener.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/runner/BaseTestRunner.java","b064a274adb12c6e866cb08dedc70534237330b2","Tue, 25 Feb 2014 18:24:04 +0000","Miltos Allamanis","Renamed all Throwables "t" to "e" for naming consistency."
"./src/main/java/junit/runner/BaseTestRunner.java","2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9","Sun, 16 Feb 2014 20:57:23 +0700","Vladislav Bauer","Replace StringBuffer to StringBuilder. Rename "buffer" to "sb" (in case of usage StringBuilder)"
"./src/main/java/junit/runner/BaseTestRunner.java","9d9019edd68b50dab6070117d48d8c093352d651","Tue, 3 Sep 2013 00:59:03 +0200","Stefan Birkner","Always close stream in readPreferences(). Fixes #729."
"./src/main/java/junit/runner/BaseTestRunner.java","e81be4536f5156b105fff4b7328fc3e4e7a24931","Sat, 5 Jan 2013 10:40:59 -0800","Kevin Cooney","Fix rawtype compiler warnings found when compiling with JDK7"
"./src/main/java/junit/runner/BaseTestRunner.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/runner/BaseTestRunner.java","17087303ee4f7f5c801e0d652a7e51a9f5d68297","Mon, 20 Apr 2009 13:57:25 -0400","David Saff","Fixed bug 1812200"
"./src/main/java/junit/runner/BaseTestRunner.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/runner/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/runner/Version.java","80b7fbad6e37f2b229a919f595a5263dd21da8fb","Wed, 12 Dec 2012 14:09:35 -0600","Paul Holser","Ensure no-generic-type-parms validator gets executed/tested."
"./src/main/java/junit/runner/Version.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/runner/Version.java","49d62f902ba7dba44b0b2b3b71e45004c667b2d5","Thu, 22 Sep 2011 11:34:41 -0400","David Saff","Development version goes to 11\!"
"./src/main/java/junit/runner/Version.java","c396cff8a7216e718c0a203a5829b25538964dd5","Tue, 13 Sep 2011 16:33:54 -0400","David Saff","Resolve merge conflicts between master and 4.10"
"./src/main/java/junit/runner/Version.java","74b8fc6a4c11d1fd6d584733398a77b83c54e6b6","Thu, 8 Sep 2011 23:49:42 +0200","Daniel Rothmaler","Updated build and release notes to 4.10"
"./src/main/java/junit/runner/Version.java","61f06547599bb6b98bca99d5bc457eb20bc17cab","Mon, 22 Aug 2011 14:20:52 -0400","David Saff","JUnit 4.9 final release--updating version number"
"./src/main/java/junit/runner/Version.java","7ec443add70809418d2bbe1314cd4744742d854d","Fri, 12 Aug 2011 10:37:01 -0400","David Saff","Update version to 4.9b4"
"./src/main/java/junit/runner/Version.java","cc617b399f369a0254edc714beb3551905fe799f","Wed, 6 Jul 2011 13:39:08 -0400","David Saff","Updated version to 4.9b3"
"./src/main/java/junit/runner/Version.java","12c1066d3cd6876a18715afaf06fbb5901ec975a","Tue, 18 Jan 2011 15:20:56 -0500","David Saff","Update to beta 2"
"./src/main/java/junit/runner/Version.java","751f75986b11336ac8310d73c89003b0b09ecb92","Mon, 3 Jan 2011 16:12:10 -0500","David Saff","For consistency, renaming version to 4.9b1"
"./src/main/java/junit/runner/Version.java","6ee76dc22e56457cb5904eb6c5c0bf97939880cb","Mon, 3 Jan 2011 14:49:23 -0500","David Saff","Update build_tests.sh to test "ant profile""
"./src/main/java/junit/runner/Version.java","f09cff79b941a525271f3f2838a9742b4c5c8d36","Wed, 12 May 2010 00:42:59 -0400","dsaff","alpha-ready implementation of SuiteBuilder"
"./src/main/java/junit/runner/Version.java","25fa1d53ff124bc82d9d449c37ff1dea186c3e42","Mon, 5 Apr 2010 22:17:07 -0400","dsaff","up version"
"./src/main/java/junit/runner/Version.java","ea80d1aa27f92ce103c43c0bf70a829d6e31111d","Tue, 8 Dec 2009 10:13:21 -0500","David Saff","Fix documentation reference to CategoryType"
"./src/main/java/junit/runner/Version.java","5a3a326096cf65a58272ee89a5ef1c164cfd9d33","Mon, 30 Nov 2009 23:08:09 -0500","David Saff","Final cleanup of Categories and release notes for 4.8"
"./src/main/java/junit/runner/Version.java","7aac4b19d359285041ccb51d575235339a1a8be0","Tue, 27 Oct 2009 08:52:06 -0400","David Saff","Fixed assertNull issue"
"./src/main/java/junit/runner/Version.java","a8629da96207e1ce71ead9ba9f85bc324f09bcab","Mon, 27 Jul 2009 22:16:50 -0400","David Saff","4.7 final"
"./src/main/java/junit/runner/Version.java","23ffc6baf5768057e366e183e53f4dfa86fbb005","Mon, 20 Jul 2009 23:35:01 -0400","David Saff","Updated version to RC1"
"./src/main/java/junit/runner/Version.java","017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc","Fri, 17 Jul 2009 17:30:24 -0400","David Saff","Re-deleted interceptor classes"
"./src/main/java/junit/runner/Version.java","50b77b1f3108aa77af0906162d552e513936c322","Mon, 15 Jun 2009 22:12:10 -0700","David Saff","Advance version, and beef up ErrorCollector with checkThat and checkPasses"
"./src/main/java/junit/runner/Version.java","89c38cee73bdcc7505da15d7e5de60cdf45a6c0e","Mon, 1 Jun 2009 13:13:17 -0400","David Saff","Improved documentation of new matchers"
"./src/main/java/junit/runner/Version.java","3762b9a6f23454691ad4d61000b148a00edaeace","Mon, 1 Jun 2009 11:08:41 -0400","David Saff","JUnitMatchers.matches creates any type"
"./src/main/java/junit/runner/Version.java","618d9ac96993540d11078fc963af9e9b4d479943","Wed, 27 May 2009 11:25:56 -0400","David Saff","Updated version"
"./src/main/java/junit/runner/Version.java","b8640d1e9e642aa6b2f1a2e416fdbbb87f7a4476","Mon, 11 May 2009 23:49:06 -0400","David Saff","Updated version"
"./src/main/java/junit/runner/Version.java","a24d1ce6ad8b83c58e0ecb1c9a17897d540d5bd5","Mon, 4 May 2009 13:40:44 -0400","David Saff","Don't edit Version.java manually.  Really.  I mean it."
"./src/main/java/junit/runner/Version.java","764c97d22e5a71fbfd6e545e6db34b277629da0a","Mon, 4 May 2009 13:38:04 -0400","David Saff","Linked to blog from release notes"
"./src/main/java/junit/runner/Version.java","233f889671ab856e45e62e266d34b50d395c185c","Mon, 4 May 2009 13:27:34 -0400","David Saff","Updated version number"
"./src/main/java/junit/runner/Version.java","c8059f0991a7c85561b851ee8feb3319bd1c11aa","Tue, 28 Apr 2009 16:09:42 -0400","David Saff","updated snapshot version"
"./src/main/java/junit/runner/Version.java","e5fa2ab32ad21b37d91a4f4173dc31a9bf3717a6","Mon, 20 Apr 2009 15:35:42 -0400","David Saff","We're 4.7 now"
"./src/main/java/junit/runner/Version.java","ef929258653948dc6d6b2d188a9360fe48c7cb87","Mon, 13 Apr 2009 21:43:51 -0400","David Saff","Updated to 4.6 final"
"./src/main/java/junit/runner/Version.java","68e5927ecf49bb21c396c423c3669ada15b7fe1b","Mon, 6 Apr 2009 22:31:18 -0400","David Saff","Last changes with Kent."
"./src/main/java/junit/runner/Version.java","8d9ac8d65204fe8cd7e1d9146f123a461952bae9","Wed, 12 Nov 2008 22:17:56 +0000","kbeck","Zeroing in on the JUnitMax error where it runs JUnit 3.8 tests multiple times."
"./src/main/java/junit/runner/Version.java","378e17964a4188bad9b3d966207a2f682072148e","Thu, 23 Oct 2008 18:59:35 +0000","kbeck","Better test sorting in MaxCore"
"./src/main/java/junit/runner/Version.java","c68a2ac49fac68864fb3e6f3b1a124446bbaaa41","Fri, 8 Aug 2008 18:06:37 +0000","dsaff","This is 4.5."
"./src/main/java/junit/runner/Version.java","28124c61f58334eb6dc8e4c024fc346509d03108","Wed, 23 Jul 2008 16:04:02 +0000","kbeck","*** empty log message ***"
"./src/main/java/junit/runner/Version.java","c96215c5d025336d8ab1d7d2ab57daee20869cea","Tue, 22 Jul 2008 17:43:13 +0000","kbeck","Preparing for 4.5 release. Published InitializationError and FrameworkMethod. Reverted failed assumptions so they work as in 4.4, counted as passing (later we'll give them their own category or typed events with callback)."
"./src/main/java/junit/runner/Version.java","3ef1b3ac5d45cd0023afc18739aadf4f15b9d80c","Thu, 26 Jun 2008 13:55:23 +0000","kbeck","Turned off javadoc and deprecated warnings and deleted java.hprof.txt."
"./src/main/java/junit/runner/Version.java","9bd1be07aa38d7fa2de048845f7b13458c9420d7","Tue, 24 Jun 2008 16:34:19 +0000","dsaff","Parallelize Statement builder methods in BlockJUnit4ClassRunner"
"./src/main/java/junit/runner/Version.java","99b37a20e91078d3f0cc641e4dbfc4ad4cac1e4e","Tue, 10 Jun 2008 17:45:57 +0000","kbeck","*** empty log message ***"
"./src/main/java/junit/runner/Version.java","3a7fe9fb7714a890a307ff6d7695e70548ebc457","Tue, 3 Jun 2008 16:16:52 +0000","dsaff","Added profile task to build.xml"
"./src/main/java/junit/runner/Version.java","ef32d036d0ff96328f622942514ca73b5f69556d","Tue, 13 May 2008 18:03:51 +0000","kbeck","Adding javadoc. Move Enclosed to experimental."
"./src/main/java/junit/runner/Version.java","b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c","Wed, 7 May 2008 00:32:09 +0000","kbeck","Cleaned up javadoc and ant build problems."
"./src/main/java/junit/runner/Version.java","37a611801fbea6ecc9b6356d9616e761c8b59b91","Thu, 20 Mar 2008 22:53:19 +0000","dsaff","Theory failures show names of sources, not values"
"./src/main/java/junit/runner/Version.java","47114275293f28be0f1cb9606a43ef1fe3173cb3","Fri, 25 Jan 2008 16:51:18 +0000","dsaff","Added assumption to TheoriesPerformanceTest, to prevent continuous integration from breaking on other boxes."
"./src/main/java/junit/runner/Version.java","cde32fb62ad8f5a05d700ce3189e131fa51739cb","Mon, 21 Jan 2008 20:35:00 +0000","dsaff","Theories are a lot faster, by caching the @Before and @After methods and sharing them between all Theory method invocations."
"./src/main/java/junit/runner/Version.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/extensions/TestDecorator.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/extensions/TestDecorator.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/extensions/RepeatedTest.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/extensions/RepeatedTest.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/extensions/package-info.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/extensions/ActiveTestSuite.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/extensions/ActiveTestSuite.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
"./src/main/java/junit/extensions/TestSetup.java","30f2b16525dabb477373be9ed3e76bb98b200806","Thu, 4 Oct 2012 22:16:45 +0200","Arjan Wulder","Issue #426 Applied new coding style"
"./src/main/java/junit/extensions/TestSetup.java","8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9","Fri, 7 Dec 2007 15:43:03 +0000","dsaff","- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests."
